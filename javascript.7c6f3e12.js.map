{"version":3,"sources":["../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/process/browser.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/path-browserify/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/base64-js/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/ieee754/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/buffer/node_modules/isarray/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/buffer/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/safe-buffer/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/randombytes/browser.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/inherits/inherits_browser.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash-base/node_modules/safe-buffer/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/events/events.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/stream-browser.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/buffer_list.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/destroy.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash-base/node_modules/readable-stream/errors-browser.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/state.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/util-deprecate/browser.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash-base/node_modules/readable-stream/lib/_stream_writable.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/string_decoder/lib/string_decoder.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/async_iterator.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/from-browser.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash-base/node_modules/readable-stream/lib/_stream_readable.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash-base/node_modules/readable-stream/lib/_stream_transform.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash-base/node_modules/readable-stream/lib/_stream_passthrough.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/pipeline.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash-base/node_modules/readable-stream/readable-browser.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash-base/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/md5.js/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/ripemd160/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/sha.js/hash.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/sha.js/sha.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/sha.js/sha1.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/sha.js/sha256.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/sha.js/sha224.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/sha.js/sha512.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/sha.js/sha384.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/sha.js/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/process-nextick-args/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/readable-stream/node_modules/isarray/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/readable-stream/lib/internal/streams/stream-browser.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/core-util-is/lib/util.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/readable-stream/lib/internal/streams/BufferList.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/readable-stream/lib/internal/streams/destroy.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/readable-stream/lib/_stream_writable.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/readable-stream/lib/_stream_duplex.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/readable-stream/lib/_stream_readable.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/readable-stream/lib/_stream_transform.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/readable-stream/lib/_stream_passthrough.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/readable-stream/readable-browser.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/readable-stream/writable-browser.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/readable-stream/duplex-browser.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/readable-stream/transform.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/readable-stream/passthrough.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/stream-browserify/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/cipher-base/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/create-hash/browser.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/create-hmac/legacy.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/create-hash/md5.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/create-hmac/browser.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-sign/browser/algorithms.json","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-sign/algos.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/pbkdf2/lib/precondition.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/pbkdf2/lib/default-encoding.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/pbkdf2/lib/to-buffer.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/pbkdf2/lib/sync-browser.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/pbkdf2/lib/async.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/pbkdf2/browser.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/des.js/lib/des/utils.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/minimalistic-assert/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/des.js/lib/des/cipher.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/des.js/lib/des/des.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/des.js/lib/des/cbc.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/des.js/lib/des/ede.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/des.js/lib/des.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-des/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-aes/modes/ecb.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/buffer-xor/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-aes/modes/cbc.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-aes/modes/cfb.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-aes/modes/cfb8.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-aes/modes/cfb1.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-aes/modes/ofb.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-aes/incr32.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-aes/modes/ctr.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-aes/modes/list.json","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-aes/modes/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-aes/aes.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-aes/ghash.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-aes/authCipher.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-aes/streamCipher.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/evp_bytestokey/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-aes/encrypter.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-aes/decrypter.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-aes/browser.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-des/modes.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-cipher/browser.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/diffie-hellman/node_modules/bn.js/lib/bn.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/miller-rabin/node_modules/bn.js/lib/bn.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/brorand/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/miller-rabin/lib/mr.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/diffie-hellman/lib/generatePrime.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/diffie-hellman/lib/primes.json","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/diffie-hellman/lib/dh.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/diffie-hellman/browser.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-sign/node_modules/safe-buffer/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/stream-browser.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/buffer_list.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/destroy.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/state.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_writable.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/async_iterator.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/from-browser.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_readable.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_transform.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_passthrough.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/pipeline.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-sign/node_modules/readable-stream/readable-browser.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-rsa/node_modules/bn.js/lib/bn.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-rsa/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/elliptic/package.json","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/elliptic/node_modules/bn.js/lib/bn.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/minimalistic-crypto-utils/lib/utils.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/elliptic/lib/elliptic/utils.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/elliptic/lib/elliptic/curve/base.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/elliptic/lib/elliptic/curve/short.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/elliptic/lib/elliptic/curve/mont.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/elliptic/lib/elliptic/curve/edwards.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/elliptic/lib/elliptic/curve/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash.js/lib/hash/utils.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash.js/lib/hash/common.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash.js/lib/hash/sha/common.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash.js/lib/hash/sha/1.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash.js/lib/hash/sha/256.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash.js/lib/hash/sha/224.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash.js/lib/hash/sha/512.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash.js/lib/hash/sha/384.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash.js/lib/hash/sha.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash.js/lib/hash/ripemd.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash.js/lib/hash/hmac.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hash.js/lib/hash.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/elliptic/lib/elliptic/curves.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/hmac-drbg/lib/hmac-drbg.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/elliptic/lib/elliptic/ec/key.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/elliptic/lib/elliptic/ec/signature.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/elliptic/lib/elliptic/ec/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/elliptic/lib/elliptic/eddsa/key.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/elliptic/lib/elliptic/eddsa/signature.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/elliptic/lib/elliptic/eddsa/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/elliptic/lib/elliptic.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/bn.js/lib/bn.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/asn1.js/node_modules/bn.js/lib/bn.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/safer-buffer/safer.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/asn1.js/lib/asn1/base/reporter.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/asn1.js/lib/asn1/base/buffer.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/asn1.js/lib/asn1/base/node.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/asn1.js/lib/asn1/constants/der.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/asn1.js/lib/asn1/encoders/der.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/asn1.js/lib/asn1/encoders/pem.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/asn1.js/lib/asn1/encoders/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/asn1.js/lib/asn1/decoders/der.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/asn1.js/lib/asn1/decoders/pem.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/asn1.js/lib/asn1/decoders/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/asn1.js/lib/asn1/api.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/asn1.js/lib/asn1/base/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/asn1.js/lib/asn1/constants/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/asn1.js/lib/asn1.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/parse-asn1/certificate.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/parse-asn1/asn1.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/parse-asn1/aesid.json","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/parse-asn1/fixProc.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/parse-asn1/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-sign/browser/curves.json","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-sign/browser/sign.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-sign/browser/verify.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/browserify-sign/browser/index.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/create-ecdh/node_modules/bn.js/lib/bn.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/create-ecdh/browser.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/public-encrypt/mgf.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/public-encrypt/xor.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/public-encrypt/node_modules/bn.js/lib/bn.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/public-encrypt/withPublic.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/public-encrypt/publicEncrypt.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/public-encrypt/privateDecrypt.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/public-encrypt/browser.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/randomfill/browser.js","../../../../../../../nix/store/rj2108wvi21f3y7vx7crk55nirribh8g-node_parcel-bundler-1.12.4/lib/node_modules/parcel-bundler/node_modules/crypto-browserify/index.js","../gnugo.js","loader.js","index.js"],"names":["cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","ReflectOwnKeys","R","Reflect","ReflectApply","target","receiver","Function","ProcessEmitWarning","warning","console","warn","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","Number","isNaN","value","EventEmitter","init","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","type","prepend","m","events","existing","create","newListener","unshift","warned","w","String","emitter","count","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","arr","n","copy","spliceOne","list","index","pop","ret","Promise","resolve","reject","eventListener","errorListener","slice","err","defineProperty","enumerable","get","set","arg","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","message","context","handler","position","originalListener","shift","keys","key","rawListeners","eventNames","require","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","configurable","writable","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_require","Buffer","_require2","inspect","custom","copyBuffer","src","offset","BufferList","head","tail","v","entry","data","next","s","p","alloc","allocUnsafe","hasStrings","_getString","_getBuffer","c","str","nb","buf","_","options","depth","customInspect","destroy","cb","_this","readableDestroyed","_readableState","destroyed","writableDestroyed","_writableState","errorEmitted","emitErrorNT","_destroy","emitCloseNT","emitErrorAndCloseNT","self","emitClose","undestroy","reading","ended","endEmitted","ending","finalCalled","prefinished","finished","errorOrDestroy","stream","rState","wState","autoDestroy","_inheritsLoose","subClass","superClass","constructor","__proto__","codes","createErrorType","code","Base","NodeError","_Base","arg1","arg2","arg3","getMessage","oneOf","expected","thing","isArray","map","join","startsWith","search","pos","substr","endsWith","this_len","substring","includes","start","indexOf","actual","determiner","msg","replace","ERR_INVALID_OPT_VALUE","highWaterMarkFrom","isDuplex","duplexKey","highWaterMark","getHighWaterMark","hwm","isFinite","Math","floor","objectMode","Duplex","WriteReq","chunk","encoding","callback","CorkedRequest","finish","onCorkedFinish","Writable","WritableState","internalUtil","deprecate","Stream","OurUint8Array","global","Uint8Array","_uint8ArrayToBuffer","from","_isUint8Array","isBuffer","realHasInstance","destroyImpl","_require$codes","ERR_INVALID_ARG_TYPE","ERR_METHOD_NOT_IMPLEMENTED","ERR_MULTIPLE_CALLBACK","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","nop","writableObjectMode","needDrain","noDecode","decodeStrings","defaultEncoding","writing","corked","sync","bufferProcessing","onwrite","writecb","writelen","bufferedRequest","lastBufferedRequest","pendingcb","bufferedRequestCount","corkedRequestsFree","write","_write","writev","_writev","final","_final","writeAfterEnd","validChunk","decodeChunk","writeOrBuffer","isBuf","newChunk","last","doWrite","onwriteError","finishMaybe","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","l","buffer","holder","allBuffers","callFinal","prefinish","need","endWritable","corkReq","getBuffer","current","out","Symbol","hasInstance","pipe","cork","uncork","setDefaultEncoding","toLowerCase","end","_undestroy","objectKeys","Readable","method","allowHalfOpen","readable","onend","onEndNT","ERR_STREAM_PREMATURE_CLOSE","called","_len","_key","isRequest","setHeader","abort","eos","opts","onlegacyfinish","onfinish","writableEnded","readableEnded","onerror","onclose","onrequest","req","_Object$setPrototypeO","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","done","readAndResolve","iter","read","onReadable","wrapForNext","lastPromise","then","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","setPrototypeOf","promise","asyncIterator","_this2","createReadableStreamAsyncIterator","_Object$create","iterator","ReadableState","EE","EElistenerCount","debug","debugUtil","debuglog","StringDecoder","ERR_STREAM_PUSH_AFTER_EOF","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","kProxyEvents","event","fn","readableObjectMode","pipes","pipesCount","flowing","needReadable","emittedReadable","readableListening","resumeScheduled","paused","awaitDrain","readingMore","decoder","_read","readableAddChunk","addToFront","skipChunkCheck","onEofChunk","chunkInvalid","addChunk","maybeReadMore","emitReadable","isPaused","setEncoding","enc","content","clear","MAX_HWM","computeNewHighWaterMark","howMuchToRead","emitReadable_","flow","maybeReadMore_","pipeOnDrain","updateReadableListening","resume","nReadingNextTick","resume_","fromList","first","consume","endReadable","endReadableNT","xs","x","parseInt","nOrig","doRead","dest","pipeOpts","doEnd","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","ondrain","ondata","cleanedUp","pause","dests","splice","ev","res","wrap","_fromList","iterable","Transform","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","ts","_transformState","transforming","writechunk","rs","needTransform","writeencoding","transform","_transform","flush","_flush","err2","PassThrough","ERR_MISSING_ARGS","destroyer","closed","to","popCallback","streams","pipeline","destroys","reduce","inherits","throwIfNotStringOrBuffer","val","prefix","HashBase","blockSize","_block","_blockSize","_blockOffset","_length","_finalized","update","digest","block","_update","j","carry","_digest","toString","fill","pna","asyncWrite","util","writableHwm","writableHighWaterMark","defaultHwm","valid","MAX_ALLOC","pow","iterations","keylen","pVersionMajor","ArrayBuffer","isView","md5","RIPEMD160","sha","checkParameters","toBuffer","ZEROS","sizes","sha1","sha224","sha256","sha384","sha512","rmd160","ripemd160","Hmac","alg","saltLen","hash","getDigest","blocksize","ipad","opad","ipad1","ipad2","size","rmd160Func","shaFunc","pbkdf2","password","salt","hmac","DK","block1","destPos","hLen","ceil","writeUInt32BE","T","U","k","ZERO_BUF","subtle","crypto","toBrowser","checks","checkNative","algo","browser","importKey","deriveBits","prom","browserPbkdf2","catch","resolvePromise","resp","pbkdf2Sync","oldBrowser","safeBuffer","randombytes","kBufferMaxLength","kMaxLength","msCrypto","kMaxUint32","assertOffset","assertSize","randomFill","actualFill","ourBuf","uint","getRandomValues","randomFillSync","Module","moduleOverrides","hasOwnProperty","status","toThrow","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","ENVIRONMENT_IS_WORKER","window","importScripts","scriptDirectory","nodeFS","nodePath","__dirname","filename","binary","assert","ex","ExitStatus","f","readbuffer","scriptArgs","quit","location","href","document","currentScript","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","onload","log","print","printErr","dynamicAlloc","DYNAMICTOP_PTR","HEAP32","_emscripten_get_heap_size","_emscripten_resize_heap","getNativeTypeSize","bits","warnOnce","text","shown","stackSave","stackRestore","stackAlloc","asm2wasmImports","y","tempRet0","Runtime","wasmMemory","WebAssembly","ABORT","condition","ccall","ident","returnType","argTypes","toC","stringToUTF8","writeArrayToMemory","HEAP8","func","getCFunc","cArgs","stack","converter","convertReturnValue","UTF8ToString","Boolean","setValue","ptr","noSafe","charAt","HEAP16","tempI64","tempDouble","Math_abs","Math_min","Math_floor","Math_ceil","HEAPF32","HEAPF64","ALLOC_NORMAL","ALLOC_NONE","allocate","slab","types","allocator","zeroinit","singleType","_malloc","max","stop","subarray","HEAPU8","typeSize","previousType","curr","getMemory","runtimeInitialized","UTF8Decoder","TextDecoder","UTF8ArrayToString","u8Array","idx","maxBytesToRead","endIdx","endPtr","decode","u0","u1","u2","fromCharCode","ch","stringToUTF8Array","outU8Array","outIdx","maxBytesToWrite","startIdx","u","charCodeAt","outPtr","lengthBytesUTF8","writeAsciiToMemory","dontAddNull","demangleAll","stackTrace","js","jsStackTrace","PAGE_SIZE","HEAPU32","alignUp","multiple","updateGlobalBufferViews","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","STATIC_BASE","STACK_MAX","STACK_BASE","DYNAMIC_BASE","TOTAL_MEMORY","checkStackCookie","byteLength","Memory","callRuntimeCallbacks","callbacks","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","runtimeExited","imul","fround","clz32","trunc","abs","cos","sin","tan","acos","asin","atan","atan2","exp","sqrt","round","min","runDependencies","runDependencyWatcher","dependenciesFulfilled","runDependencyTracking","addRunDependency","id","setInterval","clearInterval","dep","removeRunDependency","memoryInitializer","dataURIPrefix","wasmBinaryFile","path","getBinary","providedBuffer","Table","createWasm","info","NaN","Infinity","receiveInstance","Instance","___emscripten_environ_constructor","tempDoublePtr","ENV","___setErrNo","PATH","splitPath","splitPathRe","exec","normalizeArray","parts","allowAboveRoot","up","normalize","isAbsolute","trailingSlash","split","dirname","result","root","basename","lastSlash","extname","paths","join2","r","resolvedPath","resolvedAbsolute","FS","relative","trim","fromParts","toParts","samePartsLength","outputParts","TTY","ttys","shutdown","register","dev","ops","input","output","registerDevice","stream_ops","tty","node","rdev","ErrnoError","ERRNO_CODES","ENODEV","seekable","close","get_char","ENXIO","bytesRead","EIO","EAGAIN","timestamp","Date","now","put_char","default_tty_ops","BUFSIZE","isPosixPlatform","platform","fd","stdin","usingDevice","fs","openSync","readSync","closeSync","prompt","readline","intArrayFromString","default_tty1_ops","MEMFS","ops_table","mount","createNode","parent","mode","isBlkdev","isFIFO","EPERM","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","file","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsRegularArray","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","oldContents","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","ENOENT","old_node","new_dir","new_name","new_node","lookupNode","ENOTEMPTY","entries","newname","oldpath","EINVAL","canOwn","whence","prot","flags","allocated","ENOMEM","byteOffset","mmapFlags","IDBFS","dbs","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","DB_VERSION","DB_STORE_NAME","syncfs","populate","getLocalSet","local","getRemoteSet","remote","dst","reconcile","getDB","db","onupgradeneeded","fileStore","transaction","objectStoreNames","contains","objectStore","createObjectStore","indexNames","createIndex","unique","onsuccess","preventDefault","isRealDir","toAbsolute","check","mountpoint","stat","openKeyCursor","cursor","primaryKey","continue","loadLocalEntry","lookupPath","storeLocalEntry","mkdir","writeFile","chmod","utime","removeLocalEntry","loadRemoteEntry","store","storeRemoteEntry","put","removeRemoteEntry","delete","total","e2","remove","errored","completed","sort","reverse","NODEFS","isWindows","staticInit","match","flagsForNodeMap","bufferFrom","arrayBuffer","getMode","lstatSync","realPath","flagsForNode","newFlags","chmodSync","date","utimesSync","truncateSync","mkdirSync","writeFileSync","oldNode","newDir","newName","oldPath","newPath","renameSync","unlinkSync","rmdirSync","readdirSync","symlinkSync","readlinkSync","NODEJS_PATH","nfd","writeSync","fstatSync","WORKERFS","DIR_MODE","FILE_MODE","reader","FileReaderSync","createdParents","ensureParent","base","lastModifiedDate","pack","files","getTime","ab","readAsArrayBuffer","ERRNO_MESSAGES","ESRCH","EINTR","E2BIG","ENOEXEC","EBADF","ECHILD","EWOULDBLOCK","EACCES","EFAULT","ENOTBLK","EBUSY","EEXIST","EXDEV","ENOTDIR","EISDIR","ENFILE","EMFILE","ENOTTY","ETXTBSY","EFBIG","ENOSPC","ESPIPE","EROFS","EMLINK","EPIPE","EDOM","ERANGE","ENOMSG","EIDRM","ECHRNG","EL2NSYNC","EL3HLT","EL3RST","ELNRNG","EUNATCH","ENOCSI","EL2HLT","EDEADLK","ENOLCK","EBADE","EBADR","EXFULL","ENOANO","EBADRQC","EBADSLT","EDEADLOCK","EBFONT","ENOSTR","ENODATA","ETIME","ENOSR","ENONET","ENOPKG","EREMOTE","ENOLINK","EADV","ESRMNT","ECOMM","EPROTO","EMULTIHOP","EDOTDOT","EBADMSG","ENOTUNIQ","EBADFD","EREMCHG","ELIBACC","ELIBBAD","ELIBSCN","ELIBMAX","ELIBEXEC","ENOSYS","ENAMETOOLONG","ELOOP","EOPNOTSUPP","EPFNOSUPPORT","ECONNRESET","ENOBUFS","EAFNOSUPPORT","EPROTOTYPE","ENOTSOCK","ENOPROTOOPT","ESHUTDOWN","ECONNREFUSED","EADDRINUSE","ECONNABORTED","ENETUNREACH","ENETDOWN","ETIMEDOUT","EHOSTDOWN","EHOSTUNREACH","EINPROGRESS","EALREADY","EDESTADDRREQ","EMSGSIZE","EPROTONOSUPPORT","ESOCKTNOSUPPORT","EADDRNOTAVAIL","ENETRESET","EISCONN","ENOTCONN","ETOOMANYREFS","EUSERS","EDQUOT","ESTALE","ENOTSUP","ENOMEDIUM","EILSEQ","EOVERFLOW","ECANCELED","ENOTRECOVERABLE","EOWNERDEAD","ESTRPIPE","mounts","devices","nextInode","nameTable","currentPath","initialized","ignorePermissions","trackingDelegate","tracking","openFlags","READ","WRITE","filesystems","syncFSRequests","handleFSError","errno","defaults","follow_mount","recurse_count","current_path","islast","isMountpoint","mounted","follow","getPath","isRoot","hashName","parentid","hashAddNode","name_next","hashRemoveNode","mayLookup","nodeName","FSNode","isFolder","isDevice","destroyNode","isSocket","flagModes","modeStringToFlags","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","getStream","createStream","FSStream","isRead","isWrite","isAppend","newStream","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","doCallback","pseudo","mountRoot","unmount","mkdirTree","dirs","d","mkdev","newpath","old_path","new_path","old_dirname","old_dir","new_dirname","old_name","dontFollow","lstat","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","created","ungotten","readFiles","trackingFlags","isClosed","getdents","seeking","bytesWritten","munmap","ioctl","cmd","readFile","actualNumBytes","createDefaultDirectories","createDefaultDevices","random_device","randomBuffer","crypto_module","random","createDevice","createSpecialDirectories","createStandardStreams","ensureErrnoError","setErrno","fflush","canRead","canWrite","joinPath","forceRelative","absolutePath","standardizePath","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createFolder","createPath","part","createFile","properties","createDataFile","createLink","forceLoadFile","success","createLazyFile","LazyUint8Array","lengthKnown","chunks","chunkOffset","chunkSize","chunkNum","getter","setDataGetter","cacheLength","datalength","header","getResponseHeader","hasByteServing","usesGzip","doXHR","lazyArray","setRequestHeader","overrideMimeType","_chunkSize","createPreloadedFile","dontCreateFile","preFinish","Browser","fullname","getUniqueRunDependency","orig","processData","byteArray","handled","plugin","asyncLoad","DB_NAME","pathname","saveFilesToDB","openRequest","ok","fail","putRequest","loadFilesFromDB","getRequest","SYSCALLS","DEFAULT_POLLMASK","mappings","calculateAt","dirfd","dirstream","doStat","doMsync","addr","doMkdir","doMknod","doReadlink","bufsize","endChar","doAccess","amode","doDup","suggestFD","suggest","doReadv","iov","iovcnt","doWritev","varargs","getStr","getStreamFromFD","getSocketFromFD","socket","SOCKFS","getSocket","getSocketAddress","allowNull","addrp","addrlen","__read_sockaddr","DNS","lookup_addr","get64","low","high","getZero","emscripten_realloc_buffer","old","oldSize","grow","requestedSize","MIN_TOTAL_MEMORY","replacement","___tm_current","_tzset","__get_timezone","getTimezoneOffset","winter","summer","__get_daylight","winterName","extractZone","summerName","winterNamePtr","summerNamePtr","__get_tzname","toTimeString","_localtime_r","time","tmPtr","getSeconds","getMinutes","getHours","getDate","getMonth","getFullYear","getDay","yday","summerOffset","winterOffset","zonePtr","stringy","u8array","numBytesWritten","asmGlobalArg","asmLibraryArg","setTempRet0","getTempRet0","abortStackOverflow","allocSize","nullFunc_ii","nullFunc_iii","nullFunc_iiii","nullFunc_iiiii","nullFunc_vi","nullFunc_vii","nullFunc_viii","nullFunc_viiiii","nullFunc_viiiiii","nullFunc_viiiiiii","___assert_fail","line","___buildEnvironment","environ","MAX_ENV_VALUES","poolPtr","envPtr","strings","totalSize","ptrSize","___lock","___syscall140","which","offset_low","___syscall145","___syscall146","___syscall221","___syscall5","___syscall54","op","argp","___syscall6","___unlock","_abort","_emscripten_memcpy_big","num","_exit","exit","implicit","checkUnflushedContent","has","_gettimeofday","_localtime","_sysconf","maxHeapSize","navigator","_time","_times","_memset","abortOnCannotGrowMemory","asm","real____emscripten_environ_constructor","real____errno_location","real___get_daylight","real___get_environ","real___get_timezone","real___get_tzname","real__fflush","real__free","real__get_version","real__llvm_bswap_i32","real__malloc","real__play","real__sbrk","real_establishStackSpace","real_stackAlloc","real_stackRestore","real_stackSave","doRun","postRun","addOnPostRun","preRun","addOnPreRun","runCaller","abortDecorators","what","JSON","stringify","extra","decorator","main","load","wasmURL","hasPrefix","decodeBase64","atob","keyStr","chr1","chr2","chr3","enc2","enc3","enc4","tryParseAsDataURI","isDataURI","intArrayFromBase64","decoded","bytes","wasmXHR","wasmBinary","wasmURLBytes","loader","querySelector","innerHTML","addEventListener"],"mappings":"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,sCAAuC5J,WACjF4J,EAAgB,uBAAwB,SAAU3G,GACzC,MAAA,qBAAuBA,GAC7BjD,WACH4J,EAAgB,qCAAsC,oCACtDhP,OAAOC,QAAQ8O,MAAQA;A8C2uGvB,AlCAA,Adz2GA,ACoGA,AHlGA,A2Eu2GA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,AbrwGA,AHlGA,A2Eu2GA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AbrwGA,AHlGA,A2Eu2GA,AxDAA,A1BAA,AsFAA,O7Ev2GA,CgDu2GA,AlCAA,AbrwGA,AHlGA,A2Eu2GA,AxDAA,A1BAA,AsFAA,Q7Ev2GS5K,EgDu2GT,AlCAA,Adv2GiBqF,AFCjB,A2Es2GA,AxDAA,A1BAA,AsFAA,C5Ev2GA,CDAyBC,AFCzB,EAAA,CED+CN,GgDF/C,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EE+CA,CCAtC2D,CDA6C1I,AFItD,CGJiB4D,EAAK+E,G+CFtB,AlCAA,AbGMC,AwEHN,AxDAA,A1BAA,AsFAA,C7EE6D7D,CgDF7D,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C/EMA,CGHM6D,C+CFN,AlCAA,AhBKA,A2ELA,AxDAA,A1BAA,AsFAA,C7ECkExD,ACCpD,CHGd,EEJ+EpF,CFK/E,CGFM6I,CDHyE7I,CCGrD,CHE1B,IkDHA,AlCAA,AbC+B8I,AHE/B,A2EHA,AxDAA,A1BAA,AsFAA,C7EFsF7I,IFKtF,EACA,EkDJA,AlCAA,AhBIA,A2EJA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C/EIA,CkDJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C/EIA,EkDHA,AlCAA,AbAiD,AwEAjD,AxDAA,A1BAA,AsFAA,C/EcA,GkDdA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C5EAsD6I,C+CAtD,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EH6G,CAAMxD,EFiBnH,EkDdA,AlCAA,AdHmHA,AFiBnH,A2EdA,AxDAA,A1BAA,AsFAA,E7EH6HtF,AFiB7H,EkDdA,AlCAA,AhBcA,A2EdA,AxDAA,A1BAA,AsFAA,G/EeA,CGfqE+I,CDH+D9I,CgDGpI,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C/EeA,EAAA,EGdM+I,AHcN,EGd0B,AHc1B,GATA,EGL+BC,AHK/B,MET0J7D,AFS1J,EkDDA,AlCAA,AhBCA,A2EDA,AxDAA,A1BAA,AsFAA,C7ERuKC,IAAgBC,EAAUA,AFSjM,CGLiD,C+CIjD,AlCAA,AdRyMC,AFSzM,A2EDA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AbJsD0D,AwEItD,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,AdTgN,AyEShN,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I/EAA,EAAA,CkDAA,AlCAA,AdT0NzD,AyES1N,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EVwOxF,ACInK+I,G+CMrE,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7EVwO/I,GCMlO6I,EHIN,EEV+OpD,GCMzOoD,C+CKN,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C/EDA,CkDCA,AlCAA,AbL2BG,AwEK3B,AxDAA,A1BAA,AsFAA,G5EJQL,EACFA,EAAG/E,AHET,GkDCA,AlCAA,AbFeA,AHIf,A2EFA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AhBEA,A2EFA,AxDAA,A1BAA,AsFAA,E5EDW,AHGX,KEbwQwB,ACUxP6D,EDVgQzD,CgDYhR,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C/EEA,CkDFA,AlCAA,AdZqR1B,AyEYrR,AxDAA,A1BAA,AsFAA,O/EEA,GkDFA,AlCAA,AbAkB,AwEAlB,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,AdZqSiB,AFcrS,A2EFA,AxDAA,A1BAA,AsFAA,C5EAuBkE,C+CCvB,AlCAA,Adb0SrL,AyEa1S,AxDAA,A1BAA,AsFAA,C/EQA,CkDRA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C/EQA,EErB+SE,MAAMiH,CgDarT,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7Eb2TO,AFqB3T,CGTsC4D,EDZwSnE,IFqB9U,GErB8UA,CgDa9U,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EXA,CgDgBA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C/EGA,EGRakE,AHQb,KEnBSvD,ACWIuD,C+CKb,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EhBuBzJ,CgDgBvB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AdhBsC,AyEgBtC,AxDAA,A1BAA,AsFAA,C/EMA,CkDNA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C/EMA,CEtBsC,CgDiBtC,AlCAA,AhBKA,A2ELA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,AdjB0C7B,AFwB1C,A2EPA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AdjB8C,ACWlBuL,AHa5B,A2EPA,AxDAA,A1BAA,AsFAA,E7EjBiDvL,EAAID,CgDiBrD,AlCAA,AhBOA,A2EPA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7ElB+DZ,ACWpB,AHa3C,CkDNA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C5ENQnB,AHYR,CkDHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C5ETgB4B,AHYhB,GExBuEI,AFyBvE,CkDJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E/EIA,CEzB4E,CAAMgI,CCYzDwD,EAAa,CDZ4CxD,CgDqBlF,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7ErB2G,CgDsB3G,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C5EV4C/B,I+CU5C,AlCAA,AdtB2FlG,ACSnF/B,AwEaR,AxDAA,A1BAA,AsFAA,E5EbgB4B,CHgBhB,EACA,CkDJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7EtBqGI,CgDuBrG,AlCAA,AbdyBwL,AHiBzB,A2EHA,AxDAA,A1BAA,AsFAA,E7EvBkHzL,ACS5E,EHiBtC,CkDHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E5Ed4CkG,IAOjC,C+COX,AlCAA,AdvB4HjG,AyEuB5H,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,AhBAA,A2EAA,AxDAA,A1BAA,AsFAA,C7E1BiI,GAAQA,ACqBnI,C+CKN,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E1B6I,EAAKoC,CgD0BlJ,AlCAA,AbLW+I,AwEKX,AxDAA,A1BAA,AsFAA,C7E1B0J9I,IgD4B1J,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7E5BiK2F,IgD4BjK,AlCAA,Ad5B0K,AyE4B1K,AxDAA,A1BAA,AsFAA,G7E5BgLC,CgD6BhL,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C5EPSkD,KAAAA,C+COT,AlCAA,Ad7BwL,AyE6BxL,AxDAA,A1BAA,AsFAA,C/EDA,EkDCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K/EDA,CE5BkM9D,CgD6BlM,AlCAA,AhBDA,A2ECA,AxDAA,A1BAA,AsFAA,E7E7ByMa,AF4BzM,EkDEA,AlCAA,Ad9ByNrG,ACsBjMuJ,AHMxB,A2EEA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,Ad9BiO/D,AyE8BjO,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,Ad/BsOW,AF+BtO,A2EAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,Ad/B6OX,AF+B7O,A2EAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C5EZoC,CDtB+NhF,AF+BnQ,EGLM,C+CQN,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7ElC0Q8F,AC0B/PmD,E+CQX,AlCAA,AhBHA,A2EGA,AxDAA,A1BAA,AsFAA,E/EHA,CkDGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C/EHA,CkDGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E/EFA,CkDEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E/EFA,CkDEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C5EPSA,KAAAA,C+CmBT,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7E9CuSjJ,CgD8CvS,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BTA,AlCAA,AhBLA,A2EKA,AxDAA,A1BAA,AsFAA,E/EJA,EEjC8S+F,IC2BtRgD,AHMxB,IAAA,KkDIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,AbXoC,AwEWpC,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AdtC+TvJ,AyEsC/T,AxDAA,A1BAA,AsFAA,C5ERO4J,AHGP,CEjCuUpJ,IC8BhUoJ,E+CQP,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EtC8UtD,CgDwC9U,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,AbVgBlC,AwEUhB,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C5EbuB,C+CavB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C5Eb6B,C+Cc7B,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I/ETA,EGLuCA,EHKvC,CkDSA,AlCAA,Ad5CwW+B,AyE4CxW,AxDAA,A1BAA,AsFAA,C5EbSgD,AHIT,EkDYA,AlCAA,AhBZA,A2EYA,AxDAA,A1BAA,AsFAA,C7E/C2X5I,AC+B5W6D,ED/BoX5D,ACgCxX4I,AHaX,CkDGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C5EhBiBK,C+CgBjB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7EhD0YtD,IgDgD1Y,AlCAA,AdhDmZC,AyEgDnZ,AxDAA,A1BAA,AsFAA,C/EZA,IAAA,CGFkBgD,CHGlB,CErC2Z,ACkCnYK,E+CcxB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BCA,AlCAA,AdjDqajE,AyEiDra,AxDAA,A1BAA,AsFAA,G7EjD4ahF,GgDiD5a,AlCAA,AbfuCkJ,AwEevC,AxDAA,A1BAA,AsFAA,C/EZA,EACA,CkD+IA,AlCAA,AdrLmbrF,AyEqLnb,AxDAA,A1BAA,AsFAA,C/E/IA,KAAA,EAAA,CkD+IA,AlCAA,Ab/IQlI,AwE+IR,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,Ab/IgB4B,AHEhB,A2E6IA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AhB7IA,A2E6IA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AdrLkciC,AyEqLlc,AxDAA,A1BAA,AsFAA,E7ErL0cwF,CgDwL1c,AlCAA,AhBhJA,A2EgJA,AxDAA,A1BAA,AsFAA,C7ExL+chF,CCsCtbqJ,CHKzB,CkD2IA,AlCAA,AbhJsCT,AwEgJtC,AxDAA,A1BAA,AsFAA,C/E3IA,GkD2IA,AlCAA,AdtLsdnD,ACmC9cmD,AwEmJR,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AbnJcK,AHQd,A2E2IA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C/E1IA,CkD0IA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E/EvIA,EAAA,CkDuIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AbpJ6BC,AwEoJ7B,AxDAA,A1BAA,AsFAA,K/EvIA,EkDuIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EvL+evD,EgDwL/e,AlCAA,AdxLufX,AyEwLvf,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AbrJ4C,AHa5C,A2EwIA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AdxL6gBxF,ACoCrgB7D,AwEoJR,AxDAA,A1BAA,AsFAA,C/EvIA,CkDuIA,AlCAA,AbpJgB4B,AwEoJhB,AxDAA,A1BAA,AsFAA,E/EvIA,EkDuIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,AdzL6gBiC,AyEyL7gB,AxDAA,A1BAA,AsFAA,E7EvLA,EgDuLA,AlCAA,AbrJyB8J,AwEqJzB,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AbrJ8CV,AwEqJ9C,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AbrJqDhF,AwEqJrD,AxDAA,A1BAA,AsFAA,G7EvLSiC,CC+BDlK,CD/BiBqK,CC+BTzI,AHgBhB,CE/C8ByH,CFgD9B,CEhDmC1E,EgDuLnC,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EvL2M0F,EgDuL3M,AlCAA,AhBvIA,A2EuIA,AxDAA,A1BAA,AsFAA,C5ExJyBsD,E+C0JzB,AlCAA,Ab1J8CV,AwE0J9C,AxDAA,A1BAA,AsFAA,C/EzIA,CEhDgD5D,AC+BKpB,E+C0JrD,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C5EnJe+E,C+CuJf,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E7LuD3C,CCuCjDrK,C+CqJN,AlCAA,Ad5L8DqE,AyE4L9D,AxDAA,A1BAA,AsFAA,C5ErJczC,CHSd,CkD4IA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,Ad5LqEsG,AyE4LrE,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,AbrJuBwF,AwEqJvB,AxDAA,A1BAA,AsFAA,E5ErJoCT,C+CsJpC,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AbrJMD,AwEqJN,AxDAA,A1BAA,AsFAA,E5ErJS/E,C+CqJT,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,AbtJMjI,AwEsJN,AxDAA,A1BAA,AsFAA,C7EhMoFqK,CC0CtEzI,C+CsJd,AlCAA,AdhMyFyH,AyEgMzF,AxDAA,A1BAA,AsFAA,E7EhM8F,CAAE1E,CgDgMhG,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,AhB9IA,A2E8IA,AxDAA,A1BAA,AsFAA,C5EtJuB+I,CD1CgF/I,CgDiMvG,AlCAA,AbvJoCsI,AwEuJpC,AxDAA,A1BAA,AsFAA,C7EjM8G9E,CgDiM9G,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E/E/IA,CkD+IA,AlCAA,AbnJS,AwEmJT,AxDAA,A1BAA,AsFAA,C/E/IA,EkDmJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E/EhJA,CkDgJA,AlCAA,AbpJA,AwEoJA,AxDAA,A1BAA,AsFAA,C/EhJA,CkDmJA,AlCAA,AdxM0H,AyEwM1H,AxDAA,A1BAA,AsFAA,E7ExMgImC,KgDwMhI,AlCAA,AbvJSqD,AwEuJT,AxDAA,A1BAA,AsFAA,E7BiCA,AlCAA,AbxL6BC,AwEwL7B,AxDAA,A1BAA,AsFAA,E5ExLmC3F,GACjCuF,CHGF,CErD8I,ACkDhII,E+CuLd,AlCAA,AdzOoJrD,ACkDhItC,AwEuLpB,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C5EtLEyF,C+CsLF,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C5EtLcE,C+CsLd,AlCAA,AhBpLA,A2EoLA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AbnLA,AwEmLA,AxDAA,A1BAA,AsFAA,C/EnLA,CEtD8J,CgD4O9J,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C/EtLA,EEtDgLvD,CgD0OhL,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E1OoLhB,CCsD3KqE,E+CoLT,AlCAA,Ad1O2L/I,ACsDtKiJ,AwEoLrB,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,Ad1O2MvD,AyE0O3M,AxDAA,A1BAA,AsFAA,C5EnLMuD,C+CoLN,AlCAA,AdzOA,AyEyOA,AxDAA,A1BAA,AsFAA,C5EpLWN,C+CoLX,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I/ErLA,CkDqLA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C/EpLA,CErDS9C,EgDyOT,AlCAA,AdzOyBC,AyEyOzB,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AdzOmCC,AyEyOnC,AxDAA,A1BAA,AsFAA,C/EpLA,EErDsD,ECqDxBkD,AHA9B,EkDoLA,AlCAA,AbpLmCN,AwEoLnC,AxDAA,A1BAA,AsFAA,C7EzOwD7C,EgD0OxD,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C/ErLA,CkDqLA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7E1O4EC,CgD0O5E,AlCAA,AbrLkDmD,AwEqLlD,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E3OkG,GgD2OlG,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E3OkG,CgD2OlG,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E5ErLMD,CDtDgGvI,CCsD3F8H,O+CqLX,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E3OgH,AFuDhH,CkDoLA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,AhBtLA,A2EsLA,AxDAA,A1BAA,AsFAA,C5EvL8BS,C+C2L9B,AlCAA,AhB1LA,A2E0LA,AxDAA,A1BAA,AsFAA,C5E3LmCT,E+C0LnC,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AhB1LA,A2E0LA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E5E3LkDU,C+C8LlD,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E5E9LED,C+C8LF,AlCAA,AdnPA,AyEmPA,AxDAA,A1BAA,AsFAA,C5E9LO7K,E+CkMP,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C5ErMY,GDrDH4H,EAAkB9G,CgD0P3B,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E1PmC+G,CgD8CnC,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C5EUA,C+CVA,AlCAA,Ad9CiD,AyE8CjD,AxDAA,A1BAA,AsFAA,I7E9CiD,CgD8CjD,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7E9CqD5I,ACwD5C8L,EDxDgD,EAAG9L,ACyDtD,E+CXN,AlCAA,Ad9CgE4I,AyE8ChE,AxDAA,A1BAA,AsFAA,E7E9CsEzJ,CgD+CtE,AlCAA,AbUWgM,AwEVX,AxDAA,A1BAA,AsFAA,M7E/C8EnL,CgD+C9E,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7E/CmF,CAAM6I,IAAAA,EAAaD,AC0D7FuC,ED1DmGnL,CgD+C5G,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E/CgH6I,AC0DvGsC,C+CPT,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EnD2HhF,MgDmD3H,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7EnDwI0C,EAAW1C,AC0D3HiF,WAAY,E+CPpC,AlCAA,AdnDiK,AC2DxJD,AwERT,AxDAA,A1BAA,AsFAA,E7EnDwKtC,CgDoDxK,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EpDmLP,CgDoDnL,AlCAA,AbOS6C,AwEPT,AxDAA,A1BAA,AsFAA,Y7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EpDkM,EAAU,AC2DpLY,Q+CPxB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C5EOkC,C+CPlC,AlCAA,AdpDuNlD,AyEoDvN,AxDAA,A1BAA,AsFAA,C5EQSsC,GD5D0NtC,EAAWN,AC4DrO4C,I+CRT,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,AdpDyP,AyEoDzP,AxDAA,A1BAA,AsFAA,G7EpD+P9I,EC4DvO2J,G+CRxB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AdpDsQ9F,AyEoDtQ,AxDAA,A1BAA,AsFAA,E5EQgC,EACvBiF,I+CNT,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C5EMSA,C+CNT,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EvDqRtJ,EAAQgH,EAAWxB,IgDuDxS,AlCAA,AdvD6SwB,AyEuD7S,AxDAA,A1BAA,AsFAA,C5EMwBoD,C+CNxB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7ErDA,CgDsDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EtDSnD,AC2D4B,C+CLrC,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EtDsBJ,CC8DhB,CD9D6BK,CgDsDnC,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EtD+CC,EgDsD/C,AlCAA,AbQWsC,AwERX,AxDAA,A1BAA,AsFAA,C7EtDyM5C,CgDsDzM,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E1DkEK,CgD0DlE,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E1D8EJ,EgD0D9E,AlCAA,Ad1DgGD,AyE0DhG,AxDAA,A1BAA,AsFAA,E7E1D4GxI,EC+DnGoL,K+CLT,AlCAA,AbKSA,AwELT,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E1DuHvC,EgD2DvH,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E3DwIC,GAAaL,EAAkBD,CgD2DvK,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E3DoLM,CgD2DpL,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C5EIwBoC,CD/DiL1C,EgD2DzM,AlCAA,AdzDA,AyEyDA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EzDIO,CgDyDJ,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EzDezB,CgD0Df,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C5EGoC,E+CApC,AlCAA,AbCS8D,AwEDT,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E7DuB,CC8DdA,O+CDT,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E5DIpC,EAASD,EgD4Db,AlCAA,Ad5DsBC,AyE4DtB,AxDAA,A1BAA,AsFAA,E5ECwB8C,KD3DpB7C,EgD0DJ,AlCAA,Ad1DgB3B,AC2DgB,AwEDhC,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AbES8D,AwEFT,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,AbCSA,AwEDT,AxDAA,A1BAA,AsFAA,C7E3DwB,EgD2DxB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7E1DIlC,EAAUD,EAAUC,EC2DA8C,K+CDxB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7ExDI7C,CgDyDJ,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EzDaD,ACyDoB,EACxBkC,CD1DelC,EAAQC,CgDyDhC,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C5ECSiC,I+CDT,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7EzD0C,SC0DlBa,C+CDxB,AlCAA,AdvDA,AyEuDA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E1DS7C,CgD0DT,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E1DoBC,CCwDkB,CDxDb1H,CCyDhByJ,CDzDwB9B,GAC/BN,CCwDOoC,CDxDApL,OgDyDT,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E1DmBmF,ICwDK+G,CDxDA1N,CgD0DxB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7E1D6B6K,CgD0D7B,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E1DkC1H,EAAQ2H,GAG1CvL,ACqDsC,EAC7BqN,G+CCT,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AdvDOpN,ACsDEoN,AwECT,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7ExDA,KgDwDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E5EJwBe,E+CKxB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AdxDW5C,AyEwDX,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AbPmC,AwEOnC,AxDAA,A1BAA,AsFAA,E5ENS6B,CDpDE7B,EgD0DX,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AdzDIjB,ACmDK8C,AwEMT,AxDAA,A1BAA,AsFAA,E7EzDoB,EgDyDpB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,AdzD0B7B,AyEyD1B,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,AdvDSC,AyEuDT,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7EvDSA,ACiDe6B,E+CSxB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7E1DgB,CgD0DhB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,Ad1DS5B,AyE0DT,AxDAA,A1BAA,AsFAA,I5EVuC,CDhD9BA,EgDwDT,AlCAA,AbJA,AwEIA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7ExDgB,CgDwDhB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7EvDSxK,CCmDAqM,EAAYI,EDnDZzM,ACmDkB8G,E+CI3B,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C5EHE2F,EAAK7K,EDpDW,EA8KT0I,CgDvHT,AlCAA,AbHY,AwEGZ,AxDAA,A1BAA,AsFAA,M7EpDEX,CgDoDF,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EpDeW,ACiDMxD,EDjDM,CAAC,ACoD5B,C+CEA,AlCAA,AdrDIoB,AyEqDJ,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,AdtDS,AyEsDT,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,AbNSiF,AwEMT,AxDAA,A1BAA,AsFAA,E5ENwBC,CDlDpB5J,CCkD4BsD,C+CMhC,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,AbDMuG,AwECN,AxDAA,A1BAA,AsFAA,E7EzDW,ECwDLA,C+CCN,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C5EDeD,EAAOpB,GDxDGvB,GACfC,CgDwDV,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7ExDUA,EgD0DV,AlCAA,Ad1DkB,AyE0DlB,AxDAA,A1BAA,AsFAA,C7EzDQC,ECuDF2C,E+CEN,AlCAA,AbFeF,AwEEf,AxDAA,A1BAA,AsFAA,C7EzDc3C,CCuDQ0B,CDtDdvB,KAAM,GgDwDd,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EtDU,CgDsDV,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E5EDMyC,C+CIN,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EzDerN,CCqDCqN,EAAOE,E+CIvB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AdzDwB,AyEyDxB,AxDAA,A1BAA,AsFAA,E7EzD2B,GgD0D3B,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E1DgC/C,ECqDM8C,C+CKtC,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E1DqC1C,ACqDW0C,EAAOC,GDrDX7C,EgD0D5C,AlCAA,Ad1DuD,AyE0DvD,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E7D4DH,ECqDQ6C,C+CQpE,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C5ER2ExB,CDrDRlB,EACxDF,IgD8DX,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E9DWA,ACoDwE1D,GAAUsG,EDpD3E1C,ACoDkF9I,C+CUpG,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,Ad/DQ,AyE+DR,AxDAA,A1BAA,AsFAA,C5EZyG,I+CYzG,AlCAA,Ad/Da5B,AyE+Db,AxDAA,A1BAA,AsFAA,I5EZkH8G,GAGlHhI,EDpDK,CACDoJ,CgD4DJ,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7E5DS,ACmDFnJ,E+CSP,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M5ETiB,CACf6M,CDnDEpI,EgD2DJ,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E3DW,CCmDAoI,C+CWX,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C5EVEe,C+CUF,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7E9D4BlC,GAClBC,CCmDGiC,C+CUb,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C5ETEQ,CDpDQzC,EAAQ,CACVC,KAAMF,EgD4Dd,AlCAA,Ad3DQG,AyE2DR,AxDAA,A1BAA,AsFAA,I5ETkBuC,CDlDJ,IgD2Dd,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E3DmB5C,CgD2DnB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,Ad1D0B,AyE0D1B,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E1DU,EgD2DV,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7E3DevK,EgD2Df,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7E3D6B,EgD2D7B,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E5DkCwK,EgD4DlC,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,Ad9DyCE,AyE8DzC,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E7DWH,KAAAA,IgD8DX,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E9DkBG,IgD8DlB,AlCAA,Ad7DQ,AyE6DR,AxDAA,A1BAA,AsFAA,K7E7Da1K,CgD6Db,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7E3DK,CACDkI,CgD0DJ,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,Ad3DS,AyE2DT,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7E1DI1E,IgD0DJ,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E1DW,CgD2DX,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7E1DU,GAAgB,IAAhB,GgD2DV,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E3DexD,GgD2Df,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7E3DU,CACAuG,CgD0DV,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E3DUA,EAAM,KgD2DhB,AlCAA,Ad3DqBgE,AyE2DrB,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E5D0BI,KAGbpE,GgDyDb,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7E3D0B,IAAhB,EgD6DV,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7E7DevG,EgD6Df,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7E7D6B,EgD6D7B,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7E7DkCuK,CgD+DlC,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,Ad/DyC,AyE+DzC,AxDAA,A1BAA,AsFAA,K7E/D8CC,KAAO,KAAU,GgDgE/D,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7EhEoED,GgDgEpE,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7EhE2E,IgDgE3E,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,AdjEgFA,AyEiEhF,AxDAA,A1BAA,AsFAA,K7EjEqFK,IgDiErF,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EjEQ,CgDiER,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7EjEa5K,KgDiEb,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7EhEauG,KAER,CACD2B,CgD8DJ,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,AdhES,AyEgET,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7E/DI1E,IgD+DJ,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E/DW,CgDkEX,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,AdpEW+G,AyEoEX,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,AdpEWA,AyEoEX,AxDAA,A1BAA,AsFAA,K7EpEkB,KAAKC,CgDoEvB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7EpE8B,CgDoE9B,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7EnEWxK,KAAAA,CgDmEX,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,AdtEoB,AyEsEpB,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7EpEK,CACDkI,IAAK,GgDmET,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7ElEI1E,MAAO,CgDkEX,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7ElEyBqH,CgDkEzB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AdjEU,AyEiEV,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EjE0B,EgDoE1B,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7EpEU,CgDmEV,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7EnEe7K,OAAc,MAAO,EgDmEpC,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E/Da8K,CgD+Db,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7ElEUA,IAAAA,CgDmEV,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EnEc,CgDmEd,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7EnEmBP,IgDmEnB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7ElEUhE,CgDqEV,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7ErEgB,GAAKuE,EAAEH,CgDmEvB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7EjEaG,CgDiEb,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EjEiBA,EAAEF,GgDiEnB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7EhEQrE,CgDiER,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7EjEesE,EAAIC,CgDiEnB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EjEqBH,KAGRpE,CgD8Db,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7E/DaA,CgDkEb,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7EhEK,CACD2B,CgD+DJ,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7E/DS,IgD+DT,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,Ad9DI1E,AyE8DJ,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E9DW,CgD8DX,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E9D2ByC,EgD+D3B,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E9DU,GAAgB,CgD8D1B,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7E9DU,GgD8DV,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E9DejG,EgD8Df,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7E9D6B,CgD8D7B,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E9DoC+J,EAAOgB,KgD+D3C,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E/DiD,GgD+DjD,AlCAA,Ad1DaD,AyE0Db,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,Ad9DUvE,AyE8DV,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,Ad9DUA,AyE8DV,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,Ad9DgBwD,AyE8DhB,AxDAA,A1BAA,AsFAA,E7E9DuBiB,GgD8DvB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E9DmC/E,EgD+DnC,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E/DyC,GgD+DzC,AlCAA,Ad9DU6E,AyE8DV,AxDAA,A1BAA,AsFAA,E7E9Dc,IgD8Dd,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E9DmBP,EgD8DnB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EhEU1J,EAAI,CgDgEd,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E9DaiK,CgD8Db,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,Ad9DQX,AyE8DR,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,Ad9DmBW,AyE8DnB,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,Ad/DqBH,AyE+DrB,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E/D2BpE,EAAK1F,GgD+DhC,AlCAA,Ad9DQA,AyE8DR,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E/DaiK,EAAEH,CgD+Df,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,Ad/DoB3K,AyE+DpB,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,Ad9DQ8K,AyE8DR,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,Ad9DYA,AyE8DZ,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,Ad9DcF,AyE8Dd,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,Ad3DarE,AyE2Db,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,Ad5DaA,AyE4Db,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AdzDK,AyEyDL,AxDAA,A1BAA,AsFAA,C7ExDI2B,EgDwDJ,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AdxDS,AyEwDT,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AdvDI1E,AyEuDJ,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,AdvDW,AyEuDX,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7ExD4ByC,EAAGgF,GgDwD/B,AlCAA,AdvDU1E,AyEuDV,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,AdvDUA,AyEuDV,AxDAA,A1BAA,AsFAA,E7EzCaA,CgDyCb,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7ErDUN,EAAI,GgDsDd,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7EtDmBsE,GgDsDnB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7EtDwBI,IgDsDxB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EtD6B3K,CgDsD7B,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,AdpDQuG,AyEoDR,AxDAA,A1BAA,AsFAA,E7EpDc,CgDoDd,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7EpDmBgE,KAAKI,GgDqDxB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7ErD6B9D,CgDqD7B,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,AdtDmC,AyEsDnC,AxDAA,A1BAA,AsFAA,E7EtDsCZ,GgDuDtC,AlCAA,AdtDasE,AyEsDb,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7EtDaA,CgDuDb,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7EvDkBI,KAAO,CgD0DzB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E1D8BJ,KAAKI,CgD0DnC,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E3DwC9D,EgD2DxC,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,Ad3D8CZ,AyE2D9C,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AdxDQM,AyEwDR,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,Ad1DiBN,AyE0DjB,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E1DuB,KgD0DvB,AlCAA,Ad1D4BsE,AyE0D5B,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,Ad3DiCI,AyE2DjC,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E3DsC3K,EgD2DtC,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EzDc,GgDyDd,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AdzDmBgI,AyEyDnB,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,AdtDciD,AyEsDd,AxDAA,A1BAA,AsFAA,E7EtD2B,CgDuD3B,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7EvDgCC,CgDuDhC,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,AdvD2CjF,AyEuD3C,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,AdvDgD,AyEuDhD,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7EvDqDkF,MgDwDrD,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,AdxDgElF,AyEwDhE,AxDAA,A1BAA,AsFAA,G7ErDaM,GgDqDb,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EnDK,CgDmDL,AlCAA,AdlDI2B,AyEkDJ,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7ElDS,GgDkDT,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AdjDI1E,AyEiDJ,AxDAA,A1BAA,AsFAA,M7EjDW,IgDkDX,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7EjDa,CgDkDb,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EnDa,EgDmDb,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,AdpDkB+G,AyEoDlB,AxDAA,A1BAA,AsFAA,K7BIA,AlCAA,AdxDuBI,AyEwDvB,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,AdrDK,AyEqDL,AxDAA,A1BAA,AsFAA,C7EpDIzC,IgDoDJ,AlCAA,AdpDS,AyEoDT,AxDAA,A1BAA,AsFAA,S7B2BA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E9EI1E,MAAO,EgD8EX,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7E9E+ByC,GgD8E/B,AlCAA,Ad7EU6E,AyE6EV,AxDAA,A1BAA,AsFAA,I7E7EUA,EAAI,GgD6Ed,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,Ad7EmBP,AyE6EnB,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E9EUa,EAAI,CgD8Ed,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E7EU7E,EAAMuE,EAAEH,EgD6ElB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7E1EaG,EgD0Eb,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E5EM7E,GAAKM,CgD4EX,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E5EevG,CgD4Ef,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7E1Ea8K,CgD0Eb,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E1EiBA,EgD0EjB,AlCAA,Ad1EmBF,AyE0EnB,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7E3EyB,CACbS,CgD0EZ,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7E1EYA,EAAMP,CgD0ElB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E1EoBH,GgD0EpB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7EzEYW,EAAKrF,EgDyEjB,AlCAA,AdzEqBoF,AyEyErB,AxDAA,A1BAA,AsFAA,E7EzEyBrL,GgDyEzB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7EzEkCqL,EAAIrL,EgD0EtC,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E1E+CiG,EAInCA,CgDsEZ,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AdzEYqF,AyEyEZ,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AdzEmBD,AyEyEnB,AxDAA,A1BAA,AsFAA,E7EzEuBrL,GgDyEvB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7EzE+BuG,GgDyE/B,AlCAA,AdzEsC8E,AyEyEtC,AxDAA,A1BAA,AsFAA,E7EzE+C9E,EgD0E/C,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E1EsD8E,EAAIxE,EgD0E1D,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7E1EgE,EgD0EhE,AlCAA,Ad1EmEZ,AyE0EnE,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,AdvEkB,AyEuElB,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7E5EQA,CgD4ER,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,Ad5EaqF,AyE4Eb,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E5EqB,CgD4ErB,AlCAA,Ad3EcA,AyE2Ed,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E5EqBD,EgD4ErB,AlCAA,Ad5EyBrL,AyE4EzB,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7E3EcoL,CgD2Ed,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E1EgBN,CgD0EhB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E1EkBF,CgD0ElB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E1EwB,CgD0ExB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E1E6BL,CgD0E7B,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,Ad3EoCO,AyE2EpC,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,Ad3EsCF,AyE2EtC,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E3EgD,CgD2EhD,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E5EqDL,IgD4ErD,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E5E4D,KgD4E5D,AlCAA,Ad5EiEC,AyE4EjE,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E5EwE,EgD4ExE,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7E1EiBD,KAAAA,CgD4EjB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7E5EwBO,CgD4ExB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E3EYA,EAAEH,GgD2Ed,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,Ad3EqBU,AyE2ErB,AxDAA,A1BAA,AsFAA,E7E3EyBxE,EgD2EzB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,Ad3E+ByE,AyE2E/B,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7ExEU,CgDwEV,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7ErEUF,EgDsEV,AlCAA,AdlEa7E,AyEkEb,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7EnEWvG,CgDoEX,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7EpEWA,CgDqEX,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EtEqBoL,EACR7E,EgDwEb,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AdrEK,AyEqEL,AxDAA,A1BAA,AsFAA,C7EpEI2B,GgDoEJ,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EpES,GgDqET,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AdpEI1E,AyEoEJ,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7ErEW,EgDqEX,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7ErE+ByC,GgDqE/B,AlCAA,AdpEUM,AyEoEV,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EpEUA,CgDoEV,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EpEgBwD,EAAOiB,MgDqEvB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7ErEmC/E,GACzB6E,EgDoEV,AlCAA,AdpEc,AyEoEd,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7EpEmBP,CgDoEnB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,AdnEUa,AyEmEV,AxDAA,A1BAA,AsFAA,E7EnEc,CgDmEd,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E/DaN,CgD+Db,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7ElEMA,EAAEH,IgDoER,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EpEazE,IgDoEb,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EpEkBK,GACZN,GAAK6E,EgD8FX,AlCAA,Ad9FaH,AyE8Fb,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7E9FkB3K,OgD8FlB,AlCAA,Ad5Fa8K,AyE4Fb,AxDAA,A1BAA,AsFAA,E7E5FiBA,EAAEF,MAAM,CgD4FzB,AlCAA,Ad3FYW,AyE2FZ,AxDAA,A1BAA,AsFAA,I7E3FYA,EAAMT,EAAEH,CgD2FpB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,Ad1FYW,AyE0FZ,AxDAA,A1BAA,AsFAA,E7E1FiBrF,CgD4FjB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E5FqBsF,EAAIvL,EgD4FzB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7E5FkCuL,CgD4FlC,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BAA,AlCAA,Ad5FsCvL,AyE4FtC,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7E7F+CiG,CgD6F/C,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EzFYA,GAHJsF,EAAIrF,CgD4FZ,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E/FiBK,EgD+FjB,AlCAA,Ad/FsBA,AyE+FtB,AxDAA,A1BAA,AsFAA,E7E/F0BvG,EgD+F1B,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E/FmCiG,CgD+FnC,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E/FsC,CgD+FtC,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E/FyCqF,EgD+FzC,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E5FkB,KAFVrF,GgD8FR,AlCAA,Ad9FaqF,AyE8Fb,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,Ad5FqB,AyE4FrB,AxDAA,A1BAA,AsFAA,C7E3FcA,CgD4Fd,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7E5FqBC,CgD8FrB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E9FyBvL,GgD+FzB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E9FcoL,CgDqGd,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EpGgBN,EAAEF,CgD+FlB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,Ad/FwB,AyE+FxB,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E/F6BL,KAAOO,CgD+FpC,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E/FsCF,CgDgGtC,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AdhGgD,AyEgGhD,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EjGqDL,IgDiGrD,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EjG4D,GgDiG5D,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AdjGiEC,AyEiGjE,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,AdjGwE,AyEiGxE,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7ElGiBD,CgDkGjB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AdlGiBA,AyEkGjB,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,AdlGwBO,AyEkGxB,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,AdlGYA,AyEkGZ,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AdlGcH,AyEkGd,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7ElGqBY,CgDkGrB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7ElGyB1E,CgDkGzB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,AdpG+ByE,AyEoG/B,AxDAA,A1BAA,AsFAA,I7EjGU,CgDiGV,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E9FUF,EgD+FV,AlCAA,Ad3Fa7E,AyE2Fb,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E5FWvG,IgD4FX,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E5FWA,EgD4FX,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7E5FqBoL,EACR7E,GgD4Fb,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EzFK,CACD2B,GgDwFJ,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7ExFSgC,EACL1G,GgDuFJ,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7EvFW,CgDuFX,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7EzF0BgI,EAAGC,GAChBxB,CgDwFb,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,Ad5FaA,AyE4Fb,AxDAA,A1BAA,AsFAA,E7E5FqB,EgD4FrB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,Ad7F2BrB,AyE6F3B,AxDAA,A1BAA,AsFAA,E7E7FyC,EgD6FzC,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E7F6C6C,CgD6F7C,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7E7FsD,CgDgGtD,AlCAA,Ad9FQC,AyE8FR,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,Ad5Fe,AyE4Ff,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,Ad1FQC,AyE0FR,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7E1FuB,CgD4FvB,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,AdvFSrB,AyEuFT,AxDAA,A1BAA,AsFAA,E7E3QA,EgD4QA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,a7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BiCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Y7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,a7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,c7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,e7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,gB7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,iB7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,kB7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,mB7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,oB7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,qB7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,sB7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,uB7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,wB7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,yB7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,0B7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,2B7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,6B7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BsjBA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BMA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BQA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BNA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BzlBA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BMA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BMA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BLA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BQA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,oC7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BSA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BRA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,iB7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,8C7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Y7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Y7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Y7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,a7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,yC7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,+B7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BYA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BrBA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BeA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BiBA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BhBA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BoBA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BnBA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BiBA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Y7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BMA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,iB7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BSA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BLA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,iB7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BUA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BRA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BkBA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BfA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Y7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Y7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,c7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Y7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Y7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BWA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BXA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BUA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BNA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7B+CA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BNA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BMA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BMA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7B0BA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BzBA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BiDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BsBA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BvEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BiDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BWA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BVA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BrDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BQA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BNA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BgBA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BcA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BMA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BLA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BOA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Y7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,a7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Y7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BUA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BPA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,a7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,iB7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BQA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BLA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BxxCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,a7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7B8wCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,iB7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BMA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,iB7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BMA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BaA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BTA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,iB7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,iB7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,2C7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BQA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BLA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,iB7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,iB7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,a7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BLA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,a7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BOA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,a7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,a7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BaA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BVA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BQA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BOA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BlFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BsFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BaA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BTA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BMA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BOA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BQA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BLA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BuCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BvCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BeA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BTA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,iB7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BMA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BOA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BPA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,qB7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BOA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BOA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,yC7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,iC7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,wD7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Y7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,yC7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,sC7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,uC7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,sC7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,uC7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,sC7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,sC7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,sC7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,sC7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,uC7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,uC7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,uC7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,sC7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,qB7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Y7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BiDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,2E7B+DA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,kE7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,yD7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,uE7B8CA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,iB7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,kC7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BkOA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Y7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7B5aA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,kB7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BgBA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BfA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BSA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BhBA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BgBA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BpBA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BoBA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BUA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BNA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BSA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BQA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BSA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,W7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,iB7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BMA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BkBA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,iC7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,oC7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,iC7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,oC7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BHA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BQA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Y7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BOA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BIA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Y7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BJA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,C7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BKA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7B9BA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7B+BA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BXA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BaA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Y7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Q7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BOA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BmBA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,Y7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BFA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BQA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BNA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BEA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,M7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BOA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BNA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BCA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,U7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,S7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BGA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BDA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,E7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,O7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,K7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,G7BAA,AlCAA,A2DAA,AxDAA,A1BAA,AsFAA,I7BAA,AlCAA,A2DAA,AxDAA,A1BAA,A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AAA,EAAA,GAAA,IAAA,GAGA,IAAA,EAAA,CACA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EACA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAEA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EACA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAEA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GACA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EACA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EACA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAEA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EACA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EACA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAEA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GACA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAEA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GACA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAEA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GACA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EACA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAEA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EACA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,E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CA,kEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,kEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,sEAIA,IAAA,CACA,IAAA,EACA,OAAA,CACA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,iEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEAC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","file":"javascript.7c6f3e12.js","sourceRoot":"../javascript","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nvar MAX_BYTES = 65536\n\n// Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\nvar MAX_UINT32 = 4294967295\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')\n\n  var bytes = Buffer.allocUnsafe(size)\n\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function eventListener() {\n      if (errorListener !== undefined) {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n    var errorListener;\n\n    // Adding an error listener is not optional because\n    // if an error is thrown on an event emitter we cannot\n    // guarantee that the actual event we are waiting will\n    // be fired. The result could be a silent way to create\n    // memory or file descriptor leaks, which is something\n    // we should avoid.\n    if (name !== 'error') {\n      errorListener = function errorListener(err) {\n        emitter.removeListener(name, eventListener);\n        reject(err);\n      };\n\n      emitter.once('error', errorListener);\n    }\n\n    emitter.once(name, eventListener);\n  });\n}\n","module.exports = require('events').EventEmitter;\n","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();","'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\nrequire('inherits')(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nrequire('inherits')(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;","'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = require('util');\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/buffer_list');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\nrequire('inherits')(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';\n\nmodule.exports = Transform;\n\nvar _require$codes = require('../errors').codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = require('./_stream_duplex');\n\nrequire('inherits')(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\nrequire('inherits')(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = require('../../../errors').codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('readable-stream').Transform\nvar inherits = require('inherits')\n\nfunction throwIfNotStringOrBuffer (val, prefix) {\n  if (!Buffer.isBuffer(val) && typeof val !== 'string') {\n    throw new TypeError(prefix + ' must be a string or a buffer')\n  }\n}\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  throwIfNotStringOrBuffer(data, 'Data')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n","'use strict'\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\nvar Buffer = require('safe-buffer').Buffer\n\nvar ARRAY16 = new Array(16)\n\nfunction MD5 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n}\n\ninherits(MD5, HashBase)\n\nMD5.prototype._update = function () {\n  var M = ARRAY16\n  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)\n\n  var a = this._a\n  var b = this._b\n  var c = this._c\n  var d = this._d\n\n  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)\n  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)\n  c = fnF(c, d, a, b, M[2], 0x242070db, 17)\n  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)\n  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)\n  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)\n  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)\n  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)\n  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)\n  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)\n  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)\n  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)\n  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)\n  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)\n  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)\n  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)\n\n  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)\n  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)\n  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)\n  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)\n  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)\n  d = fnG(d, a, b, c, M[10], 0x02441453, 9)\n  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)\n  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)\n  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)\n  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)\n  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)\n  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)\n  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)\n  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)\n  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)\n  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)\n\n  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)\n  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)\n  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)\n  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)\n  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)\n  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)\n  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)\n  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)\n  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)\n  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)\n  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)\n  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)\n  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)\n  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)\n  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)\n  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)\n\n  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)\n  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)\n  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)\n  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)\n  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)\n  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)\n  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)\n  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)\n  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)\n  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)\n  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)\n  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)\n  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)\n  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)\n  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)\n  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)\n\n  this._a = (this._a + a) | 0\n  this._b = (this._b + b) | 0\n  this._c = (this._c + c) | 0\n  this._d = (this._d + d) | 0\n}\n\nMD5.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.allocUnsafe(16)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fnF (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnG (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnH (a, b, c, d, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnI (a, b, c, d, m, k, s) {\n  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0\n}\n\nmodule.exports = MD5\n","'use strict'\nvar Buffer = require('buffer').Buffer\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\n\nvar ARRAY16 = new Array(16)\n\nvar zl = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]\n\nvar zr = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]\n\nvar sl = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]\n\nvar sr = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]\n\nvar hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]\nvar hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]\n\nfunction RIPEMD160 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n}\n\ninherits(RIPEMD160, HashBase)\n\nRIPEMD160.prototype._update = function () {\n  var words = ARRAY16\n  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)\n\n  var al = this._a | 0\n  var bl = this._b | 0\n  var cl = this._c | 0\n  var dl = this._d | 0\n  var el = this._e | 0\n\n  var ar = this._a | 0\n  var br = this._b | 0\n  var cr = this._c | 0\n  var dr = this._d | 0\n  var er = this._e | 0\n\n  // computation\n  for (var i = 0; i < 80; i += 1) {\n    var tl\n    var tr\n    if (i < 16) {\n      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])\n      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])\n    } else if (i < 32) {\n      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])\n      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])\n    } else if (i < 48) {\n      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])\n      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])\n    } else if (i < 64) {\n      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])\n      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])\n    } else { // if (i<80) {\n      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])\n      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])\n    }\n\n    al = el\n    el = dl\n    dl = rotl(cl, 10)\n    cl = bl\n    bl = tl\n\n    ar = er\n    er = dr\n    dr = rotl(cr, 10)\n    cr = br\n    br = tr\n  }\n\n  // update state\n  var t = (this._b + cl + dr) | 0\n  this._b = (this._c + dl + er) | 0\n  this._c = (this._d + el + ar) | 0\n  this._d = (this._e + al + br) | 0\n  this._e = (this._a + bl + cr) | 0\n  this._a = t\n}\n\nRIPEMD160.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  buffer.writeInt32LE(this._e, 16)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fn1 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn2 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn3 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn4 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn5 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0\n}\n\nmodule.exports = RIPEMD160\n","var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Sha256 = require('./sha256')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8\n  this._b = 0x367cd507\n  this._c = 0x3070dd17\n  this._d = 0xf70e5939\n  this._e = 0xffc00b31\n  this._f = 0x68581511\n  this._g = 0x64f98fa7\n  this._h = 0xbefa4fa4\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n","var inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._ah = 0x6a09e667\n  this._bh = 0xbb67ae85\n  this._ch = 0x3c6ef372\n  this._dh = 0xa54ff53a\n  this._eh = 0x510e527f\n  this._fh = 0x9b05688c\n  this._gh = 0x1f83d9ab\n  this._hh = 0x5be0cd19\n\n  this._al = 0xf3bcc908\n  this._bl = 0x84caa73b\n  this._cl = 0xfe94f82b\n  this._dl = 0x5f1d36f1\n  this._el = 0xade682d1\n  this._fl = 0x2b3e6c1f\n  this._gl = 0xfb41bd6b\n  this._hl = 0x137e2179\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nfunction getCarry (a, b) {\n  return (a >>> 0) < (b >>> 0) ? 1 : 0\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var ah = this._ah | 0\n  var bh = this._bh | 0\n  var ch = this._ch | 0\n  var dh = this._dh | 0\n  var eh = this._eh | 0\n  var fh = this._fh | 0\n  var gh = this._gh | 0\n  var hh = this._hh | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  for (var i = 0; i < 32; i += 2) {\n    W[i] = M.readInt32BE(i * 4)\n    W[i + 1] = M.readInt32BE(i * 4 + 4)\n  }\n  for (; i < 160; i += 2) {\n    var xh = W[i - 15 * 2]\n    var xl = W[i - 15 * 2 + 1]\n    var gamma0 = Gamma0(xh, xl)\n    var gamma0l = Gamma0l(xl, xh)\n\n    xh = W[i - 2 * 2]\n    xl = W[i - 2 * 2 + 1]\n    var gamma1 = Gamma1(xh, xl)\n    var gamma1l = Gamma1l(xl, xh)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7h = W[i - 7 * 2]\n    var Wi7l = W[i - 7 * 2 + 1]\n\n    var Wi16h = W[i - 16 * 2]\n    var Wi16l = W[i - 16 * 2 + 1]\n\n    var Wil = (gamma0l + Wi7l) | 0\n    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0\n    Wil = (Wil + gamma1l) | 0\n    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0\n    Wil = (Wil + Wi16l) | 0\n    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0\n\n    W[i] = Wih\n    W[i + 1] = Wil\n  }\n\n  for (var j = 0; j < 160; j += 2) {\n    Wih = W[j]\n    Wil = W[j + 1]\n\n    var majh = maj(ah, bh, ch)\n    var majl = maj(al, bl, cl)\n\n    var sigma0h = sigma0(ah, al)\n    var sigma0l = sigma0(al, ah)\n    var sigma1h = sigma1(eh, el)\n    var sigma1l = sigma1(el, eh)\n\n    // t1 = h + sigma1 + ch + K[j] + W[j]\n    var Kih = K[j]\n    var Kil = K[j + 1]\n\n    var chh = Ch(eh, fh, gh)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = (hl + sigma1l) | 0\n    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0\n    t1l = (t1l + chl) | 0\n    t1h = (t1h + chh + getCarry(t1l, chl)) | 0\n    t1l = (t1l + Kil) | 0\n    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0\n    t1l = (t1l + Wil) | 0\n    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0\n\n    // t2 = sigma0 + maj\n    var t2l = (sigma0l + majl) | 0\n    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0\n\n    hh = gh\n    hl = gl\n    gh = fh\n    gl = fl\n    fh = eh\n    fl = el\n    el = (dl + t1l) | 0\n    eh = (dh + t1h + getCarry(el, dl)) | 0\n    dh = ch\n    dl = cl\n    ch = bh\n    cl = bl\n    bh = ah\n    bl = al\n    al = (t1l + t2l) | 0\n    ah = (t1h + t2h + getCarry(al, t1l)) | 0\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0\n  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0\n  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0\n  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0\n  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0\n  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0\n  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0\n  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n  writeInt64BE(this._gh, this._gl, 48)\n  writeInt64BE(this._hh, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n","var inherits = require('inherits')\nvar SHA512 = require('./sha512')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._ah = 0xcbbb9d5d\n  this._bh = 0x629a292a\n  this._ch = 0x9159015a\n  this._dh = 0x152fecd8\n  this._eh = 0x67332667\n  this._fh = 0x8eb44a87\n  this._gh = 0xdb0c2e0d\n  this._hh = 0x47b5481d\n\n  this._al = 0xc1059ed8\n  this._bl = 0x367cd507\n  this._cl = 0x3070dd17\n  this._dl = 0xf70e5939\n  this._el = 0xffc00b31\n  this._fl = 0x68581511\n  this._gl = 0x64f98fa7\n  this._hl = 0xbefa4fa4\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n","var exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')\n\n  return new Algorithm()\n}\n\nexports.sha = require('./sha')\nexports.sha1 = require('./sha1')\nexports.sha224 = require('./sha224')\nexports.sha256 = require('./sha256')\nexports.sha384 = require('./sha384')\nexports.sha512 = require('./sha512')\n","'use strict';\n\nif (typeof process === 'undefined' ||\n    !process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","module.exports = require('events').EventEmitter;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","module.exports = require('./lib/_stream_writable.js');\n","module.exports = require('./lib/_stream_duplex.js');\n","module.exports = require('./readable').Transform\n","module.exports = require('./readable').PassThrough\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","var Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar StringDecoder = require('string_decoder').StringDecoder\nvar inherits = require('inherits')\n\nfunction CipherBase (hashMode) {\n  Transform.call(this)\n  this.hashMode = typeof hashMode === 'string'\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest\n  } else {\n    this.final = this._finalOrDigest\n  }\n  if (this._final) {\n    this.__final = this._final\n    this._final = null\n  }\n  this._decoder = null\n  this._encoding = null\n}\ninherits(CipherBase, Transform)\n\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  if (typeof data === 'string') {\n    data = Buffer.from(data, inputEnc)\n  }\n\n  var outData = this._update(data)\n  if (this.hashMode) return this\n\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc)\n  }\n\n  return outData\n}\n\nCipherBase.prototype.setAutoPadding = function () {}\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state')\n}\n\nCipherBase.prototype._transform = function (data, _, next) {\n  var err\n  try {\n    if (this.hashMode) {\n      this._update(data)\n    } else {\n      this.push(this._update(data))\n    }\n  } catch (e) {\n    err = e\n  } finally {\n    next(err)\n  }\n}\nCipherBase.prototype._flush = function (done) {\n  var err\n  try {\n    this.push(this.__final())\n  } catch (e) {\n    err = e\n  }\n\n  done(err)\n}\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this.__final() || Buffer.alloc(0)\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true)\n  }\n  return outData\n}\n\nCipherBase.prototype._toString = function (value, enc, fin) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc)\n    this._encoding = enc\n  }\n\n  if (this._encoding !== enc) throw new Error('can\\'t switch encodings')\n\n  var out = this._decoder.write(value)\n  if (fin) {\n    out += this._decoder.end()\n  }\n\n  return out\n}\n\nmodule.exports = CipherBase\n","'use strict'\nvar inherits = require('inherits')\nvar MD5 = require('md5.js')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Base = require('cipher-base')\n\nfunction Hash (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === 'md5') return new MD5()\n  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()\n\n  return new Hash(sha(alg))\n}\n","'use strict'\nvar inherits = require('inherits')\nvar Buffer = require('safe-buffer').Buffer\n\nvar Base = require('cipher-base')\n\nvar ZEROS = Buffer.alloc(128)\nvar blocksize = 64\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  this._alg = alg\n  this._key = key\n\n  if (key.length > blocksize) {\n    key = alg(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  this._hash = [ipad]\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.push(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._alg(Buffer.concat(this._hash))\n  return this._alg(Buffer.concat([this._opad, h]))\n}\nmodule.exports = Hmac\n","var MD5 = require('md5.js')\n\nmodule.exports = function (buffer) {\n  return new MD5().update(buffer).digest()\n}\n","'use strict'\nvar inherits = require('inherits')\nvar Legacy = require('./legacy')\nvar Base = require('cipher-base')\nvar Buffer = require('safe-buffer').Buffer\nvar md5 = require('create-hash/md5')\nvar RIPEMD160 = require('ripemd160')\n\nvar sha = require('sha.js')\n\nvar ZEROS = Buffer.alloc(128)\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  this._alg = alg\n  this._key = key\n  if (key.length > blocksize) {\n    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n    key = hash.update(key).digest()\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n  this._hash.update(ipad)\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._hash.digest()\n  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)\n  return hash.update(this._opad).update(h).digest()\n}\n\nmodule.exports = function createHmac (alg, key) {\n  alg = alg.toLowerCase()\n  if (alg === 'rmd160' || alg === 'ripemd160') {\n    return new Hmac('rmd160', key)\n  }\n  if (alg === 'md5') {\n    return new Legacy(md5, key)\n  }\n  return new Hmac(alg, key)\n}\n","module.exports={sha224WithRSAEncryption:{sign:\"rsa\",hash:\"sha224\",id:\"302d300d06096086480165030402040500041c\"},\"RSA-SHA224\":{sign:\"ecdsa/rsa\",hash:\"sha224\",id:\"302d300d06096086480165030402040500041c\"},sha256WithRSAEncryption:{sign:\"rsa\",hash:\"sha256\",id:\"3031300d060960864801650304020105000420\"},\"RSA-SHA256\":{sign:\"ecdsa/rsa\",hash:\"sha256\",id:\"3031300d060960864801650304020105000420\"},sha384WithRSAEncryption:{sign:\"rsa\",hash:\"sha384\",id:\"3041300d060960864801650304020205000430\"},\"RSA-SHA384\":{sign:\"ecdsa/rsa\",hash:\"sha384\",id:\"3041300d060960864801650304020205000430\"},sha512WithRSAEncryption:{sign:\"rsa\",hash:\"sha512\",id:\"3051300d060960864801650304020305000440\"},\"RSA-SHA512\":{sign:\"ecdsa/rsa\",hash:\"sha512\",id:\"3051300d060960864801650304020305000440\"},\"RSA-SHA1\":{sign:\"rsa\",hash:\"sha1\",id:\"3021300906052b0e03021a05000414\"},\"ecdsa-with-SHA1\":{sign:\"ecdsa\",hash:\"sha1\",id:\"\"},sha256:{sign:\"ecdsa\",hash:\"sha256\",id:\"\"},sha224:{sign:\"ecdsa\",hash:\"sha224\",id:\"\"},sha384:{sign:\"ecdsa\",hash:\"sha384\",id:\"\"},sha512:{sign:\"ecdsa\",hash:\"sha512\",id:\"\"},\"DSA-SHA\":{sign:\"dsa\",hash:\"sha1\",id:\"\"},\"DSA-SHA1\":{sign:\"dsa\",hash:\"sha1\",id:\"\"},DSA:{sign:\"dsa\",hash:\"sha1\",id:\"\"},\"DSA-WITH-SHA224\":{sign:\"dsa\",hash:\"sha224\",id:\"\"},\"DSA-SHA224\":{sign:\"dsa\",hash:\"sha224\",id:\"\"},\"DSA-WITH-SHA256\":{sign:\"dsa\",hash:\"sha256\",id:\"\"},\"DSA-SHA256\":{sign:\"dsa\",hash:\"sha256\",id:\"\"},\"DSA-WITH-SHA384\":{sign:\"dsa\",hash:\"sha384\",id:\"\"},\"DSA-SHA384\":{sign:\"dsa\",hash:\"sha384\",id:\"\"},\"DSA-WITH-SHA512\":{sign:\"dsa\",hash:\"sha512\",id:\"\"},\"DSA-SHA512\":{sign:\"dsa\",hash:\"sha512\",id:\"\"},\"DSA-RIPEMD160\":{sign:\"dsa\",hash:\"rmd160\",id:\"\"},ripemd160WithRSA:{sign:\"rsa\",hash:\"rmd160\",id:\"3021300906052b2403020105000414\"},\"RSA-RIPEMD160\":{sign:\"rsa\",hash:\"rmd160\",id:\"3021300906052b2403020105000414\"},md5WithRSAEncryption:{sign:\"rsa\",hash:\"md5\",id:\"3020300c06082a864886f70d020505000410\"},\"RSA-MD5\":{sign:\"rsa\",hash:\"md5\",id:\"3020300c06082a864886f70d020505000410\"}};","module.exports = require('./browser/algorithms.json')\n","var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs\n\nmodule.exports = function (iterations, keylen) {\n  if (typeof iterations !== 'number') {\n    throw new TypeError('Iterations not a number')\n  }\n\n  if (iterations < 0) {\n    throw new TypeError('Bad iterations')\n  }\n\n  if (typeof keylen !== 'number') {\n    throw new TypeError('Key length not a number')\n  }\n\n  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */\n    throw new TypeError('Bad key length')\n  }\n}\n","var defaultEncoding\n/* istanbul ignore next */\nif (process.browser) {\n  defaultEncoding = 'utf-8'\n} else if (process.version) {\n  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)\n\n  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'\n} else {\n  defaultEncoding = 'utf-8'\n}\nmodule.exports = defaultEncoding\n","var Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (thing, encoding, name) {\n  if (Buffer.isBuffer(thing)) {\n    return thing\n  } else if (typeof thing === 'string') {\n    return Buffer.from(thing, encoding)\n  } else if (ArrayBuffer.isView(thing)) {\n    return Buffer.from(thing.buffer)\n  } else {\n    throw new TypeError(name + ' must be a string, a Buffer, a typed array or a DataView')\n  }\n}\n","var md5 = require('create-hash/md5')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Buffer = require('safe-buffer').Buffer\n\nvar checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar toBuffer = require('./to-buffer')\n\nvar ZEROS = Buffer.alloc(128)\nvar sizes = {\n  md5: 16,\n  sha1: 20,\n  sha224: 28,\n  sha256: 32,\n  sha384: 48,\n  sha512: 64,\n  rmd160: 20,\n  ripemd160: 20\n}\n\nfunction Hmac (alg, key, saltLen) {\n  var hash = getDigest(alg)\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  if (key.length > blocksize) {\n    key = hash(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)\n  ipad.copy(ipad1, 0, 0, blocksize)\n  this.ipad1 = ipad1\n  this.ipad2 = ipad\n  this.opad = opad\n  this.alg = alg\n  this.blocksize = blocksize\n  this.hash = hash\n  this.size = sizes[alg]\n}\n\nHmac.prototype.run = function (data, ipad) {\n  data.copy(ipad, this.blocksize)\n  var h = this.hash(ipad)\n  h.copy(this.opad, this.blocksize)\n  return this.hash(this.opad)\n}\n\nfunction getDigest (alg) {\n  function shaFunc (data) {\n    return sha(alg).update(data).digest()\n  }\n  function rmd160Func (data) {\n    return new RIPEMD160().update(data).digest()\n  }\n\n  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160Func\n  if (alg === 'md5') return md5\n  return shaFunc\n}\n\nfunction pbkdf2 (password, salt, iterations, keylen, digest) {\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n\n  digest = digest || 'sha1'\n\n  var hmac = new Hmac(digest, password, salt.length)\n\n  var DK = Buffer.allocUnsafe(keylen)\n  var block1 = Buffer.allocUnsafe(salt.length + 4)\n  salt.copy(block1, 0, 0, salt.length)\n\n  var destPos = 0\n  var hLen = sizes[digest]\n  var l = Math.ceil(keylen / hLen)\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length)\n\n    var T = hmac.run(block1, hmac.ipad1)\n    var U = T\n\n    for (var j = 1; j < iterations; j++) {\n      U = hmac.run(U, hmac.ipad2)\n      for (var k = 0; k < hLen; k++) T[k] ^= U[k]\n    }\n\n    T.copy(DK, destPos)\n    destPos += hLen\n  }\n\n  return DK\n}\n\nmodule.exports = pbkdf2\n","var Buffer = require('safe-buffer').Buffer\n\nvar checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar sync = require('./sync')\nvar toBuffer = require('./to-buffer')\n\nvar ZERO_BUF\nvar subtle = global.crypto && global.crypto.subtle\nvar toBrowser = {\n  sha: 'SHA-1',\n  'sha-1': 'SHA-1',\n  sha1: 'SHA-1',\n  sha256: 'SHA-256',\n  'sha-256': 'SHA-256',\n  sha384: 'SHA-384',\n  'sha-384': 'SHA-384',\n  'sha-512': 'SHA-512',\n  sha512: 'SHA-512'\n}\nvar checks = []\nfunction checkNative (algo) {\n  if (global.process && !global.process.browser) {\n    return Promise.resolve(false)\n  }\n  if (!subtle || !subtle.importKey || !subtle.deriveBits) {\n    return Promise.resolve(false)\n  }\n  if (checks[algo] !== undefined) {\n    return checks[algo]\n  }\n  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)\n  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)\n    .then(function () {\n      return true\n    }).catch(function () {\n      return false\n    })\n  checks[algo] = prom\n  return prom\n}\n\nfunction browserPbkdf2 (password, salt, iterations, length, algo) {\n  return subtle.importKey(\n    'raw', password, { name: 'PBKDF2' }, false, ['deriveBits']\n  ).then(function (key) {\n    return subtle.deriveBits({\n      name: 'PBKDF2',\n      salt: salt,\n      iterations: iterations,\n      hash: {\n        name: algo\n      }\n    }, key, length << 3)\n  }).then(function (res) {\n    return Buffer.from(res)\n  })\n}\n\nfunction resolvePromise (promise, callback) {\n  promise.then(function (out) {\n    process.nextTick(function () {\n      callback(null, out)\n    })\n  }, function (e) {\n    process.nextTick(function () {\n      callback(e)\n    })\n  })\n}\nmodule.exports = function (password, salt, iterations, keylen, digest, callback) {\n  if (typeof digest === 'function') {\n    callback = digest\n    digest = undefined\n  }\n\n  digest = digest || 'sha1'\n  var algo = toBrowser[digest.toLowerCase()]\n\n  if (!algo || typeof global.Promise !== 'function') {\n    return process.nextTick(function () {\n      var out\n      try {\n        out = sync(password, salt, iterations, keylen, digest)\n      } catch (e) {\n        return callback(e)\n      }\n      callback(null, out)\n    })\n  }\n\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')\n\n  resolvePromise(checkNative(algo).then(function (resp) {\n    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)\n\n    return sync(password, salt, iterations, keylen, digest)\n  }), callback)\n}\n","exports.pbkdf2 = require('./lib/async')\nexports.pbkdf2Sync = require('./lib/sync')\n","'use strict';\n\nexports.readUInt32BE = function readUInt32BE(bytes, off) {\n  var res =  (bytes[0 + off] << 24) |\n             (bytes[1 + off] << 16) |\n             (bytes[2 + off] << 8) |\n             bytes[3 + off];\n  return res >>> 0;\n};\n\nexports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {\n  bytes[0 + off] = value >>> 24;\n  bytes[1 + off] = (value >>> 16) & 0xff;\n  bytes[2 + off] = (value >>> 8) & 0xff;\n  bytes[3 + off] = value & 0xff;\n};\n\nexports.ip = function ip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inR >>> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= (inR >>> (j + i)) & 1;\n    }\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.rip = function rip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 0; i < 4; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outL <<= 1;\n      outL |= (inR >>> (j + i)) & 1;\n      outL <<= 1;\n      outL |= (inL >>> (j + i)) & 1;\n    }\n  }\n  for (var i = 4; i < 8; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outR <<= 1;\n      outR |= (inR >>> (j + i)) & 1;\n      outR <<= 1;\n      outR |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.pc1 = function pc1(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  // 7, 15, 23, 31, 39, 47, 55, 63\n  // 6, 14, 22, 30, 39, 47, 55, 63\n  // 5, 13, 21, 29, 39, 47, 55, 63\n  // 4, 12, 20, 28\n  for (var i = 7; i >= 5; i--) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inR >> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inL >> (j + i)) & 1;\n    }\n  }\n  for (var j = 0; j <= 24; j += 8) {\n    outL <<= 1;\n    outL |= (inR >> (j + i)) & 1;\n  }\n\n  // 1, 9, 17, 25, 33, 41, 49, 57\n  // 2, 10, 18, 26, 34, 42, 50, 58\n  // 3, 11, 19, 27, 35, 43, 51, 59\n  // 36, 44, 52, 60\n  for (var i = 1; i <= 3; i++) {\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= (inR >> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= (inL >> (j + i)) & 1;\n    }\n  }\n  for (var j = 0; j <= 24; j += 8) {\n    outR <<= 1;\n    outR |= (inL >> (j + i)) & 1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.r28shl = function r28shl(num, shift) {\n  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));\n};\n\nvar pc2table = [\n  // inL => outL\n  14, 11, 17, 4, 27, 23, 25, 0,\n  13, 22, 7, 18, 5, 9, 16, 24,\n  2, 20, 12, 21, 1, 8, 15, 26,\n\n  // inR => outR\n  15, 4, 25, 19, 9, 1, 26, 16,\n  5, 11, 23, 8, 12, 7, 17, 0,\n  22, 3, 10, 14, 6, 20, 27, 24\n];\n\nexports.pc2 = function pc2(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  var len = pc2table.length >>> 1;\n  for (var i = 0; i < len; i++) {\n    outL <<= 1;\n    outL |= (inL >>> pc2table[i]) & 0x1;\n  }\n  for (var i = len; i < pc2table.length; i++) {\n    outR <<= 1;\n    outR |= (inR >>> pc2table[i]) & 0x1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.expand = function expand(r, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  outL = ((r & 1) << 5) | (r >>> 27);\n  for (var i = 23; i >= 15; i -= 4) {\n    outL <<= 6;\n    outL |= (r >>> i) & 0x3f;\n  }\n  for (var i = 11; i >= 3; i -= 4) {\n    outR |= (r >>> i) & 0x3f;\n    outR <<= 6;\n  }\n  outR |= ((r & 0x1f) << 1) | (r >>> 31);\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nvar sTable = [\n  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,\n  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,\n  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,\n  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,\n\n  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,\n  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,\n  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,\n  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,\n\n  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,\n  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,\n  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,\n  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,\n\n  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,\n  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,\n  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,\n  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,\n\n  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,\n  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,\n  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,\n  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,\n\n  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,\n  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,\n  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,\n  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,\n\n  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,\n  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,\n  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,\n  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,\n\n  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,\n  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,\n  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,\n  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11\n];\n\nexports.substitute = function substitute(inL, inR) {\n  var out = 0;\n  for (var i = 0; i < 4; i++) {\n    var b = (inL >>> (18 - i * 6)) & 0x3f;\n    var sb = sTable[i * 0x40 + b];\n\n    out <<= 4;\n    out |= sb;\n  }\n  for (var i = 0; i < 4; i++) {\n    var b = (inR >>> (18 - i * 6)) & 0x3f;\n    var sb = sTable[4 * 0x40 + i * 0x40 + b];\n\n    out <<= 4;\n    out |= sb;\n  }\n  return out >>> 0;\n};\n\nvar permuteTable = [\n  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,\n  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7\n];\n\nexports.permute = function permute(num) {\n  var out = 0;\n  for (var i = 0; i < permuteTable.length; i++) {\n    out <<= 1;\n    out |= (num >>> permuteTable[i]) & 0x1;\n  }\n  return out >>> 0;\n};\n\nexports.padSplit = function padSplit(num, size, group) {\n  var str = num.toString(2);\n  while (str.length < size)\n    str = '0' + str;\n\n  var out = [];\n  for (var i = 0; i < size; i += group)\n    out.push(str.slice(i, i + group));\n  return out.join(' ');\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\n\nfunction Cipher(options) {\n  this.options = options;\n\n  this.type = this.options.type;\n  this.blockSize = 8;\n  this._init();\n\n  this.buffer = new Array(this.blockSize);\n  this.bufferOff = 0;\n}\nmodule.exports = Cipher;\n\nCipher.prototype._init = function _init() {\n  // Might be overrided\n};\n\nCipher.prototype.update = function update(data) {\n  if (data.length === 0)\n    return [];\n\n  if (this.type === 'decrypt')\n    return this._updateDecrypt(data);\n  else\n    return this._updateEncrypt(data);\n};\n\nCipher.prototype._buffer = function _buffer(data, off) {\n  // Append data to buffer\n  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);\n  for (var i = 0; i < min; i++)\n    this.buffer[this.bufferOff + i] = data[off + i];\n  this.bufferOff += min;\n\n  // Shift next\n  return min;\n};\n\nCipher.prototype._flushBuffer = function _flushBuffer(out, off) {\n  this._update(this.buffer, 0, out, off);\n  this.bufferOff = 0;\n  return this.blockSize;\n};\n\nCipher.prototype._updateEncrypt = function _updateEncrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n\n  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;\n  var out = new Array(count * this.blockSize);\n\n  if (this.bufferOff !== 0) {\n    inputOff += this._buffer(data, inputOff);\n\n    if (this.bufferOff === this.buffer.length)\n      outputOff += this._flushBuffer(out, outputOff);\n  }\n\n  // Write blocks\n  var max = data.length - ((data.length - inputOff) % this.blockSize);\n  for (; inputOff < max; inputOff += this.blockSize) {\n    this._update(data, inputOff, out, outputOff);\n    outputOff += this.blockSize;\n  }\n\n  // Queue rest\n  for (; inputOff < data.length; inputOff++, this.bufferOff++)\n    this.buffer[this.bufferOff] = data[inputOff];\n\n  return out;\n};\n\nCipher.prototype._updateDecrypt = function _updateDecrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n\n  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;\n  var out = new Array(count * this.blockSize);\n\n  // TODO(indutny): optimize it, this is far from optimal\n  for (; count > 0; count--) {\n    inputOff += this._buffer(data, inputOff);\n    outputOff += this._flushBuffer(out, outputOff);\n  }\n\n  // Buffer rest of the input\n  inputOff += this._buffer(data, inputOff);\n\n  return out;\n};\n\nCipher.prototype.final = function final(buffer) {\n  var first;\n  if (buffer)\n    first = this.update(buffer);\n\n  var last;\n  if (this.type === 'encrypt')\n    last = this._finalEncrypt();\n  else\n    last = this._finalDecrypt();\n\n  if (first)\n    return first.concat(last);\n  else\n    return last;\n};\n\nCipher.prototype._pad = function _pad(buffer, off) {\n  if (off === 0)\n    return false;\n\n  while (off < buffer.length)\n    buffer[off++] = 0;\n\n  return true;\n};\n\nCipher.prototype._finalEncrypt = function _finalEncrypt() {\n  if (!this._pad(this.buffer, this.bufferOff))\n    return [];\n\n  var out = new Array(this.blockSize);\n  this._update(this.buffer, 0, out, 0);\n  return out;\n};\n\nCipher.prototype._unpad = function _unpad(buffer) {\n  return buffer;\n};\n\nCipher.prototype._finalDecrypt = function _finalDecrypt() {\n  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');\n  var out = new Array(this.blockSize);\n  this._flushBuffer(out, 0);\n\n  return this._unpad(out);\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar utils = require('./utils');\nvar Cipher = require('./cipher');\n\nfunction DESState() {\n  this.tmp = new Array(2);\n  this.keys = null;\n}\n\nfunction DES(options) {\n  Cipher.call(this, options);\n\n  var state = new DESState();\n  this._desState = state;\n\n  this.deriveKeys(state, options.key);\n}\ninherits(DES, Cipher);\nmodule.exports = DES;\n\nDES.create = function create(options) {\n  return new DES(options);\n};\n\nvar shiftTable = [\n  1, 1, 2, 2, 2, 2, 2, 2,\n  1, 2, 2, 2, 2, 2, 2, 1\n];\n\nDES.prototype.deriveKeys = function deriveKeys(state, key) {\n  state.keys = new Array(16 * 2);\n\n  assert.equal(key.length, this.blockSize, 'Invalid key length');\n\n  var kL = utils.readUInt32BE(key, 0);\n  var kR = utils.readUInt32BE(key, 4);\n\n  utils.pc1(kL, kR, state.tmp, 0);\n  kL = state.tmp[0];\n  kR = state.tmp[1];\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var shift = shiftTable[i >>> 1];\n    kL = utils.r28shl(kL, shift);\n    kR = utils.r28shl(kR, shift);\n    utils.pc2(kL, kR, state.keys, i);\n  }\n};\n\nDES.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._desState;\n\n  var l = utils.readUInt32BE(inp, inOff);\n  var r = utils.readUInt32BE(inp, inOff + 4);\n\n  // Initial Permutation\n  utils.ip(l, r, state.tmp, 0);\n  l = state.tmp[0];\n  r = state.tmp[1];\n\n  if (this.type === 'encrypt')\n    this._encrypt(state, l, r, state.tmp, 0);\n  else\n    this._decrypt(state, l, r, state.tmp, 0);\n\n  l = state.tmp[0];\n  r = state.tmp[1];\n\n  utils.writeUInt32BE(out, l, outOff);\n  utils.writeUInt32BE(out, r, outOff + 4);\n};\n\nDES.prototype._pad = function _pad(buffer, off) {\n  var value = buffer.length - off;\n  for (var i = off; i < buffer.length; i++)\n    buffer[i] = value;\n\n  return true;\n};\n\nDES.prototype._unpad = function _unpad(buffer) {\n  var pad = buffer[buffer.length - 1];\n  for (var i = buffer.length - pad; i < buffer.length; i++)\n    assert.equal(buffer[i], pad);\n\n  return buffer.slice(0, buffer.length - pad);\n};\n\nDES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {\n  var l = lStart;\n  var r = rStart;\n\n  // Apply f() x16 times\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1];\n\n    // f(r, k)\n    utils.expand(r, state.tmp, 0);\n\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n\n    var t = r;\n    r = (l ^ f) >>> 0;\n    l = t;\n  }\n\n  // Reverse Initial Permutation\n  utils.rip(r, l, out, off);\n};\n\nDES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {\n  var l = rStart;\n  var r = lStart;\n\n  // Apply f() x16 times\n  for (var i = state.keys.length - 2; i >= 0; i -= 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1];\n\n    // f(r, k)\n    utils.expand(l, state.tmp, 0);\n\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n\n    var t = l;\n    l = (r ^ f) >>> 0;\n    r = t;\n  }\n\n  // Reverse Initial Permutation\n  utils.rip(l, r, out, off);\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar proto = {};\n\nfunction CBCState(iv) {\n  assert.equal(iv.length, 8, 'Invalid IV length');\n\n  this.iv = new Array(8);\n  for (var i = 0; i < this.iv.length; i++)\n    this.iv[i] = iv[i];\n}\n\nfunction instantiate(Base) {\n  function CBC(options) {\n    Base.call(this, options);\n    this._cbcInit();\n  }\n  inherits(CBC, Base);\n\n  var keys = Object.keys(proto);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    CBC.prototype[key] = proto[key];\n  }\n\n  CBC.create = function create(options) {\n    return new CBC(options);\n  };\n\n  return CBC;\n}\n\nexports.instantiate = instantiate;\n\nproto._cbcInit = function _cbcInit() {\n  var state = new CBCState(this.options.iv);\n  this._cbcState = state;\n};\n\nproto._update = function _update(inp, inOff, out, outOff) {\n  var state = this._cbcState;\n  var superProto = this.constructor.super_.prototype;\n\n  var iv = state.iv;\n  if (this.type === 'encrypt') {\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] ^= inp[inOff + i];\n\n    superProto._update.call(this, iv, 0, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = out[outOff + i];\n  } else {\n    superProto._update.call(this, inp, inOff, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      out[outOff + i] ^= iv[i];\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = inp[inOff + i];\n  }\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar Cipher = require('./cipher');\nvar DES = require('./des');\n\nfunction EDEState(type, key) {\n  assert.equal(key.length, 24, 'Invalid key length');\n\n  var k1 = key.slice(0, 8);\n  var k2 = key.slice(8, 16);\n  var k3 = key.slice(16, 24);\n\n  if (type === 'encrypt') {\n    this.ciphers = [\n      DES.create({ type: 'encrypt', key: k1 }),\n      DES.create({ type: 'decrypt', key: k2 }),\n      DES.create({ type: 'encrypt', key: k3 })\n    ];\n  } else {\n    this.ciphers = [\n      DES.create({ type: 'decrypt', key: k3 }),\n      DES.create({ type: 'encrypt', key: k2 }),\n      DES.create({ type: 'decrypt', key: k1 })\n    ];\n  }\n}\n\nfunction EDE(options) {\n  Cipher.call(this, options);\n\n  var state = new EDEState(this.type, this.options.key);\n  this._edeState = state;\n}\ninherits(EDE, Cipher);\n\nmodule.exports = EDE;\n\nEDE.create = function create(options) {\n  return new EDE(options);\n};\n\nEDE.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._edeState;\n\n  state.ciphers[0]._update(inp, inOff, out, outOff);\n  state.ciphers[1]._update(out, outOff, out, outOff);\n  state.ciphers[2]._update(out, outOff, out, outOff);\n};\n\nEDE.prototype._pad = DES.prototype._pad;\nEDE.prototype._unpad = DES.prototype._unpad;\n","'use strict';\n\nexports.utils = require('./des/utils');\nexports.Cipher = require('./des/cipher');\nexports.DES = require('./des/des');\nexports.CBC = require('./des/cbc');\nexports.EDE = require('./des/ede');\n","var CipherBase = require('cipher-base')\nvar des = require('des.js')\nvar inherits = require('inherits')\nvar Buffer = require('safe-buffer').Buffer\n\nvar modes = {\n  'des-ede3-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede3': des.EDE,\n  'des-ede-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede': des.EDE,\n  'des-cbc': des.CBC.instantiate(des.DES),\n  'des-ecb': des.DES\n}\nmodes.des = modes['des-cbc']\nmodes.des3 = modes['des-ede3-cbc']\nmodule.exports = DES\ninherits(DES, CipherBase)\nfunction DES (opts) {\n  CipherBase.call(this)\n  var modeName = opts.mode.toLowerCase()\n  var mode = modes[modeName]\n  var type\n  if (opts.decrypt) {\n    type = 'decrypt'\n  } else {\n    type = 'encrypt'\n  }\n  var key = opts.key\n  if (!Buffer.isBuffer(key)) {\n    key = Buffer.from(key)\n  }\n  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {\n    key = Buffer.concat([key, key.slice(0, 8)])\n  }\n  var iv = opts.iv\n  if (!Buffer.isBuffer(iv)) {\n    iv = Buffer.from(iv)\n  }\n  this._des = mode.create({\n    key: key,\n    iv: iv,\n    type: type\n  })\n}\nDES.prototype._update = function (data) {\n  return Buffer.from(this._des.update(data))\n}\nDES.prototype._final = function () {\n  return Buffer.from(this._des.final())\n}\n","exports.encrypt = function (self, block) {\n  return self._cipher.encryptBlock(block)\n}\n\nexports.decrypt = function (self, block) {\n  return self._cipher.decryptBlock(block)\n}\n","module.exports = function xor (a, b) {\n  var length = Math.min(a.length, b.length)\n  var buffer = new Buffer(length)\n\n  for (var i = 0; i < length; ++i) {\n    buffer[i] = a[i] ^ b[i]\n  }\n\n  return buffer\n}\n","var xor = require('buffer-xor')\n\nexports.encrypt = function (self, block) {\n  var data = xor(block, self._prev)\n\n  self._prev = self._cipher.encryptBlock(data)\n  return self._prev\n}\n\nexports.decrypt = function (self, block) {\n  var pad = self._prev\n\n  self._prev = block\n  var out = self._cipher.decryptBlock(block)\n\n  return xor(out, pad)\n}\n","var Buffer = require('safe-buffer').Buffer\nvar xor = require('buffer-xor')\n\nfunction encryptStart (self, data, decrypt) {\n  var len = data.length\n  var out = xor(data, self._cache)\n  self._cache = self._cache.slice(len)\n  self._prev = Buffer.concat([self._prev, decrypt ? data : out])\n  return out\n}\n\nexports.encrypt = function (self, data, decrypt) {\n  var out = Buffer.allocUnsafe(0)\n  var len\n\n  while (data.length) {\n    if (self._cache.length === 0) {\n      self._cache = self._cipher.encryptBlock(self._prev)\n      self._prev = Buffer.allocUnsafe(0)\n    }\n\n    if (self._cache.length <= data.length) {\n      len = self._cache.length\n      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])\n      data = data.slice(len)\n    } else {\n      out = Buffer.concat([out, encryptStart(self, data, decrypt)])\n      break\n    }\n  }\n\n  return out\n}\n","var Buffer = require('safe-buffer').Buffer\n\nfunction encryptByte (self, byteParam, decrypt) {\n  var pad = self._cipher.encryptBlock(self._prev)\n  var out = pad[0] ^ byteParam\n\n  self._prev = Buffer.concat([\n    self._prev.slice(1),\n    Buffer.from([decrypt ? byteParam : out])\n  ])\n\n  return out\n}\n\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = Buffer.allocUnsafe(len)\n  var i = -1\n\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n\n  return out\n}\n","var Buffer = require('safe-buffer').Buffer\n\nfunction encryptByte (self, byteParam, decrypt) {\n  var pad\n  var i = -1\n  var len = 8\n  var out = 0\n  var bit, value\n  while (++i < len) {\n    pad = self._cipher.encryptBlock(self._prev)\n    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0\n    value = pad[0] ^ bit\n    out += ((value & 0x80) >> (i % 8))\n    self._prev = shiftIn(self._prev, decrypt ? bit : value)\n  }\n  return out\n}\n\nfunction shiftIn (buffer, value) {\n  var len = buffer.length\n  var i = -1\n  var out = Buffer.allocUnsafe(buffer.length)\n  buffer = Buffer.concat([buffer, Buffer.from([value])])\n\n  while (++i < len) {\n    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)\n  }\n\n  return out\n}\n\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = Buffer.allocUnsafe(len)\n  var i = -1\n\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n\n  return out\n}\n","var xor = require('buffer-xor')\n\nfunction getBlock (self) {\n  self._prev = self._cipher.encryptBlock(self._prev)\n  return self._prev\n}\n\nexports.encrypt = function (self, chunk) {\n  while (self._cache.length < chunk.length) {\n    self._cache = Buffer.concat([self._cache, getBlock(self)])\n  }\n\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n","function incr32 (iv) {\n  var len = iv.length\n  var item\n  while (len--) {\n    item = iv.readUInt8(len)\n    if (item === 255) {\n      iv.writeUInt8(0, len)\n    } else {\n      item++\n      iv.writeUInt8(item, len)\n      break\n    }\n  }\n}\nmodule.exports = incr32\n","var xor = require('buffer-xor')\nvar Buffer = require('safe-buffer').Buffer\nvar incr32 = require('../incr32')\n\nfunction getBlock (self) {\n  var out = self._cipher.encryptBlockRaw(self._prev)\n  incr32(self._prev)\n  return out\n}\n\nvar blockSize = 16\nexports.encrypt = function (self, chunk) {\n  var chunkNum = Math.ceil(chunk.length / blockSize)\n  var start = self._cache.length\n  self._cache = Buffer.concat([\n    self._cache,\n    Buffer.allocUnsafe(chunkNum * blockSize)\n  ])\n  for (var i = 0; i < chunkNum; i++) {\n    var out = getBlock(self)\n    var offset = start + i * blockSize\n    self._cache.writeUInt32BE(out[0], offset + 0)\n    self._cache.writeUInt32BE(out[1], offset + 4)\n    self._cache.writeUInt32BE(out[2], offset + 8)\n    self._cache.writeUInt32BE(out[3], offset + 12)\n  }\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n","module.exports={\"aes-128-ecb\":{cipher:\"AES\",key:128,iv:0,mode:\"ECB\",type:\"block\"},\"aes-192-ecb\":{cipher:\"AES\",key:192,iv:0,mode:\"ECB\",type:\"block\"},\"aes-256-ecb\":{cipher:\"AES\",key:256,iv:0,mode:\"ECB\",type:\"block\"},\"aes-128-cbc\":{cipher:\"AES\",key:128,iv:16,mode:\"CBC\",type:\"block\"},\"aes-192-cbc\":{cipher:\"AES\",key:192,iv:16,mode:\"CBC\",type:\"block\"},\"aes-256-cbc\":{cipher:\"AES\",key:256,iv:16,mode:\"CBC\",type:\"block\"},aes128:{cipher:\"AES\",key:128,iv:16,mode:\"CBC\",type:\"block\"},aes192:{cipher:\"AES\",key:192,iv:16,mode:\"CBC\",type:\"block\"},aes256:{cipher:\"AES\",key:256,iv:16,mode:\"CBC\",type:\"block\"},\"aes-128-cfb\":{cipher:\"AES\",key:128,iv:16,mode:\"CFB\",type:\"stream\"},\"aes-192-cfb\":{cipher:\"AES\",key:192,iv:16,mode:\"CFB\",type:\"stream\"},\"aes-256-cfb\":{cipher:\"AES\",key:256,iv:16,mode:\"CFB\",type:\"stream\"},\"aes-128-cfb8\":{cipher:\"AES\",key:128,iv:16,mode:\"CFB8\",type:\"stream\"},\"aes-192-cfb8\":{cipher:\"AES\",key:192,iv:16,mode:\"CFB8\",type:\"stream\"},\"aes-256-cfb8\":{cipher:\"AES\",key:256,iv:16,mode:\"CFB8\",type:\"stream\"},\"aes-128-cfb1\":{cipher:\"AES\",key:128,iv:16,mode:\"CFB1\",type:\"stream\"},\"aes-192-cfb1\":{cipher:\"AES\",key:192,iv:16,mode:\"CFB1\",type:\"stream\"},\"aes-256-cfb1\":{cipher:\"AES\",key:256,iv:16,mode:\"CFB1\",type:\"stream\"},\"aes-128-ofb\":{cipher:\"AES\",key:128,iv:16,mode:\"OFB\",type:\"stream\"},\"aes-192-ofb\":{cipher:\"AES\",key:192,iv:16,mode:\"OFB\",type:\"stream\"},\"aes-256-ofb\":{cipher:\"AES\",key:256,iv:16,mode:\"OFB\",type:\"stream\"},\"aes-128-ctr\":{cipher:\"AES\",key:128,iv:16,mode:\"CTR\",type:\"stream\"},\"aes-192-ctr\":{cipher:\"AES\",key:192,iv:16,mode:\"CTR\",type:\"stream\"},\"aes-256-ctr\":{cipher:\"AES\",key:256,iv:16,mode:\"CTR\",type:\"stream\"},\"aes-128-gcm\":{cipher:\"AES\",key:128,iv:12,mode:\"GCM\",type:\"auth\"},\"aes-192-gcm\":{cipher:\"AES\",key:192,iv:12,mode:\"GCM\",type:\"auth\"},\"aes-256-gcm\":{cipher:\"AES\",key:256,iv:12,mode:\"GCM\",type:\"auth\"}};","var modeModules = {\n  ECB: require('./ecb'),\n  CBC: require('./cbc'),\n  CFB: require('./cfb'),\n  CFB8: require('./cfb8'),\n  CFB1: require('./cfb1'),\n  OFB: require('./ofb'),\n  CTR: require('./ctr'),\n  GCM: require('./ctr')\n}\n\nvar modes = require('./list.json')\n\nfor (var key in modes) {\n  modes[key].module = modeModules[modes[key].mode]\n}\n\nmodule.exports = modes\n","// based on the aes implimentation in triple sec\n// https://github.com/keybase/triplesec\n// which is in turn based on the one from crypto-js\n// https://code.google.com/p/crypto-js/\n\nvar Buffer = require('safe-buffer').Buffer\n\nfunction asUInt32Array (buf) {\n  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n\n  var len = (buf.length / 4) | 0\n  var out = new Array(len)\n\n  for (var i = 0; i < len; i++) {\n    out[i] = buf.readUInt32BE(i * 4)\n  }\n\n  return out\n}\n\nfunction scrubVec (v) {\n  for (var i = 0; i < v.length; v++) {\n    v[i] = 0\n  }\n}\n\nfunction cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {\n  var SUB_MIX0 = SUB_MIX[0]\n  var SUB_MIX1 = SUB_MIX[1]\n  var SUB_MIX2 = SUB_MIX[2]\n  var SUB_MIX3 = SUB_MIX[3]\n\n  var s0 = M[0] ^ keySchedule[0]\n  var s1 = M[1] ^ keySchedule[1]\n  var s2 = M[2] ^ keySchedule[2]\n  var s3 = M[3] ^ keySchedule[3]\n  var t0, t1, t2, t3\n  var ksRow = 4\n\n  for (var round = 1; round < nRounds; round++) {\n    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]\n    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]\n    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]\n    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]\n    s0 = t0\n    s1 = t1\n    s2 = t2\n    s3 = t3\n  }\n\n  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]\n  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]\n  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]\n  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]\n  t0 = t0 >>> 0\n  t1 = t1 >>> 0\n  t2 = t2 >>> 0\n  t3 = t3 >>> 0\n\n  return [t0, t1, t2, t3]\n}\n\n// AES constants\nvar RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]\nvar G = (function () {\n  // Compute double table\n  var d = new Array(256)\n  for (var j = 0; j < 256; j++) {\n    if (j < 128) {\n      d[j] = j << 1\n    } else {\n      d[j] = (j << 1) ^ 0x11b\n    }\n  }\n\n  var SBOX = []\n  var INV_SBOX = []\n  var SUB_MIX = [[], [], [], []]\n  var INV_SUB_MIX = [[], [], [], []]\n\n  // Walk GF(2^8)\n  var x = 0\n  var xi = 0\n  for (var i = 0; i < 256; ++i) {\n    // Compute sbox\n    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)\n    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63\n    SBOX[x] = sx\n    INV_SBOX[sx] = x\n\n    // Compute multiplication\n    var x2 = d[x]\n    var x4 = d[x2]\n    var x8 = d[x4]\n\n    // Compute sub bytes, mix columns tables\n    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)\n    SUB_MIX[0][x] = (t << 24) | (t >>> 8)\n    SUB_MIX[1][x] = (t << 16) | (t >>> 16)\n    SUB_MIX[2][x] = (t << 8) | (t >>> 24)\n    SUB_MIX[3][x] = t\n\n    // Compute inv sub bytes, inv mix columns tables\n    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)\n    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)\n    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)\n    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)\n    INV_SUB_MIX[3][sx] = t\n\n    if (x === 0) {\n      x = xi = 1\n    } else {\n      x = x2 ^ d[d[d[x8 ^ x2]]]\n      xi ^= d[d[xi]]\n    }\n  }\n\n  return {\n    SBOX: SBOX,\n    INV_SBOX: INV_SBOX,\n    SUB_MIX: SUB_MIX,\n    INV_SUB_MIX: INV_SUB_MIX\n  }\n})()\n\nfunction AES (key) {\n  this._key = asUInt32Array(key)\n  this._reset()\n}\n\nAES.blockSize = 4 * 4\nAES.keySize = 256 / 8\nAES.prototype.blockSize = AES.blockSize\nAES.prototype.keySize = AES.keySize\nAES.prototype._reset = function () {\n  var keyWords = this._key\n  var keySize = keyWords.length\n  var nRounds = keySize + 6\n  var ksRows = (nRounds + 1) * 4\n\n  var keySchedule = []\n  for (var k = 0; k < keySize; k++) {\n    keySchedule[k] = keyWords[k]\n  }\n\n  for (k = keySize; k < ksRows; k++) {\n    var t = keySchedule[k - 1]\n\n    if (k % keySize === 0) {\n      t = (t << 8) | (t >>> 24)\n      t =\n        (G.SBOX[t >>> 24] << 24) |\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\n        (G.SBOX[t & 0xff])\n\n      t ^= RCON[(k / keySize) | 0] << 24\n    } else if (keySize > 6 && k % keySize === 4) {\n      t =\n        (G.SBOX[t >>> 24] << 24) |\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\n        (G.SBOX[t & 0xff])\n    }\n\n    keySchedule[k] = keySchedule[k - keySize] ^ t\n  }\n\n  var invKeySchedule = []\n  for (var ik = 0; ik < ksRows; ik++) {\n    var ksR = ksRows - ik\n    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]\n\n    if (ik < 4 || ksR <= 4) {\n      invKeySchedule[ik] = tt\n    } else {\n      invKeySchedule[ik] =\n        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^\n        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^\n        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^\n        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]\n    }\n  }\n\n  this._nRounds = nRounds\n  this._keySchedule = keySchedule\n  this._invKeySchedule = invKeySchedule\n}\n\nAES.prototype.encryptBlockRaw = function (M) {\n  M = asUInt32Array(M)\n  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)\n}\n\nAES.prototype.encryptBlock = function (M) {\n  var out = this.encryptBlockRaw(M)\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[1], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[3], 12)\n  return buf\n}\n\nAES.prototype.decryptBlock = function (M) {\n  M = asUInt32Array(M)\n\n  // swap\n  var m1 = M[1]\n  M[1] = M[3]\n  M[3] = m1\n\n  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[3], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[1], 12)\n  return buf\n}\n\nAES.prototype.scrub = function () {\n  scrubVec(this._keySchedule)\n  scrubVec(this._invKeySchedule)\n  scrubVec(this._key)\n}\n\nmodule.exports.AES = AES\n","var Buffer = require('safe-buffer').Buffer\nvar ZEROES = Buffer.alloc(16, 0)\n\nfunction toArray (buf) {\n  return [\n    buf.readUInt32BE(0),\n    buf.readUInt32BE(4),\n    buf.readUInt32BE(8),\n    buf.readUInt32BE(12)\n  ]\n}\n\nfunction fromArray (out) {\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0] >>> 0, 0)\n  buf.writeUInt32BE(out[1] >>> 0, 4)\n  buf.writeUInt32BE(out[2] >>> 0, 8)\n  buf.writeUInt32BE(out[3] >>> 0, 12)\n  return buf\n}\n\nfunction GHASH (key) {\n  this.h = key\n  this.state = Buffer.alloc(16, 0)\n  this.cache = Buffer.allocUnsafe(0)\n}\n\n// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html\n// by Juho Vähä-Herttua\nGHASH.prototype.ghash = function (block) {\n  var i = -1\n  while (++i < block.length) {\n    this.state[i] ^= block[i]\n  }\n  this._multiply()\n}\n\nGHASH.prototype._multiply = function () {\n  var Vi = toArray(this.h)\n  var Zi = [0, 0, 0, 0]\n  var j, xi, lsbVi\n  var i = -1\n  while (++i < 128) {\n    xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0\n    if (xi) {\n      // Z_i+1 = Z_i ^ V_i\n      Zi[0] ^= Vi[0]\n      Zi[1] ^= Vi[1]\n      Zi[2] ^= Vi[2]\n      Zi[3] ^= Vi[3]\n    }\n\n    // Store the value of LSB(V_i)\n    lsbVi = (Vi[3] & 1) !== 0\n\n    // V_i+1 = V_i >> 1\n    for (j = 3; j > 0; j--) {\n      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)\n    }\n    Vi[0] = Vi[0] >>> 1\n\n    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R\n    if (lsbVi) {\n      Vi[0] = Vi[0] ^ (0xe1 << 24)\n    }\n  }\n  this.state = fromArray(Zi)\n}\n\nGHASH.prototype.update = function (buf) {\n  this.cache = Buffer.concat([this.cache, buf])\n  var chunk\n  while (this.cache.length >= 16) {\n    chunk = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    this.ghash(chunk)\n  }\n}\n\nGHASH.prototype.final = function (abl, bl) {\n  if (this.cache.length) {\n    this.ghash(Buffer.concat([this.cache, ZEROES], 16))\n  }\n\n  this.ghash(fromArray([0, abl, 0, bl]))\n  return this.state\n}\n\nmodule.exports = GHASH\n","var aes = require('./aes')\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\nvar GHASH = require('./ghash')\nvar xor = require('buffer-xor')\nvar incr32 = require('./incr32')\n\nfunction xorTest (a, b) {\n  var out = 0\n  if (a.length !== b.length) out++\n\n  var len = Math.min(a.length, b.length)\n  for (var i = 0; i < len; ++i) {\n    out += (a[i] ^ b[i])\n  }\n\n  return out\n}\n\nfunction calcIv (self, iv, ck) {\n  if (iv.length === 12) {\n    self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])\n    return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])\n  }\n  var ghash = new GHASH(ck)\n  var len = iv.length\n  var toPad = len % 16\n  ghash.update(iv)\n  if (toPad) {\n    toPad = 16 - toPad\n    ghash.update(Buffer.alloc(toPad, 0))\n  }\n  ghash.update(Buffer.alloc(8, 0))\n  var ivBits = len * 8\n  var tail = Buffer.alloc(8)\n  tail.writeUIntBE(ivBits, 0, 8)\n  ghash.update(tail)\n  self._finID = ghash.state\n  var out = Buffer.from(self._finID)\n  incr32(out)\n  return out\n}\nfunction StreamCipher (mode, key, iv, decrypt) {\n  Transform.call(this)\n\n  var h = Buffer.alloc(4, 0)\n\n  this._cipher = new aes.AES(key)\n  var ck = this._cipher.encryptBlock(h)\n  this._ghash = new GHASH(ck)\n  iv = calcIv(this, iv, ck)\n\n  this._prev = Buffer.from(iv)\n  this._cache = Buffer.allocUnsafe(0)\n  this._secCache = Buffer.allocUnsafe(0)\n  this._decrypt = decrypt\n  this._alen = 0\n  this._len = 0\n  this._mode = mode\n\n  this._authTag = null\n  this._called = false\n}\n\ninherits(StreamCipher, Transform)\n\nStreamCipher.prototype._update = function (chunk) {\n  if (!this._called && this._alen) {\n    var rump = 16 - (this._alen % 16)\n    if (rump < 16) {\n      rump = Buffer.alloc(rump, 0)\n      this._ghash.update(rump)\n    }\n  }\n\n  this._called = true\n  var out = this._mode.encrypt(this, chunk)\n  if (this._decrypt) {\n    this._ghash.update(chunk)\n  } else {\n    this._ghash.update(out)\n  }\n  this._len += chunk.length\n  return out\n}\n\nStreamCipher.prototype._final = function () {\n  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data')\n\n  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))\n  if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data')\n\n  this._authTag = tag\n  this._cipher.scrub()\n}\n\nStreamCipher.prototype.getAuthTag = function getAuthTag () {\n  if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state')\n\n  return this._authTag\n}\n\nStreamCipher.prototype.setAuthTag = function setAuthTag (tag) {\n  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state')\n\n  this._authTag = tag\n}\n\nStreamCipher.prototype.setAAD = function setAAD (buf) {\n  if (this._called) throw new Error('Attempting to set AAD in unsupported state')\n\n  this._ghash.update(buf)\n  this._alen += buf.length\n}\n\nmodule.exports = StreamCipher\n","var aes = require('./aes')\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\n\nfunction StreamCipher (mode, key, iv, decrypt) {\n  Transform.call(this)\n\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._cache = Buffer.allocUnsafe(0)\n  this._secCache = Buffer.allocUnsafe(0)\n  this._decrypt = decrypt\n  this._mode = mode\n}\n\ninherits(StreamCipher, Transform)\n\nStreamCipher.prototype._update = function (chunk) {\n  return this._mode.encrypt(this, chunk, this._decrypt)\n}\n\nStreamCipher.prototype._final = function () {\n  this._cipher.scrub()\n}\n\nmodule.exports = StreamCipher\n","var Buffer = require('safe-buffer').Buffer\nvar MD5 = require('md5.js')\n\n/* eslint-disable camelcase */\nfunction EVP_BytesToKey (password, salt, keyBits, ivLen) {\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')\n  if (salt) {\n    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')\n    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')\n  }\n\n  var keyLen = keyBits / 8\n  var key = Buffer.alloc(keyLen)\n  var iv = Buffer.alloc(ivLen || 0)\n  var tmp = Buffer.alloc(0)\n\n  while (keyLen > 0 || ivLen > 0) {\n    var hash = new MD5()\n    hash.update(tmp)\n    hash.update(password)\n    if (salt) hash.update(salt)\n    tmp = hash.digest()\n\n    var used = 0\n\n    if (keyLen > 0) {\n      var keyStart = key.length - keyLen\n      used = Math.min(keyLen, tmp.length)\n      tmp.copy(key, keyStart, 0, used)\n      keyLen -= used\n    }\n\n    if (used < tmp.length && ivLen > 0) {\n      var ivStart = iv.length - ivLen\n      var length = Math.min(ivLen, tmp.length - used)\n      tmp.copy(iv, ivStart, used, used + length)\n      ivLen -= length\n    }\n  }\n\n  tmp.fill(0)\n  return { key: key, iv: iv }\n}\n\nmodule.exports = EVP_BytesToKey\n","var MODES = require('./modes')\nvar AuthCipher = require('./authCipher')\nvar Buffer = require('safe-buffer').Buffer\nvar StreamCipher = require('./streamCipher')\nvar Transform = require('cipher-base')\nvar aes = require('./aes')\nvar ebtk = require('evp_bytestokey')\nvar inherits = require('inherits')\n\nfunction Cipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Cipher, Transform)\n\nCipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n\n  while ((chunk = this._cache.get())) {\n    thing = this._mode.encrypt(this, chunk)\n    out.push(thing)\n  }\n\n  return Buffer.concat(out)\n}\n\nvar PADDING = Buffer.alloc(16, 0x10)\n\nCipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    chunk = this._mode.encrypt(this, chunk)\n    this._cipher.scrub()\n    return chunk\n  }\n\n  if (!chunk.equals(PADDING)) {\n    this._cipher.scrub()\n    throw new Error('data not multiple of block length')\n  }\n}\n\nCipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function () {\n  if (this.cache.length > 15) {\n    var out = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    return out\n  }\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  var len = 16 - this.cache.length\n  var padBuff = Buffer.allocUnsafe(len)\n\n  var i = -1\n  while (++i < len) {\n    padBuff.writeUInt8(len, i)\n  }\n\n  return Buffer.concat([this.cache, padBuff])\n}\n\nfunction createCipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv)\n  }\n\n  return new Cipher(config.module, password, iv)\n}\n\nfunction createCipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createCipheriv = createCipheriv\nexports.createCipher = createCipher\n","var AuthCipher = require('./authCipher')\nvar Buffer = require('safe-buffer').Buffer\nvar MODES = require('./modes')\nvar StreamCipher = require('./streamCipher')\nvar Transform = require('cipher-base')\nvar aes = require('./aes')\nvar ebtk = require('evp_bytestokey')\nvar inherits = require('inherits')\n\nfunction Decipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._last = void 0\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Decipher, Transform)\n\nDecipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n  while ((chunk = this._cache.get(this._autopadding))) {\n    thing = this._mode.decrypt(this, chunk)\n    out.push(thing)\n  }\n  return Buffer.concat(out)\n}\n\nDecipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    return unpad(this._mode.decrypt(this, chunk))\n  } else if (chunk) {\n    throw new Error('data not multiple of block length')\n  }\n}\n\nDecipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function (autoPadding) {\n  var out\n  if (autoPadding) {\n    if (this.cache.length > 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  } else {\n    if (this.cache.length >= 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  }\n\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  if (this.cache.length) return this.cache\n}\n\nfunction unpad (last) {\n  var padded = last[15]\n  if (padded < 1 || padded > 16) {\n    throw new Error('unable to decrypt data')\n  }\n  var i = -1\n  while (++i < padded) {\n    if (last[(i + (16 - padded))] !== padded) {\n      throw new Error('unable to decrypt data')\n    }\n  }\n  if (padded === 16) return\n\n  return last.slice(0, 16 - padded)\n}\n\nfunction createDecipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv, true)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv, true)\n  }\n\n  return new Decipher(config.module, password, iv)\n}\n\nfunction createDecipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createDecipher = createDecipher\nexports.createDecipheriv = createDecipheriv\n","var ciphers = require('./encrypter')\nvar deciphers = require('./decrypter')\nvar modes = require('./modes/list.json')\n\nfunction getCiphers () {\n  return Object.keys(modes)\n}\n\nexports.createCipher = exports.Cipher = ciphers.createCipher\nexports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv\nexports.createDecipher = exports.Decipher = deciphers.createDecipher\nexports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv\nexports.listCiphers = exports.getCiphers = getCiphers\n","exports['des-ecb'] = {\n  key: 8,\n  iv: 0\n}\nexports['des-cbc'] = exports.des = {\n  key: 8,\n  iv: 8\n}\nexports['des-ede3-cbc'] = exports.des3 = {\n  key: 24,\n  iv: 8\n}\nexports['des-ede3'] = {\n  key: 24,\n  iv: 0\n}\nexports['des-ede-cbc'] = {\n  key: 16,\n  iv: 8\n}\nexports['des-ede'] = {\n  key: 16,\n  iv: 0\n}\n","var DES = require('browserify-des')\nvar aes = require('browserify-aes/browser')\nvar aesModes = require('browserify-aes/modes')\nvar desModes = require('browserify-des/modes')\nvar ebtk = require('evp_bytestokey')\n\nfunction createCipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createDecipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createCipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction createDecipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction getCiphers () {\n  return Object.keys(desModes).concat(aes.getCiphers())\n}\n\nexports.createCipher = exports.Cipher = createCipher\nexports.createCipheriv = exports.Cipheriv = createCipheriv\nexports.createDecipher = exports.Decipher = createDecipher\nexports.createDecipheriv = exports.Decipheriv = createDecipheriv\nexports.listCiphers = exports.getCiphers = getCiphers\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","var bn = require('bn.js');\nvar brorand = require('brorand');\n\nfunction MillerRabin(rand) {\n  this.rand = rand || new brorand.Rand();\n}\nmodule.exports = MillerRabin;\n\nMillerRabin.create = function create(rand) {\n  return new MillerRabin(rand);\n};\n\nMillerRabin.prototype._randbelow = function _randbelow(n) {\n  var len = n.bitLength();\n  var min_bytes = Math.ceil(len / 8);\n\n  // Generage random bytes until a number less than n is found.\n  // This ensures that 0..n-1 have an equal probability of being selected.\n  do\n    var a = new bn(this.rand.generate(min_bytes));\n  while (a.cmp(n) >= 0);\n\n  return a;\n};\n\nMillerRabin.prototype._randrange = function _randrange(start, stop) {\n  // Generate a random number greater than or equal to start and less than stop.\n  var size = stop.sub(start);\n  return start.add(this._randbelow(size));\n};\n\nMillerRabin.prototype.test = function test(n, k, cb) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  var prime = true;\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n    if (cb)\n      cb(a);\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return false;\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s)\n      return false;\n  }\n\n  return prime;\n};\n\nMillerRabin.prototype.getDivisor = function getDivisor(n, k) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n\n    var g = n.gcd(a);\n    if (g.cmpn(1) !== 0)\n      return g;\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return x.fromRed().subn(1).gcd(n);\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s) {\n      x = x.redSqr();\n      return x.fromRed().subn(1).gcd(n);\n    }\n  }\n\n  return false;\n};\n","var randomBytes = require('randombytes');\nmodule.exports = findPrime;\nfindPrime.simpleSieve = simpleSieve;\nfindPrime.fermatTest = fermatTest;\nvar BN = require('bn.js');\nvar TWENTYFOUR = new BN(24);\nvar MillerRabin = require('miller-rabin');\nvar millerRabin = new MillerRabin();\nvar ONE = new BN(1);\nvar TWO = new BN(2);\nvar FIVE = new BN(5);\nvar SIXTEEN = new BN(16);\nvar EIGHT = new BN(8);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar ELEVEN = new BN(11);\nvar FOUR = new BN(4);\nvar TWELVE = new BN(12);\nvar primes = null;\n\nfunction _getPrimes() {\n  if (primes !== null)\n    return primes;\n\n  var limit = 0x100000;\n  var res = [];\n  res[0] = 2;\n  for (var i = 1, k = 3; k < limit; k += 2) {\n    var sqrt = Math.ceil(Math.sqrt(k));\n    for (var j = 0; j < i && res[j] <= sqrt; j++)\n      if (k % res[j] === 0)\n        break;\n\n    if (i !== j && res[j] <= sqrt)\n      continue;\n\n    res[i++] = k;\n  }\n  primes = res;\n  return res;\n}\n\nfunction simpleSieve(p) {\n  var primes = _getPrimes();\n\n  for (var i = 0; i < primes.length; i++)\n    if (p.modn(primes[i]) === 0) {\n      if (p.cmpn(primes[i]) === 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n  return true;\n}\n\nfunction fermatTest(p) {\n  var red = BN.mont(p);\n  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;\n}\n\nfunction findPrime(bits, gen) {\n  if (bits < 16) {\n    // this is what openssl does\n    if (gen === 2 || gen === 5) {\n      return new BN([0x8c, 0x7b]);\n    } else {\n      return new BN([0x8c, 0x27]);\n    }\n  }\n  gen = new BN(gen);\n\n  var num, n2;\n\n  while (true) {\n    num = new BN(randomBytes(Math.ceil(bits / 8)));\n    while (num.bitLength() > bits) {\n      num.ishrn(1);\n    }\n    if (num.isEven()) {\n      num.iadd(ONE);\n    }\n    if (!num.testn(1)) {\n      num.iadd(TWO);\n    }\n    if (!gen.cmp(TWO)) {\n      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        num.iadd(FOUR);\n      }\n    } else if (!gen.cmp(FIVE)) {\n      while (num.mod(TEN).cmp(THREE)) {\n        num.iadd(FOUR);\n      }\n    }\n    n2 = num.shrn(1);\n    if (simpleSieve(n2) && simpleSieve(num) &&\n      fermatTest(n2) && fermatTest(num) &&\n      millerRabin.test(n2) && millerRabin.test(num)) {\n      return num;\n    }\n  }\n\n}\n","module.exports={modp1:{gen:\"02\",prime:\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff\"},modp2:{gen:\"02\",prime:\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff\"},modp5:{gen:\"02\",prime:\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff\"},modp14:{gen:\"02\",prime:\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff\"},modp15:{gen:\"02\",prime:\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff\"},modp16:{gen:\"02\",prime:\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff\"},modp17:{gen:\"02\",prime:\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff\"},modp18:{gen:\"02\",prime:\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff\"}};","var BN = require('bn.js');\nvar MillerRabin = require('miller-rabin');\nvar millerRabin = new MillerRabin();\nvar TWENTYFOUR = new BN(24);\nvar ELEVEN = new BN(11);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar primes = require('./generatePrime');\nvar randomBytes = require('randombytes');\nmodule.exports = DH;\n\nfunction setPublicKey(pub, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc);\n  }\n  this._pub = new BN(pub);\n  return this;\n}\n\nfunction setPrivateKey(priv, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc);\n  }\n  this._priv = new BN(priv);\n  return this;\n}\n\nvar primeCache = {};\nfunction checkPrime(prime, generator) {\n  var gen = generator.toString('hex');\n  var hex = [gen, prime.toString(16)].join('_');\n  if (hex in primeCache) {\n    return primeCache[hex];\n  }\n  var error = 0;\n\n  if (prime.isEven() ||\n    !primes.simpleSieve ||\n    !primes.fermatTest(prime) ||\n    !millerRabin.test(prime)) {\n    //not a prime so +1\n    error += 1;\n\n    if (gen === '02' || gen === '05') {\n      // we'd be able to check the generator\n      // it would fail so +8\n      error += 8;\n    } else {\n      //we wouldn't be able to test the generator\n      // so +4\n      error += 4;\n    }\n    primeCache[hex] = error;\n    return error;\n  }\n  if (!millerRabin.test(prime.shrn(1))) {\n    //not a safe prime\n    error += 2;\n  }\n  var rem;\n  switch (gen) {\n    case '02':\n      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        // unsuidable generator\n        error += 8;\n      }\n      break;\n    case '05':\n      rem = prime.mod(TEN);\n      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {\n        // prime mod 10 needs to equal 3 or 7\n        error += 8;\n      }\n      break;\n    default:\n      error += 4;\n  }\n  primeCache[hex] = error;\n  return error;\n}\n\nfunction DH(prime, generator, malleable) {\n  this.setGenerator(generator);\n  this.__prime = new BN(prime);\n  this._prime = BN.mont(this.__prime);\n  this._primeLen = prime.length;\n  this._pub = undefined;\n  this._priv = undefined;\n  this._primeCode = undefined;\n  if (malleable) {\n    this.setPublicKey = setPublicKey;\n    this.setPrivateKey = setPrivateKey;\n  } else {\n    this._primeCode = 8;\n  }\n}\nObject.defineProperty(DH.prototype, 'verifyError', {\n  enumerable: true,\n  get: function () {\n    if (typeof this._primeCode !== 'number') {\n      this._primeCode = checkPrime(this.__prime, this.__gen);\n    }\n    return this._primeCode;\n  }\n});\nDH.prototype.generateKeys = function () {\n  if (!this._priv) {\n    this._priv = new BN(randomBytes(this._primeLen));\n  }\n  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();\n  return this.getPublicKey();\n};\n\nDH.prototype.computeSecret = function (other) {\n  other = new BN(other);\n  other = other.toRed(this._prime);\n  var secret = other.redPow(this._priv).fromRed();\n  var out = new Buffer(secret.toArray());\n  var prime = this.getPrime();\n  if (out.length < prime.length) {\n    var front = new Buffer(prime.length - out.length);\n    front.fill(0);\n    out = Buffer.concat([front, out]);\n  }\n  return out;\n};\n\nDH.prototype.getPublicKey = function getPublicKey(enc) {\n  return formatReturnValue(this._pub, enc);\n};\n\nDH.prototype.getPrivateKey = function getPrivateKey(enc) {\n  return formatReturnValue(this._priv, enc);\n};\n\nDH.prototype.getPrime = function (enc) {\n  return formatReturnValue(this.__prime, enc);\n};\n\nDH.prototype.getGenerator = function (enc) {\n  return formatReturnValue(this._gen, enc);\n};\n\nDH.prototype.setGenerator = function (gen, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(gen)) {\n    gen = new Buffer(gen, enc);\n  }\n  this.__gen = gen;\n  this._gen = new BN(gen);\n  return this;\n};\n\nfunction formatReturnValue(bn, enc) {\n  var buf = new Buffer(bn.toArray());\n  if (!enc) {\n    return buf;\n  } else {\n    return buf.toString(enc);\n  }\n}\n","var generatePrime = require('./lib/generatePrime')\nvar primes = require('./lib/primes.json')\n\nvar DH = require('./lib/dh')\n\nfunction getDiffieHellman (mod) {\n  var prime = new Buffer(primes[mod].prime, 'hex')\n  var gen = new Buffer(primes[mod].gen, 'hex')\n\n  return new DH(prime, gen)\n}\n\nvar ENCODINGS = {\n  'binary': true, 'hex': true, 'base64': true\n}\n\nfunction createDiffieHellman (prime, enc, generator, genc) {\n  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {\n    return createDiffieHellman(prime, 'binary', enc, generator)\n  }\n\n  enc = enc || 'binary'\n  genc = genc || 'binary'\n  generator = generator || new Buffer([2])\n\n  if (!Buffer.isBuffer(generator)) {\n    generator = new Buffer(generator, genc)\n  }\n\n  if (typeof prime === 'number') {\n    return new DH(generatePrime(prime, generator), generator, true)\n  }\n\n  if (!Buffer.isBuffer(prime)) {\n    prime = new Buffer(prime, enc)\n  }\n\n  return new DH(prime, generator, true)\n}\n\nexports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman\nexports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","module.exports = require('events').EventEmitter;\n","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();","'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\nrequire('inherits')(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nrequire('inherits')(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;","'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = require('util');\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/buffer_list');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\nrequire('inherits')(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';\n\nmodule.exports = Transform;\n\nvar _require$codes = require('../errors').codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = require('./_stream_duplex');\n\nrequire('inherits')(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\nrequire('inherits')(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = require('../../../errors').codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var bn = require('bn.js');\nvar randomBytes = require('randombytes');\nmodule.exports = crt;\nfunction blind(priv) {\n  var r = getr(priv);\n  var blinder = r.toRed(bn.mont(priv.modulus))\n  .redPow(new bn(priv.publicExponent)).fromRed();\n  return {\n    blinder: blinder,\n    unblinder:r.invm(priv.modulus)\n  };\n}\nfunction crt(msg, priv) {\n  var blinds = blind(priv);\n  var len = priv.modulus.byteLength();\n  var mod = bn.mont(priv.modulus);\n  var blinded = new bn(msg).mul(blinds.blinder).umod(priv.modulus);\n  var c1 = blinded.toRed(bn.mont(priv.prime1));\n  var c2 = blinded.toRed(bn.mont(priv.prime2));\n  var qinv = priv.coefficient;\n  var p = priv.prime1;\n  var q = priv.prime2;\n  var m1 = c1.redPow(priv.exponent1);\n  var m2 = c2.redPow(priv.exponent2);\n  m1 = m1.fromRed();\n  m2 = m2.fromRed();\n  var h = m1.isub(m2).imul(qinv).umod(p);\n  h.imul(q);\n  m2.iadd(h);\n  return new Buffer(m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false, len));\n}\ncrt.getr = getr;\nfunction getr(priv) {\n  var len = priv.modulus.byteLength();\n  var r = new bn(randomBytes(len));\n  while (r.cmp(priv.modulus) >=  0 || !r.umod(priv.prime1) || !r.umod(priv.prime2)) {\n    r = new bn(randomBytes(len));\n  }\n  return r;\n}\n","module.exports={name:\"elliptic\",version:\"6.5.3\",description:\"EC cryptography\",main:\"lib/elliptic.js\",files:[\"lib\"],scripts:{jscs:\"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js\",jshint:\"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js\",lint:\"npm run jscs && npm run jshint\",unit:\"istanbul test _mocha --reporter=spec test/index.js\",test:\"npm run lint && npm run unit\",version:\"grunt dist && git add dist/\"},repository:{type:\"git\",url:\"git@github.com:indutny/elliptic\"},keywords:[\"EC\",\"Elliptic\",\"curve\",\"Cryptography\"],author:\"Fedor Indutny <fedor@indutny.com>\",license:\"MIT\",bugs:{url:\"https://github.com/indutny/elliptic/issues\"},homepage:\"https://github.com/indutny/elliptic\",devDependencies:{brfs:\"^1.4.3\",coveralls:\"^3.0.8\",grunt:\"^1.0.4\",\"grunt-browserify\":\"^5.0.0\",\"grunt-cli\":\"^1.2.0\",\"grunt-contrib-connect\":\"^1.0.0\",\"grunt-contrib-copy\":\"^1.0.0\",\"grunt-contrib-uglify\":\"^1.0.1\",\"grunt-mocha-istanbul\":\"^3.0.1\",\"grunt-saucelabs\":\"^9.0.1\",istanbul:\"^0.4.2\",jscs:\"^3.0.7\",jshint:\"^2.10.3\",mocha:\"^6.2.2\"},dependencies:{\"bn.js\":\"4.11.9\",brorand:\"1.1.0\",\"hash.js\":\"1.1.7\",\"hmac-drbg\":\"1.0.1\",inherits:\"2.0.4\",\"minimalistic-assert\":\"1.0.1\",\"minimalistic-crypto-utils\":\"1.0.1\"},_integrity:\"sha1-000000000000000000000000000=\",_resolved:\"6.5.3\"};","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    []\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      var m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      var m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n           this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n                                     bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  for (var j = 0; j < naf.length; j += doubles.step) {\n    var nafW = 0;\n    for (var k = j + doubles.step - 1; k >= j; k--)\n      nafW = (nafW << 1) + naf[k];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (var j = 0; j < repr.length; j++) {\n      var nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--)\n      k++;\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n                                                       points,\n                                                       coeffs,\n                                                       len,\n                                                       jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  for (var i = 0; i < len; i++) {\n    var p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (var i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b] /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (var j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (var i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (var j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (var j = 0; j < len; j++) {\n      var z = tmp[j];\n      var p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (var i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n                          bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 }\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n    var p = points[i];\n    var beta = p._getBeta();\n\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n  // Clean-up references to points and coefficients\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (var i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (var i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // E = a * C\n    var e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      var h = this.z.redSqr();\n      // J = F - 2 * H\n      var j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    var e = c.redAdd(d);\n    // H = (c * Z1)^2\n    var h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    var j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n                          this.y,\n                          this.z,\n                          this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'\n      ]\n    ]\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'\n      ]\n    ]\n  }\n};\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve\n      });\n      return curve;\n    }\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'\n  ]\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'\n  ]\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'\n  ]\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'\n  ]\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650'\n  ]\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9'\n  ]\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658'\n  ]\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3'\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15'\n    }\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre\n  ]\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(curves.hasOwnProperty(options), 'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray()\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  do {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  } while (true);\n};\n\nEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8'\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; true; iter++) {\n    var k = options.k ?\n        options.k(iter) :\n        new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n\n  if (!this.curve._maxwellTrick) {\n    var p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  var p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength)\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n","'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  var curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n               .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this._strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    var z = 0;\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      var b;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        b = c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n\n      r |= b;\n      z |= b;\n    }\n\n    assert(!(z & 0xf0), 'Invalid character in ' + str);\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n","'use strict';\n\nconst inherits = require('inherits');\n\nfunction Reporter(options) {\n  this._reporterState = {\n    obj: null,\n    path: [],\n    options: options || {},\n    errors: []\n  };\n}\nexports.Reporter = Reporter;\n\nReporter.prototype.isError = function isError(obj) {\n  return obj instanceof ReporterError;\n};\n\nReporter.prototype.save = function save() {\n  const state = this._reporterState;\n\n  return { obj: state.obj, pathLen: state.path.length };\n};\n\nReporter.prototype.restore = function restore(data) {\n  const state = this._reporterState;\n\n  state.obj = data.obj;\n  state.path = state.path.slice(0, data.pathLen);\n};\n\nReporter.prototype.enterKey = function enterKey(key) {\n  return this._reporterState.path.push(key);\n};\n\nReporter.prototype.exitKey = function exitKey(index) {\n  const state = this._reporterState;\n\n  state.path = state.path.slice(0, index - 1);\n};\n\nReporter.prototype.leaveKey = function leaveKey(index, key, value) {\n  const state = this._reporterState;\n\n  this.exitKey(index);\n  if (state.obj !== null)\n    state.obj[key] = value;\n};\n\nReporter.prototype.path = function path() {\n  return this._reporterState.path.join('/');\n};\n\nReporter.prototype.enterObject = function enterObject() {\n  const state = this._reporterState;\n\n  const prev = state.obj;\n  state.obj = {};\n  return prev;\n};\n\nReporter.prototype.leaveObject = function leaveObject(prev) {\n  const state = this._reporterState;\n\n  const now = state.obj;\n  state.obj = prev;\n  return now;\n};\n\nReporter.prototype.error = function error(msg) {\n  let err;\n  const state = this._reporterState;\n\n  const inherited = msg instanceof ReporterError;\n  if (inherited) {\n    err = msg;\n  } else {\n    err = new ReporterError(state.path.map(function(elem) {\n      return '[' + JSON.stringify(elem) + ']';\n    }).join(''), msg.message || msg, msg.stack);\n  }\n\n  if (!state.options.partial)\n    throw err;\n\n  if (!inherited)\n    state.errors.push(err);\n\n  return err;\n};\n\nReporter.prototype.wrapResult = function wrapResult(result) {\n  const state = this._reporterState;\n  if (!state.options.partial)\n    return result;\n\n  return {\n    result: this.isError(result) ? null : result,\n    errors: state.errors\n  };\n};\n\nfunction ReporterError(path, msg) {\n  this.path = path;\n  this.rethrow(msg);\n}\ninherits(ReporterError, Error);\n\nReporterError.prototype.rethrow = function rethrow(msg) {\n  this.message = msg + ' at: ' + (this.path || '(shallow)');\n  if (Error.captureStackTrace)\n    Error.captureStackTrace(this, ReporterError);\n\n  if (!this.stack) {\n    try {\n      // IE only adds stack when thrown\n      throw new Error(this.message);\n    } catch (e) {\n      this.stack = e.stack;\n    }\n  }\n  return this;\n};\n","'use strict';\n\nconst inherits = require('inherits');\nconst Reporter = require('../base/reporter').Reporter;\nconst Buffer = require('safer-buffer').Buffer;\n\nfunction DecoderBuffer(base, options) {\n  Reporter.call(this, options);\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer');\n    return;\n  }\n\n  this.base = base;\n  this.offset = 0;\n  this.length = base.length;\n}\ninherits(DecoderBuffer, Reporter);\nexports.DecoderBuffer = DecoderBuffer;\n\nDecoderBuffer.isDecoderBuffer = function isDecoderBuffer(data) {\n  if (data instanceof DecoderBuffer) {\n    return true;\n  }\n\n  // Or accept compatible API\n  const isCompatible = typeof data === 'object' &&\n    Buffer.isBuffer(data.base) &&\n    data.constructor.name === 'DecoderBuffer' &&\n    typeof data.offset === 'number' &&\n    typeof data.length === 'number' &&\n    typeof data.save === 'function' &&\n    typeof data.restore === 'function' &&\n    typeof data.isEmpty === 'function' &&\n    typeof data.readUInt8 === 'function' &&\n    typeof data.skip === 'function' &&\n    typeof data.raw === 'function';\n\n  return isCompatible;\n};\n\nDecoderBuffer.prototype.save = function save() {\n  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };\n};\n\nDecoderBuffer.prototype.restore = function restore(save) {\n  // Return skipped data\n  const res = new DecoderBuffer(this.base);\n  res.offset = save.offset;\n  res.length = this.offset;\n\n  this.offset = save.offset;\n  Reporter.prototype.restore.call(this, save.reporter);\n\n  return res;\n};\n\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\n  return this.offset === this.length;\n};\n\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n  if (this.offset + 1 <= this.length)\n    return this.base.readUInt8(this.offset++, true);\n  else\n    return this.error(fail || 'DecoderBuffer overrun');\n};\n\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n  if (!(this.offset + bytes <= this.length))\n    return this.error(fail || 'DecoderBuffer overrun');\n\n  const res = new DecoderBuffer(this.base);\n\n  // Share reporter state\n  res._reporterState = this._reporterState;\n\n  res.offset = this.offset;\n  res.length = this.offset + bytes;\n  this.offset += bytes;\n  return res;\n};\n\nDecoderBuffer.prototype.raw = function raw(save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length);\n};\n\nfunction EncoderBuffer(value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0;\n    this.value = value.map(function(item) {\n      if (!EncoderBuffer.isEncoderBuffer(item))\n        item = new EncoderBuffer(item, reporter);\n      this.length += item.length;\n      return item;\n    }, this);\n  } else if (typeof value === 'number') {\n    if (!(0 <= value && value <= 0xff))\n      return reporter.error('non-byte EncoderBuffer value');\n    this.value = value;\n    this.length = 1;\n  } else if (typeof value === 'string') {\n    this.value = value;\n    this.length = Buffer.byteLength(value);\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value;\n    this.length = value.length;\n  } else {\n    return reporter.error('Unsupported type: ' + typeof value);\n  }\n}\nexports.EncoderBuffer = EncoderBuffer;\n\nEncoderBuffer.isEncoderBuffer = function isEncoderBuffer(data) {\n  if (data instanceof EncoderBuffer) {\n    return true;\n  }\n\n  // Or accept compatible API\n  const isCompatible = typeof data === 'object' &&\n    data.constructor.name === 'EncoderBuffer' &&\n    typeof data.length === 'number' &&\n    typeof data.join === 'function';\n\n  return isCompatible;\n};\n\nEncoderBuffer.prototype.join = function join(out, offset) {\n  if (!out)\n    out = Buffer.alloc(this.length);\n  if (!offset)\n    offset = 0;\n\n  if (this.length === 0)\n    return out;\n\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function(item) {\n      item.join(out, offset);\n      offset += item.length;\n    });\n  } else {\n    if (typeof this.value === 'number')\n      out[offset] = this.value;\n    else if (typeof this.value === 'string')\n      out.write(this.value, offset);\n    else if (Buffer.isBuffer(this.value))\n      this.value.copy(out, offset);\n    offset += this.length;\n  }\n\n  return out;\n};\n","'use strict';\n\nconst Reporter = require('../base/reporter').Reporter;\nconst EncoderBuffer = require('../base/buffer').EncoderBuffer;\nconst DecoderBuffer = require('../base/buffer').DecoderBuffer;\nconst assert = require('minimalistic-assert');\n\n// Supported tags\nconst tags = [\n  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',\n  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',\n  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',\n  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'\n];\n\n// Public methods list\nconst methods = [\n  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',\n  'any', 'contains'\n].concat(tags);\n\n// Overrided methods list\nconst overrided = [\n  '_peekTag', '_decodeTag', '_use',\n  '_decodeStr', '_decodeObjid', '_decodeTime',\n  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',\n\n  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',\n  '_encodeNull', '_encodeInt', '_encodeBool'\n];\n\nfunction Node(enc, parent, name) {\n  const state = {};\n  this._baseState = state;\n\n  state.name = name;\n  state.enc = enc;\n\n  state.parent = parent || null;\n  state.children = null;\n\n  // State\n  state.tag = null;\n  state.args = null;\n  state.reverseArgs = null;\n  state.choice = null;\n  state.optional = false;\n  state.any = false;\n  state.obj = false;\n  state.use = null;\n  state.useDecoder = null;\n  state.key = null;\n  state['default'] = null;\n  state.explicit = null;\n  state.implicit = null;\n  state.contains = null;\n\n  // Should create new instance on each method\n  if (!state.parent) {\n    state.children = [];\n    this._wrap();\n  }\n}\nmodule.exports = Node;\n\nconst stateProps = [\n  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',\n  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',\n  'implicit', 'contains'\n];\n\nNode.prototype.clone = function clone() {\n  const state = this._baseState;\n  const cstate = {};\n  stateProps.forEach(function(prop) {\n    cstate[prop] = state[prop];\n  });\n  const res = new this.constructor(cstate.parent);\n  res._baseState = cstate;\n  return res;\n};\n\nNode.prototype._wrap = function wrap() {\n  const state = this._baseState;\n  methods.forEach(function(method) {\n    this[method] = function _wrappedMethod() {\n      const clone = new this.constructor(this);\n      state.children.push(clone);\n      return clone[method].apply(clone, arguments);\n    };\n  }, this);\n};\n\nNode.prototype._init = function init(body) {\n  const state = this._baseState;\n\n  assert(state.parent === null);\n  body.call(this);\n\n  // Filter children\n  state.children = state.children.filter(function(child) {\n    return child._baseState.parent === this;\n  }, this);\n  assert.equal(state.children.length, 1, 'Root node can have only one child');\n};\n\nNode.prototype._useArgs = function useArgs(args) {\n  const state = this._baseState;\n\n  // Filter children and args\n  const children = args.filter(function(arg) {\n    return arg instanceof this.constructor;\n  }, this);\n  args = args.filter(function(arg) {\n    return !(arg instanceof this.constructor);\n  }, this);\n\n  if (children.length !== 0) {\n    assert(state.children === null);\n    state.children = children;\n\n    // Replace parent to maintain backward link\n    children.forEach(function(child) {\n      child._baseState.parent = this;\n    }, this);\n  }\n  if (args.length !== 0) {\n    assert(state.args === null);\n    state.args = args;\n    state.reverseArgs = args.map(function(arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object)\n        return arg;\n\n      const res = {};\n      Object.keys(arg).forEach(function(key) {\n        if (key == (key | 0))\n          key |= 0;\n        const value = arg[key];\n        res[value] = key;\n      });\n      return res;\n    });\n  }\n};\n\n//\n// Overrided methods\n//\n\noverrided.forEach(function(method) {\n  Node.prototype[method] = function _overrided() {\n    const state = this._baseState;\n    throw new Error(method + ' not implemented for encoding: ' + state.enc);\n  };\n});\n\n//\n// Public methods\n//\n\ntags.forEach(function(tag) {\n  Node.prototype[tag] = function _tagMethod() {\n    const state = this._baseState;\n    const args = Array.prototype.slice.call(arguments);\n\n    assert(state.tag === null);\n    state.tag = tag;\n\n    this._useArgs(args);\n\n    return this;\n  };\n});\n\nNode.prototype.use = function use(item) {\n  assert(item);\n  const state = this._baseState;\n\n  assert(state.use === null);\n  state.use = item;\n\n  return this;\n};\n\nNode.prototype.optional = function optional() {\n  const state = this._baseState;\n\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.def = function def(val) {\n  const state = this._baseState;\n\n  assert(state['default'] === null);\n  state['default'] = val;\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.explicit = function explicit(num) {\n  const state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.explicit = num;\n\n  return this;\n};\n\nNode.prototype.implicit = function implicit(num) {\n  const state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.implicit = num;\n\n  return this;\n};\n\nNode.prototype.obj = function obj() {\n  const state = this._baseState;\n  const args = Array.prototype.slice.call(arguments);\n\n  state.obj = true;\n\n  if (args.length !== 0)\n    this._useArgs(args);\n\n  return this;\n};\n\nNode.prototype.key = function key(newKey) {\n  const state = this._baseState;\n\n  assert(state.key === null);\n  state.key = newKey;\n\n  return this;\n};\n\nNode.prototype.any = function any() {\n  const state = this._baseState;\n\n  state.any = true;\n\n  return this;\n};\n\nNode.prototype.choice = function choice(obj) {\n  const state = this._baseState;\n\n  assert(state.choice === null);\n  state.choice = obj;\n  this._useArgs(Object.keys(obj).map(function(key) {\n    return obj[key];\n  }));\n\n  return this;\n};\n\nNode.prototype.contains = function contains(item) {\n  const state = this._baseState;\n\n  assert(state.use === null);\n  state.contains = item;\n\n  return this;\n};\n\n//\n// Decoding\n//\n\nNode.prototype._decode = function decode(input, options) {\n  const state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return input.wrapResult(state.children[0]._decode(input, options));\n\n  let result = state['default'];\n  let present = true;\n\n  let prevKey = null;\n  if (state.key !== null)\n    prevKey = input.enterKey(state.key);\n\n  // Check if tag is there\n  if (state.optional) {\n    let tag = null;\n    if (state.explicit !== null)\n      tag = state.explicit;\n    else if (state.implicit !== null)\n      tag = state.implicit;\n    else if (state.tag !== null)\n      tag = state.tag;\n\n    if (tag === null && !state.any) {\n      // Trial and Error\n      const save = input.save();\n      try {\n        if (state.choice === null)\n          this._decodeGeneric(state.tag, input, options);\n        else\n          this._decodeChoice(input, options);\n        present = true;\n      } catch (e) {\n        present = false;\n      }\n      input.restore(save);\n    } else {\n      present = this._peekTag(input, tag, state.any);\n\n      if (input.isError(present))\n        return present;\n    }\n  }\n\n  // Push object on stack\n  let prevObj;\n  if (state.obj && present)\n    prevObj = input.enterObject();\n\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      const explicit = this._decodeTag(input, state.explicit);\n      if (input.isError(explicit))\n        return explicit;\n      input = explicit;\n    }\n\n    const start = input.offset;\n\n    // Unwrap implicit and normal values\n    if (state.use === null && state.choice === null) {\n      let save;\n      if (state.any)\n        save = input.save();\n      const body = this._decodeTag(\n        input,\n        state.implicit !== null ? state.implicit : state.tag,\n        state.any\n      );\n      if (input.isError(body))\n        return body;\n\n      if (state.any)\n        result = input.raw(save);\n      else\n        input = body;\n    }\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), start, input.length, 'tagged');\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), input.offset, input.length, 'content');\n\n    // Select proper method for tag\n    if (state.any) {\n      // no-op\n    } else if (state.choice === null) {\n      result = this._decodeGeneric(state.tag, input, options);\n    } else {\n      result = this._decodeChoice(input, options);\n    }\n\n    if (input.isError(result))\n      return result;\n\n    // Decode children\n    if (!state.any && state.choice === null && state.children !== null) {\n      state.children.forEach(function decodeChildren(child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input, options);\n      });\n    }\n\n    // Decode contained/encoded by schema, only in bit or octet strings\n    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {\n      const data = new DecoderBuffer(result);\n      result = this._getUse(state.contains, input._reporterState.obj)\n        ._decode(data, options);\n    }\n  }\n\n  // Pop object\n  if (state.obj && present)\n    result = input.leaveObject(prevObj);\n\n  // Set key\n  if (state.key !== null && (result !== null || present === true))\n    input.leaveKey(prevKey, state.key, result);\n  else if (prevKey !== null)\n    input.exitKey(prevKey);\n\n  return result;\n};\n\nNode.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {\n  const state = this._baseState;\n\n  if (tag === 'seq' || tag === 'set')\n    return null;\n  if (tag === 'seqof' || tag === 'setof')\n    return this._decodeList(input, tag, state.args[0], options);\n  else if (/str$/.test(tag))\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'objid' && state.args)\n    return this._decodeObjid(input, state.args[0], state.args[1], options);\n  else if (tag === 'objid')\n    return this._decodeObjid(input, null, null, options);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._decodeTime(input, tag, options);\n  else if (tag === 'null_')\n    return this._decodeNull(input, options);\n  else if (tag === 'bool')\n    return this._decodeBool(input, options);\n  else if (tag === 'objDesc')\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'int' || tag === 'enum')\n    return this._decodeInt(input, state.args && state.args[0], options);\n\n  if (state.use !== null) {\n    return this._getUse(state.use, input._reporterState.obj)\n      ._decode(input, options);\n  } else {\n    return input.error('unknown tag: ' + tag);\n  }\n};\n\nNode.prototype._getUse = function _getUse(entity, obj) {\n\n  const state = this._baseState;\n  // Create altered use decoder if implicit is set\n  state.useDecoder = this._use(entity, obj);\n  assert(state.useDecoder._baseState.parent === null);\n  state.useDecoder = state.useDecoder._baseState.children[0];\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone();\n    state.useDecoder._baseState.implicit = state.implicit;\n  }\n  return state.useDecoder;\n};\n\nNode.prototype._decodeChoice = function decodeChoice(input, options) {\n  const state = this._baseState;\n  let result = null;\n  let match = false;\n\n  Object.keys(state.choice).some(function(key) {\n    const save = input.save();\n    const node = state.choice[key];\n    try {\n      const value = node._decode(input, options);\n      if (input.isError(value))\n        return false;\n\n      result = { type: key, value: value };\n      match = true;\n    } catch (e) {\n      input.restore(save);\n      return false;\n    }\n    return true;\n  }, this);\n\n  if (!match)\n    return input.error('Choice not matched');\n\n  return result;\n};\n\n//\n// Encoding\n//\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\n  return new EncoderBuffer(data, this.reporter);\n};\n\nNode.prototype._encode = function encode(data, reporter, parent) {\n  const state = this._baseState;\n  if (state['default'] !== null && state['default'] === data)\n    return;\n\n  const result = this._encodeValue(data, reporter, parent);\n  if (result === undefined)\n    return;\n\n  if (this._skipDefault(result, reporter, parent))\n    return;\n\n  return result;\n};\n\nNode.prototype._encodeValue = function encode(data, reporter, parent) {\n  const state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return state.children[0]._encode(data, reporter || new Reporter());\n\n  let result = null;\n\n  // Set reporter to share it with a child class\n  this.reporter = reporter;\n\n  // Check if data is there\n  if (state.optional && data === undefined) {\n    if (state['default'] !== null)\n      data = state['default'];\n    else\n      return;\n  }\n\n  // Encode children first\n  let content = null;\n  let primitive = false;\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data);\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter);\n  } else if (state.contains) {\n    content = this._getUse(state.contains, parent)._encode(data, reporter);\n    primitive = true;\n  } else if (state.children) {\n    content = state.children.map(function(child) {\n      if (child._baseState.tag === 'null_')\n        return child._encode(null, reporter, data);\n\n      if (child._baseState.key === null)\n        return reporter.error('Child should have a key');\n      const prevKey = reporter.enterKey(child._baseState.key);\n\n      if (typeof data !== 'object')\n        return reporter.error('Child expected, but input is not object');\n\n      const res = child._encode(data[child._baseState.key], reporter, data);\n      reporter.leaveKey(prevKey);\n\n      return res;\n    }, this).filter(function(child) {\n      return child;\n    });\n    content = this._createEncoderBuffer(content);\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      // TODO(indutny): this should be thrown on DSL level\n      if (!(state.args && state.args.length === 1))\n        return reporter.error('Too many args for : ' + state.tag);\n\n      if (!Array.isArray(data))\n        return reporter.error('seqof/setof, but data is not Array');\n\n      const child = this.clone();\n      child._baseState.implicit = null;\n      content = this._createEncoderBuffer(data.map(function(item) {\n        const state = this._baseState;\n\n        return this._getUse(state.args[0], data)._encode(item, reporter);\n      }, child));\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter);\n    } else {\n      content = this._encodePrimitive(state.tag, data);\n      primitive = true;\n    }\n  }\n\n  // Encode data itself\n  if (!state.any && state.choice === null) {\n    const tag = state.implicit !== null ? state.implicit : state.tag;\n    const cls = state.implicit === null ? 'universal' : 'context';\n\n    if (tag === null) {\n      if (state.use === null)\n        reporter.error('Tag could be omitted only for .use()');\n    } else {\n      if (state.use === null)\n        result = this._encodeComposite(tag, primitive, cls, content);\n    }\n  }\n\n  // Wrap in explicit\n  if (state.explicit !== null)\n    result = this._encodeComposite(state.explicit, false, 'context', result);\n\n  return result;\n};\n\nNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\n  const state = this._baseState;\n\n  const node = state.choice[data.type];\n  if (!node) {\n    assert(\n      false,\n      data.type + ' not found in ' +\n            JSON.stringify(Object.keys(state.choice)));\n  }\n  return node._encode(data.value, reporter);\n};\n\nNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\n  const state = this._baseState;\n\n  if (/str$/.test(tag))\n    return this._encodeStr(data, tag);\n  else if (tag === 'objid' && state.args)\n    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);\n  else if (tag === 'objid')\n    return this._encodeObjid(data, null, null);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._encodeTime(data, tag);\n  else if (tag === 'null_')\n    return this._encodeNull();\n  else if (tag === 'int' || tag === 'enum')\n    return this._encodeInt(data, state.args && state.reverseArgs[0]);\n  else if (tag === 'bool')\n    return this._encodeBool(data);\n  else if (tag === 'objDesc')\n    return this._encodeStr(data, tag);\n  else\n    throw new Error('Unsupported tag: ' + tag);\n};\n\nNode.prototype._isNumstr = function isNumstr(str) {\n  return /^[0-9 ]*$/.test(str);\n};\n\nNode.prototype._isPrintstr = function isPrintstr(str) {\n  return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(str);\n};\n","'use strict';\n\n// Helper\nfunction reverse(map) {\n  const res = {};\n\n  Object.keys(map).forEach(function(key) {\n    // Convert key to integer if it is stringified\n    if ((key | 0) == key)\n      key = key | 0;\n\n    const value = map[key];\n    res[value] = key;\n  });\n\n  return res;\n}\n\nexports.tagClass = {\n  0: 'universal',\n  1: 'application',\n  2: 'context',\n  3: 'private'\n};\nexports.tagClassByName = reverse(exports.tagClass);\n\nexports.tag = {\n  0x00: 'end',\n  0x01: 'bool',\n  0x02: 'int',\n  0x03: 'bitstr',\n  0x04: 'octstr',\n  0x05: 'null_',\n  0x06: 'objid',\n  0x07: 'objDesc',\n  0x08: 'external',\n  0x09: 'real',\n  0x0a: 'enum',\n  0x0b: 'embed',\n  0x0c: 'utf8str',\n  0x0d: 'relativeOid',\n  0x10: 'seq',\n  0x11: 'set',\n  0x12: 'numstr',\n  0x13: 'printstr',\n  0x14: 't61str',\n  0x15: 'videostr',\n  0x16: 'ia5str',\n  0x17: 'utctime',\n  0x18: 'gentime',\n  0x19: 'graphstr',\n  0x1a: 'iso646str',\n  0x1b: 'genstr',\n  0x1c: 'unistr',\n  0x1d: 'charstr',\n  0x1e: 'bmpstr'\n};\nexports.tagByName = reverse(exports.tag);\n","'use strict';\n\nconst inherits = require('inherits');\nconst Buffer = require('safer-buffer').Buffer;\nconst Node = require('../base/node');\n\n// Import DER constants\nconst der = require('../constants/der');\n\nfunction DEREncoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n}\nmodule.exports = DEREncoder;\n\nDEREncoder.prototype.encode = function encode(data, reporter) {\n  return this.tree._encode(data, reporter).join();\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  Node.call(this, 'der', parent);\n}\ninherits(DERNode, Node);\n\nDERNode.prototype._encodeComposite = function encodeComposite(tag,\n  primitive,\n  cls,\n  content) {\n  const encodedTag = encodeTag(tag, primitive, cls, this.reporter);\n\n  // Short form\n  if (content.length < 0x80) {\n    const header = Buffer.alloc(2);\n    header[0] = encodedTag;\n    header[1] = content.length;\n    return this._createEncoderBuffer([ header, content ]);\n  }\n\n  // Long form\n  // Count octets required to store length\n  let lenOctets = 1;\n  for (let i = content.length; i >= 0x100; i >>= 8)\n    lenOctets++;\n\n  const header = Buffer.alloc(1 + 1 + lenOctets);\n  header[0] = encodedTag;\n  header[1] = 0x80 | lenOctets;\n\n  for (let i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)\n    header[i] = j & 0xff;\n\n  return this._createEncoderBuffer([ header, content ]);\n};\n\nDERNode.prototype._encodeStr = function encodeStr(str, tag) {\n  if (tag === 'bitstr') {\n    return this._createEncoderBuffer([ str.unused | 0, str.data ]);\n  } else if (tag === 'bmpstr') {\n    const buf = Buffer.alloc(str.length * 2);\n    for (let i = 0; i < str.length; i++) {\n      buf.writeUInt16BE(str.charCodeAt(i), i * 2);\n    }\n    return this._createEncoderBuffer(buf);\n  } else if (tag === 'numstr') {\n    if (!this._isNumstr(str)) {\n      return this.reporter.error('Encoding of string type: numstr supports ' +\n                                 'only digits and space');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'printstr') {\n    if (!this._isPrintstr(str)) {\n      return this.reporter.error('Encoding of string type: printstr supports ' +\n                                 'only latin upper and lower case letters, ' +\n                                 'digits, space, apostrophe, left and rigth ' +\n                                 'parenthesis, plus sign, comma, hyphen, ' +\n                                 'dot, slash, colon, equal sign, ' +\n                                 'question mark');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (/str$/.test(tag)) {\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'objDesc') {\n    return this._createEncoderBuffer(str);\n  } else {\n    return this.reporter.error('Encoding of string type: ' + tag +\n                               ' unsupported');\n  }\n};\n\nDERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {\n  if (typeof id === 'string') {\n    if (!values)\n      return this.reporter.error('string objid given, but no values map found');\n    if (!values.hasOwnProperty(id))\n      return this.reporter.error('objid not found in values map');\n    id = values[id].split(/[\\s.]+/g);\n    for (let i = 0; i < id.length; i++)\n      id[i] |= 0;\n  } else if (Array.isArray(id)) {\n    id = id.slice();\n    for (let i = 0; i < id.length; i++)\n      id[i] |= 0;\n  }\n\n  if (!Array.isArray(id)) {\n    return this.reporter.error('objid() should be either array or string, ' +\n                               'got: ' + JSON.stringify(id));\n  }\n\n  if (!relative) {\n    if (id[1] >= 40)\n      return this.reporter.error('Second objid identifier OOB');\n    id.splice(0, 2, id[0] * 40 + id[1]);\n  }\n\n  // Count number of octets\n  let size = 0;\n  for (let i = 0; i < id.length; i++) {\n    let ident = id[i];\n    for (size++; ident >= 0x80; ident >>= 7)\n      size++;\n  }\n\n  const objid = Buffer.alloc(size);\n  let offset = objid.length - 1;\n  for (let i = id.length - 1; i >= 0; i--) {\n    let ident = id[i];\n    objid[offset--] = ident & 0x7f;\n    while ((ident >>= 7) > 0)\n      objid[offset--] = 0x80 | (ident & 0x7f);\n  }\n\n  return this._createEncoderBuffer(objid);\n};\n\nfunction two(num) {\n  if (num < 10)\n    return '0' + num;\n  else\n    return num;\n}\n\nDERNode.prototype._encodeTime = function encodeTime(time, tag) {\n  let str;\n  const date = new Date(time);\n\n  if (tag === 'gentime') {\n    str = [\n      two(date.getUTCFullYear()),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else if (tag === 'utctime') {\n    str = [\n      two(date.getUTCFullYear() % 100),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else {\n    this.reporter.error('Encoding ' + tag + ' time is not supported yet');\n  }\n\n  return this._encodeStr(str, 'octstr');\n};\n\nDERNode.prototype._encodeNull = function encodeNull() {\n  return this._createEncoderBuffer('');\n};\n\nDERNode.prototype._encodeInt = function encodeInt(num, values) {\n  if (typeof num === 'string') {\n    if (!values)\n      return this.reporter.error('String int or enum given, but no values map');\n    if (!values.hasOwnProperty(num)) {\n      return this.reporter.error('Values map doesn\\'t contain: ' +\n                                 JSON.stringify(num));\n    }\n    num = values[num];\n  }\n\n  // Bignum, assume big endian\n  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {\n    const numArray = num.toArray();\n    if (!num.sign && numArray[0] & 0x80) {\n      numArray.unshift(0);\n    }\n    num = Buffer.from(numArray);\n  }\n\n  if (Buffer.isBuffer(num)) {\n    let size = num.length;\n    if (num.length === 0)\n      size++;\n\n    const out = Buffer.alloc(size);\n    num.copy(out);\n    if (num.length === 0)\n      out[0] = 0;\n    return this._createEncoderBuffer(out);\n  }\n\n  if (num < 0x80)\n    return this._createEncoderBuffer(num);\n\n  if (num < 0x100)\n    return this._createEncoderBuffer([0, num]);\n\n  let size = 1;\n  for (let i = num; i >= 0x100; i >>= 8)\n    size++;\n\n  const out = new Array(size);\n  for (let i = out.length - 1; i >= 0; i--) {\n    out[i] = num & 0xff;\n    num >>= 8;\n  }\n  if(out[0] & 0x80) {\n    out.unshift(0);\n  }\n\n  return this._createEncoderBuffer(Buffer.from(out));\n};\n\nDERNode.prototype._encodeBool = function encodeBool(value) {\n  return this._createEncoderBuffer(value ? 0xff : 0);\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getEncoder('der').tree;\n};\n\nDERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {\n  const state = this._baseState;\n  let i;\n  if (state['default'] === null)\n    return false;\n\n  const data = dataBuffer.join();\n  if (state.defaultBuffer === undefined)\n    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();\n\n  if (data.length !== state.defaultBuffer.length)\n    return false;\n\n  for (i=0; i < data.length; i++)\n    if (data[i] !== state.defaultBuffer[i])\n      return false;\n\n  return true;\n};\n\n// Utility methods\n\nfunction encodeTag(tag, primitive, cls, reporter) {\n  let res;\n\n  if (tag === 'seqof')\n    tag = 'seq';\n  else if (tag === 'setof')\n    tag = 'set';\n\n  if (der.tagByName.hasOwnProperty(tag))\n    res = der.tagByName[tag];\n  else if (typeof tag === 'number' && (tag | 0) === tag)\n    res = tag;\n  else\n    return reporter.error('Unknown tag: ' + tag);\n\n  if (res >= 0x1f)\n    return reporter.error('Multi-octet tag encoding unsupported');\n\n  if (!primitive)\n    res |= 0x20;\n\n  res |= (der.tagClassByName[cls || 'universal'] << 6);\n\n  return res;\n}\n","'use strict';\n\nconst inherits = require('inherits');\n\nconst DEREncoder = require('./der');\n\nfunction PEMEncoder(entity) {\n  DEREncoder.call(this, entity);\n  this.enc = 'pem';\n}\ninherits(PEMEncoder, DEREncoder);\nmodule.exports = PEMEncoder;\n\nPEMEncoder.prototype.encode = function encode(data, options) {\n  const buf = DEREncoder.prototype.encode.call(this, data);\n\n  const p = buf.toString('base64');\n  const out = [ '-----BEGIN ' + options.label + '-----' ];\n  for (let i = 0; i < p.length; i += 64)\n    out.push(p.slice(i, i + 64));\n  out.push('-----END ' + options.label + '-----');\n  return out.join('\\n');\n};\n","'use strict';\n\nconst encoders = exports;\n\nencoders.der = require('./der');\nencoders.pem = require('./pem');\n","'use strict';\n\nconst inherits = require('inherits');\n\nconst bignum = require('bn.js');\nconst DecoderBuffer = require('../base/buffer').DecoderBuffer;\nconst Node = require('../base/node');\n\n// Import DER constants\nconst der = require('../constants/der');\n\nfunction DERDecoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n}\nmodule.exports = DERDecoder;\n\nDERDecoder.prototype.decode = function decode(data, options) {\n  if (!DecoderBuffer.isDecoderBuffer(data)) {\n    data = new DecoderBuffer(data, options);\n  }\n\n  return this.tree._decode(data, options);\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  Node.call(this, 'der', parent);\n}\ninherits(DERNode, Node);\n\nDERNode.prototype._peekTag = function peekTag(buffer, tag, any) {\n  if (buffer.isEmpty())\n    return false;\n\n  const state = buffer.save();\n  const decodedTag = derDecodeTag(buffer, 'Failed to peek tag: \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  buffer.restore(state);\n\n  return decodedTag.tag === tag || decodedTag.tagStr === tag ||\n    (decodedTag.tagStr + 'of') === tag || any;\n};\n\nDERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {\n  const decodedTag = derDecodeTag(buffer,\n    'Failed to decode tag of \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  let len = derDecodeLen(buffer,\n    decodedTag.primitive,\n    'Failed to get length of \"' + tag + '\"');\n\n  // Failure\n  if (buffer.isError(len))\n    return len;\n\n  if (!any &&\n      decodedTag.tag !== tag &&\n      decodedTag.tagStr !== tag &&\n      decodedTag.tagStr + 'of' !== tag) {\n    return buffer.error('Failed to match tag: \"' + tag + '\"');\n  }\n\n  if (decodedTag.primitive || len !== null)\n    return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n\n  // Indefinite length... find END tag\n  const state = buffer.save();\n  const res = this._skipUntilEnd(\n    buffer,\n    'Failed to skip indefinite length body: \"' + this.tag + '\"');\n  if (buffer.isError(res))\n    return res;\n\n  len = buffer.offset - state.offset;\n  buffer.restore(state);\n  return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n};\n\nDERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {\n  for (;;) {\n    const tag = derDecodeTag(buffer, fail);\n    if (buffer.isError(tag))\n      return tag;\n    const len = derDecodeLen(buffer, tag.primitive, fail);\n    if (buffer.isError(len))\n      return len;\n\n    let res;\n    if (tag.primitive || len !== null)\n      res = buffer.skip(len);\n    else\n      res = this._skipUntilEnd(buffer, fail);\n\n    // Failure\n    if (buffer.isError(res))\n      return res;\n\n    if (tag.tagStr === 'end')\n      break;\n  }\n};\n\nDERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,\n  options) {\n  const result = [];\n  while (!buffer.isEmpty()) {\n    const possibleEnd = this._peekTag(buffer, 'end');\n    if (buffer.isError(possibleEnd))\n      return possibleEnd;\n\n    const res = decoder.decode(buffer, 'der', options);\n    if (buffer.isError(res) && possibleEnd)\n      break;\n    result.push(res);\n  }\n  return result;\n};\n\nDERNode.prototype._decodeStr = function decodeStr(buffer, tag) {\n  if (tag === 'bitstr') {\n    const unused = buffer.readUInt8();\n    if (buffer.isError(unused))\n      return unused;\n    return { unused: unused, data: buffer.raw() };\n  } else if (tag === 'bmpstr') {\n    const raw = buffer.raw();\n    if (raw.length % 2 === 1)\n      return buffer.error('Decoding of string type: bmpstr length mismatch');\n\n    let str = '';\n    for (let i = 0; i < raw.length / 2; i++) {\n      str += String.fromCharCode(raw.readUInt16BE(i * 2));\n    }\n    return str;\n  } else if (tag === 'numstr') {\n    const numstr = buffer.raw().toString('ascii');\n    if (!this._isNumstr(numstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'numstr unsupported characters');\n    }\n    return numstr;\n  } else if (tag === 'octstr') {\n    return buffer.raw();\n  } else if (tag === 'objDesc') {\n    return buffer.raw();\n  } else if (tag === 'printstr') {\n    const printstr = buffer.raw().toString('ascii');\n    if (!this._isPrintstr(printstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'printstr unsupported characters');\n    }\n    return printstr;\n  } else if (/str$/.test(tag)) {\n    return buffer.raw().toString();\n  } else {\n    return buffer.error('Decoding of string type: ' + tag + ' unsupported');\n  }\n};\n\nDERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {\n  let result;\n  const identifiers = [];\n  let ident = 0;\n  let subident = 0;\n  while (!buffer.isEmpty()) {\n    subident = buffer.readUInt8();\n    ident <<= 7;\n    ident |= subident & 0x7f;\n    if ((subident & 0x80) === 0) {\n      identifiers.push(ident);\n      ident = 0;\n    }\n  }\n  if (subident & 0x80)\n    identifiers.push(ident);\n\n  const first = (identifiers[0] / 40) | 0;\n  const second = identifiers[0] % 40;\n\n  if (relative)\n    result = identifiers;\n  else\n    result = [first, second].concat(identifiers.slice(1));\n\n  if (values) {\n    let tmp = values[result.join(' ')];\n    if (tmp === undefined)\n      tmp = values[result.join('.')];\n    if (tmp !== undefined)\n      result = tmp;\n  }\n\n  return result;\n};\n\nDERNode.prototype._decodeTime = function decodeTime(buffer, tag) {\n  const str = buffer.raw().toString();\n\n  let year;\n  let mon;\n  let day;\n  let hour;\n  let min;\n  let sec;\n  if (tag === 'gentime') {\n    year = str.slice(0, 4) | 0;\n    mon = str.slice(4, 6) | 0;\n    day = str.slice(6, 8) | 0;\n    hour = str.slice(8, 10) | 0;\n    min = str.slice(10, 12) | 0;\n    sec = str.slice(12, 14) | 0;\n  } else if (tag === 'utctime') {\n    year = str.slice(0, 2) | 0;\n    mon = str.slice(2, 4) | 0;\n    day = str.slice(4, 6) | 0;\n    hour = str.slice(6, 8) | 0;\n    min = str.slice(8, 10) | 0;\n    sec = str.slice(10, 12) | 0;\n    if (year < 70)\n      year = 2000 + year;\n    else\n      year = 1900 + year;\n  } else {\n    return buffer.error('Decoding ' + tag + ' time is not supported yet');\n  }\n\n  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);\n};\n\nDERNode.prototype._decodeNull = function decodeNull() {\n  return null;\n};\n\nDERNode.prototype._decodeBool = function decodeBool(buffer) {\n  const res = buffer.readUInt8();\n  if (buffer.isError(res))\n    return res;\n  else\n    return res !== 0;\n};\n\nDERNode.prototype._decodeInt = function decodeInt(buffer, values) {\n  // Bigint, return as it is (assume big endian)\n  const raw = buffer.raw();\n  let res = new bignum(raw);\n\n  if (values)\n    res = values[res.toString(10)] || res;\n\n  return res;\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getDecoder('der').tree;\n};\n\n// Utility methods\n\nfunction derDecodeTag(buf, fail) {\n  let tag = buf.readUInt8(fail);\n  if (buf.isError(tag))\n    return tag;\n\n  const cls = der.tagClass[tag >> 6];\n  const primitive = (tag & 0x20) === 0;\n\n  // Multi-octet tag - load\n  if ((tag & 0x1f) === 0x1f) {\n    let oct = tag;\n    tag = 0;\n    while ((oct & 0x80) === 0x80) {\n      oct = buf.readUInt8(fail);\n      if (buf.isError(oct))\n        return oct;\n\n      tag <<= 7;\n      tag |= oct & 0x7f;\n    }\n  } else {\n    tag &= 0x1f;\n  }\n  const tagStr = der.tag[tag];\n\n  return {\n    cls: cls,\n    primitive: primitive,\n    tag: tag,\n    tagStr: tagStr\n  };\n}\n\nfunction derDecodeLen(buf, primitive, fail) {\n  let len = buf.readUInt8(fail);\n  if (buf.isError(len))\n    return len;\n\n  // Indefinite form\n  if (!primitive && len === 0x80)\n    return null;\n\n  // Definite form\n  if ((len & 0x80) === 0) {\n    // Short form\n    return len;\n  }\n\n  // Long form\n  const num = len & 0x7f;\n  if (num > 4)\n    return buf.error('length octect is too long');\n\n  len = 0;\n  for (let i = 0; i < num; i++) {\n    len <<= 8;\n    const j = buf.readUInt8(fail);\n    if (buf.isError(j))\n      return j;\n    len |= j;\n  }\n\n  return len;\n}\n","'use strict';\n\nconst inherits = require('inherits');\nconst Buffer = require('safer-buffer').Buffer;\n\nconst DERDecoder = require('./der');\n\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n}\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\n\nPEMDecoder.prototype.decode = function decode(data, options) {\n  const lines = data.toString().split(/[\\r\\n]+/g);\n\n  const label = options.label.toUpperCase();\n\n  const re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  let start = -1;\n  let end = -1;\n  for (let i = 0; i < lines.length; i++) {\n    const match = lines[i].match(re);\n    if (match === null)\n      continue;\n\n    if (match[2] !== label)\n      continue;\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN')\n        break;\n      start = i;\n    } else {\n      if (match[1] !== 'END')\n        break;\n      end = i;\n      break;\n    }\n  }\n  if (start === -1 || end === -1)\n    throw new Error('PEM section not found for: ' + label);\n\n  const base64 = lines.slice(start + 1, end).join('');\n  // Remove excessive symbols\n  base64.replace(/[^a-z0-9+/=]+/gi, '');\n\n  const input = Buffer.from(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};\n","'use strict';\n\nconst decoders = exports;\n\ndecoders.der = require('./der');\ndecoders.pem = require('./pem');\n","'use strict';\n\nconst encoders = require('./encoders');\nconst decoders = require('./decoders');\nconst inherits = require('inherits');\n\nconst api = exports;\n\napi.define = function define(name, body) {\n  return new Entity(name, body);\n};\n\nfunction Entity(name, body) {\n  this.name = name;\n  this.body = body;\n\n  this.decoders = {};\n  this.encoders = {};\n}\n\nEntity.prototype._createNamed = function createNamed(Base) {\n  const name = this.name;\n\n  function Generated(entity) {\n    this._initNamed(entity, name);\n  }\n  inherits(Generated, Base);\n  Generated.prototype._initNamed = function _initNamed(entity, name) {\n    Base.call(this, entity, name);\n  };\n\n  return new Generated(this);\n};\n\nEntity.prototype._getDecoder = function _getDecoder(enc) {\n  enc = enc || 'der';\n  // Lazily create decoder\n  if (!this.decoders.hasOwnProperty(enc))\n    this.decoders[enc] = this._createNamed(decoders[enc]);\n  return this.decoders[enc];\n};\n\nEntity.prototype.decode = function decode(data, enc, options) {\n  return this._getDecoder(enc).decode(data, options);\n};\n\nEntity.prototype._getEncoder = function _getEncoder(enc) {\n  enc = enc || 'der';\n  // Lazily create encoder\n  if (!this.encoders.hasOwnProperty(enc))\n    this.encoders[enc] = this._createNamed(encoders[enc]);\n  return this.encoders[enc];\n};\n\nEntity.prototype.encode = function encode(data, enc, /* internal */ reporter) {\n  return this._getEncoder(enc).encode(data, reporter);\n};\n","'use strict';\n\nconst base = exports;\n\nbase.Reporter = require('./reporter').Reporter;\nbase.DecoderBuffer = require('./buffer').DecoderBuffer;\nbase.EncoderBuffer = require('./buffer').EncoderBuffer;\nbase.Node = require('./node');\n","'use strict';\n\nconst constants = exports;\n\n// Helper\nconstants._reverse = function reverse(map) {\n  const res = {};\n\n  Object.keys(map).forEach(function(key) {\n    // Convert key to integer if it is stringified\n    if ((key | 0) == key)\n      key = key | 0;\n\n    const value = map[key];\n    res[value] = key;\n  });\n\n  return res;\n};\n\nconstants.der = require('./der');\n","'use strict';\n\nconst asn1 = exports;\n\nasn1.bignum = require('bn.js');\n\nasn1.define = require('./asn1/api').define;\nasn1.base = require('./asn1/base');\nasn1.constants = require('./asn1/constants');\nasn1.decoders = require('./asn1/decoders');\nasn1.encoders = require('./asn1/encoders');\n","// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js\n// thanks to @Rantanen\n\n'use strict'\n\nvar asn = require('asn1.js')\n\nvar Time = asn.define('Time', function () {\n  this.choice({\n    utcTime: this.utctime(),\n    generalTime: this.gentime()\n  })\n})\n\nvar AttributeTypeValue = asn.define('AttributeTypeValue', function () {\n  this.seq().obj(\n    this.key('type').objid(),\n    this.key('value').any()\n  )\n})\n\nvar AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {\n  this.seq().obj(\n    this.key('algorithm').objid(),\n    this.key('parameters').optional(),\n    this.key('curve').objid().optional()\n  )\n})\n\nvar SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPublicKey').bitstr()\n  )\n})\n\nvar RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {\n  this.setof(AttributeTypeValue)\n})\n\nvar RDNSequence = asn.define('RDNSequence', function () {\n  this.seqof(RelativeDistinguishedName)\n})\n\nvar Name = asn.define('Name', function () {\n  this.choice({\n    rdnSequence: this.use(RDNSequence)\n  })\n})\n\nvar Validity = asn.define('Validity', function () {\n  this.seq().obj(\n    this.key('notBefore').use(Time),\n    this.key('notAfter').use(Time)\n  )\n})\n\nvar Extension = asn.define('Extension', function () {\n  this.seq().obj(\n    this.key('extnID').objid(),\n    this.key('critical').bool().def(false),\n    this.key('extnValue').octstr()\n  )\n})\n\nvar TBSCertificate = asn.define('TBSCertificate', function () {\n  this.seq().obj(\n    this.key('version').explicit(0).int().optional(),\n    this.key('serialNumber').int(),\n    this.key('signature').use(AlgorithmIdentifier),\n    this.key('issuer').use(Name),\n    this.key('validity').use(Validity),\n    this.key('subject').use(Name),\n    this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),\n    this.key('issuerUniqueID').implicit(1).bitstr().optional(),\n    this.key('subjectUniqueID').implicit(2).bitstr().optional(),\n    this.key('extensions').explicit(3).seqof(Extension).optional()\n  )\n})\n\nvar X509Certificate = asn.define('X509Certificate', function () {\n  this.seq().obj(\n    this.key('tbsCertificate').use(TBSCertificate),\n    this.key('signatureAlgorithm').use(AlgorithmIdentifier),\n    this.key('signatureValue').bitstr()\n  )\n})\n\nmodule.exports = X509Certificate\n","// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js\n// Fedor, you are amazing.\n'use strict'\n\nvar asn1 = require('asn1.js')\n\nexports.certificate = require('./certificate')\n\nvar RSAPrivateKey = asn1.define('RSAPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('modulus').int(),\n    this.key('publicExponent').int(),\n    this.key('privateExponent').int(),\n    this.key('prime1').int(),\n    this.key('prime2').int(),\n    this.key('exponent1').int(),\n    this.key('exponent2').int(),\n    this.key('coefficient').int()\n  )\n})\nexports.RSAPrivateKey = RSAPrivateKey\n\nvar RSAPublicKey = asn1.define('RSAPublicKey', function () {\n  this.seq().obj(\n    this.key('modulus').int(),\n    this.key('publicExponent').int()\n  )\n})\nexports.RSAPublicKey = RSAPublicKey\n\nvar PublicKey = asn1.define('SubjectPublicKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPublicKey').bitstr()\n  )\n})\nexports.PublicKey = PublicKey\n\nvar AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {\n  this.seq().obj(\n    this.key('algorithm').objid(),\n    this.key('none').null_().optional(),\n    this.key('curve').objid().optional(),\n    this.key('params').seq().obj(\n      this.key('p').int(),\n      this.key('q').int(),\n      this.key('g').int()\n    ).optional()\n  )\n})\n\nvar PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPrivateKey').octstr()\n  )\n})\nexports.PrivateKey = PrivateKeyInfo\nvar EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').seq().obj(\n      this.key('id').objid(),\n      this.key('decrypt').seq().obj(\n        this.key('kde').seq().obj(\n          this.key('id').objid(),\n          this.key('kdeparams').seq().obj(\n            this.key('salt').octstr(),\n            this.key('iters').int()\n          )\n        ),\n        this.key('cipher').seq().obj(\n          this.key('algo').objid(),\n          this.key('iv').octstr()\n        )\n      )\n    ),\n    this.key('subjectPrivateKey').octstr()\n  )\n})\n\nexports.EncryptedPrivateKey = EncryptedPrivateKeyInfo\n\nvar DSAPrivateKey = asn1.define('DSAPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('p').int(),\n    this.key('q').int(),\n    this.key('g').int(),\n    this.key('pub_key').int(),\n    this.key('priv_key').int()\n  )\n})\nexports.DSAPrivateKey = DSAPrivateKey\n\nexports.DSAparam = asn1.define('DSAparam', function () {\n  this.int()\n})\n\nvar ECPrivateKey = asn1.define('ECPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('privateKey').octstr(),\n    this.key('parameters').optional().explicit(0).use(ECParameters),\n    this.key('publicKey').optional().explicit(1).bitstr()\n  )\n})\nexports.ECPrivateKey = ECPrivateKey\n\nvar ECParameters = asn1.define('ECParameters', function () {\n  this.choice({\n    namedCurve: this.objid()\n  })\n})\n\nexports.signature = asn1.define('signature', function () {\n  this.seq().obj(\n    this.key('r').int(),\n    this.key('s').int()\n  )\n})\n","module.exports={\"2.16.840.1.101.3.4.1.1\":\"aes-128-ecb\",\"2.16.840.1.101.3.4.1.2\":\"aes-128-cbc\",\"2.16.840.1.101.3.4.1.3\":\"aes-128-ofb\",\"2.16.840.1.101.3.4.1.4\":\"aes-128-cfb\",\"2.16.840.1.101.3.4.1.21\":\"aes-192-ecb\",\"2.16.840.1.101.3.4.1.22\":\"aes-192-cbc\",\"2.16.840.1.101.3.4.1.23\":\"aes-192-ofb\",\"2.16.840.1.101.3.4.1.24\":\"aes-192-cfb\",\"2.16.840.1.101.3.4.1.41\":\"aes-256-ecb\",\"2.16.840.1.101.3.4.1.42\":\"aes-256-cbc\",\"2.16.840.1.101.3.4.1.43\":\"aes-256-ofb\",\"2.16.840.1.101.3.4.1.44\":\"aes-256-cfb\"};","// adapted from https://github.com/apatil/pemstrip\nvar findProc = /Proc-Type: 4,ENCRYPTED[\\n\\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\\n\\r]+([0-9A-z\\n\\r+/=]+)[\\n\\r]+/m\nvar startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m\nvar fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\\n\\r+/=]+)-----END \\1-----$/m\nvar evp = require('evp_bytestokey')\nvar ciphers = require('browserify-aes')\nvar Buffer = require('safe-buffer').Buffer\nmodule.exports = function (okey, password) {\n  var key = okey.toString()\n  var match = key.match(findProc)\n  var decrypted\n  if (!match) {\n    var match2 = key.match(fullRegex)\n    decrypted = Buffer.from(match2[2].replace(/[\\r\\n]/g, ''), 'base64')\n  } else {\n    var suite = 'aes' + match[1]\n    var iv = Buffer.from(match[2], 'hex')\n    var cipherText = Buffer.from(match[3].replace(/[\\r\\n]/g, ''), 'base64')\n    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key\n    var out = []\n    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)\n    out.push(cipher.update(cipherText))\n    out.push(cipher.final())\n    decrypted = Buffer.concat(out)\n  }\n  var tag = key.match(startRegex)[1]\n  return {\n    tag: tag,\n    data: decrypted\n  }\n}\n","var asn1 = require('./asn1')\nvar aesid = require('./aesid.json')\nvar fixProc = require('./fixProc')\nvar ciphers = require('browserify-aes')\nvar compat = require('pbkdf2')\nvar Buffer = require('safe-buffer').Buffer\nmodule.exports = parseKeys\n\nfunction parseKeys (buffer) {\n  var password\n  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {\n    password = buffer.passphrase\n    buffer = buffer.key\n  }\n  if (typeof buffer === 'string') {\n    buffer = Buffer.from(buffer)\n  }\n\n  var stripped = fixProc(buffer, password)\n\n  var type = stripped.tag\n  var data = stripped.data\n  var subtype, ndata\n  switch (type) {\n    case 'CERTIFICATE':\n      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo\n      // falls through\n    case 'PUBLIC KEY':\n      if (!ndata) {\n        ndata = asn1.PublicKey.decode(data, 'der')\n      }\n      subtype = ndata.algorithm.algorithm.join('.')\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')\n        case '1.2.840.10045.2.1':\n          ndata.subjectPrivateKey = ndata.subjectPublicKey\n          return {\n            type: 'ec',\n            data: ndata\n          }\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')\n          return {\n            type: 'dsa',\n            data: ndata.algorithm.params\n          }\n        default: throw new Error('unknown key id ' + subtype)\n      }\n      // throw new Error('unknown key type ' + type)\n    case 'ENCRYPTED PRIVATE KEY':\n      data = asn1.EncryptedPrivateKey.decode(data, 'der')\n      data = decrypt(data, password)\n      // falls through\n    case 'PRIVATE KEY':\n      ndata = asn1.PrivateKey.decode(data, 'der')\n      subtype = ndata.algorithm.algorithm.join('.')\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')\n        case '1.2.840.10045.2.1':\n          return {\n            curve: ndata.algorithm.curve,\n            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey\n          }\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')\n          return {\n            type: 'dsa',\n            params: ndata.algorithm.params\n          }\n        default: throw new Error('unknown key id ' + subtype)\n      }\n      // throw new Error('unknown key type ' + type)\n    case 'RSA PUBLIC KEY':\n      return asn1.RSAPublicKey.decode(data, 'der')\n    case 'RSA PRIVATE KEY':\n      return asn1.RSAPrivateKey.decode(data, 'der')\n    case 'DSA PRIVATE KEY':\n      return {\n        type: 'dsa',\n        params: asn1.DSAPrivateKey.decode(data, 'der')\n      }\n    case 'EC PRIVATE KEY':\n      data = asn1.ECPrivateKey.decode(data, 'der')\n      return {\n        curve: data.parameters.value,\n        privateKey: data.privateKey\n      }\n    default: throw new Error('unknown key type ' + type)\n  }\n}\nparseKeys.signature = asn1.signature\nfunction decrypt (data, password) {\n  var salt = data.algorithm.decrypt.kde.kdeparams.salt\n  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)\n  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]\n  var iv = data.algorithm.decrypt.cipher.iv\n  var cipherText = data.subjectPrivateKey\n  var keylen = parseInt(algo.split('-')[1], 10) / 8\n  var key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1')\n  var cipher = ciphers.createDecipheriv(algo, key, iv)\n  var out = []\n  out.push(cipher.update(cipherText))\n  out.push(cipher.final())\n  return Buffer.concat(out)\n}\n","module.exports={\"1.3.132.0.10\":\"secp256k1\",\"1.3.132.0.33\":\"p224\",\"1.2.840.10045.3.1.1\":\"p192\",\"1.2.840.10045.3.1.7\":\"p256\",\"1.3.132.0.34\":\"p384\",\"1.3.132.0.35\":\"p521\"};","// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar Buffer = require('safe-buffer').Buffer\nvar createHmac = require('create-hmac')\nvar crt = require('browserify-rsa')\nvar EC = require('elliptic').ec\nvar BN = require('bn.js')\nvar parseKeys = require('parse-asn1')\nvar curves = require('./curves.json')\n\nfunction sign (hash, key, hashType, signType, tag) {\n  var priv = parseKeys(key)\n  if (priv.curve) {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')\n    return ecSign(hash, priv)\n  } else if (priv.type === 'dsa') {\n    if (signType !== 'dsa') throw new Error('wrong private key type')\n    return dsaSign(hash, priv, hashType)\n  } else {\n    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')\n  }\n  hash = Buffer.concat([tag, hash])\n  var len = priv.modulus.byteLength()\n  var pad = [0, 1]\n  while (hash.length + pad.length + 1 < len) pad.push(0xff)\n  pad.push(0x00)\n  var i = -1\n  while (++i < hash.length) pad.push(hash[i])\n\n  var out = crt(pad, priv)\n  return out\n}\n\nfunction ecSign (hash, priv) {\n  var curveId = curves[priv.curve.join('.')]\n  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))\n\n  var curve = new EC(curveId)\n  var key = curve.keyFromPrivate(priv.privateKey)\n  var out = key.sign(hash)\n\n  return Buffer.from(out.toDER())\n}\n\nfunction dsaSign (hash, priv, algo) {\n  var x = priv.params.priv_key\n  var p = priv.params.p\n  var q = priv.params.q\n  var g = priv.params.g\n  var r = new BN(0)\n  var k\n  var H = bits2int(hash, q).mod(q)\n  var s = false\n  var kv = getKey(x, q, hash, algo)\n  while (s === false) {\n    k = makeKey(q, kv, algo)\n    r = makeR(g, k, p, q)\n    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)\n    if (s.cmpn(0) === 0) {\n      s = false\n      r = new BN(0)\n    }\n  }\n  return toDER(r, s)\n}\n\nfunction toDER (r, s) {\n  r = r.toArray()\n  s = s.toArray()\n\n  // Pad values\n  if (r[0] & 0x80) r = [0].concat(r)\n  if (s[0] & 0x80) s = [0].concat(s)\n\n  var total = r.length + s.length + 4\n  var res = [0x30, total, 0x02, r.length]\n  res = res.concat(r, [0x02, s.length], s)\n  return Buffer.from(res)\n}\n\nfunction getKey (x, q, hash, algo) {\n  x = Buffer.from(x.toArray())\n  if (x.length < q.byteLength()) {\n    var zeros = Buffer.alloc(q.byteLength() - x.length)\n    x = Buffer.concat([zeros, x])\n  }\n  var hlen = hash.length\n  var hbits = bits2octets(hash, q)\n  var v = Buffer.alloc(hlen)\n  v.fill(1)\n  var k = Buffer.alloc(hlen)\n  k = createHmac(algo, k).update(v).update(Buffer.from([0])).update(x).update(hbits).digest()\n  v = createHmac(algo, k).update(v).digest()\n  k = createHmac(algo, k).update(v).update(Buffer.from([1])).update(x).update(hbits).digest()\n  v = createHmac(algo, k).update(v).digest()\n  return { k: k, v: v }\n}\n\nfunction bits2int (obits, q) {\n  var bits = new BN(obits)\n  var shift = (obits.length << 3) - q.bitLength()\n  if (shift > 0) bits.ishrn(shift)\n  return bits\n}\n\nfunction bits2octets (bits, q) {\n  bits = bits2int(bits, q)\n  bits = bits.mod(q)\n  var out = Buffer.from(bits.toArray())\n  if (out.length < q.byteLength()) {\n    var zeros = Buffer.alloc(q.byteLength() - out.length)\n    out = Buffer.concat([zeros, out])\n  }\n  return out\n}\n\nfunction makeKey (q, kv, algo) {\n  var t\n  var k\n\n  do {\n    t = Buffer.alloc(0)\n\n    while (t.length * 8 < q.bitLength()) {\n      kv.v = createHmac(algo, kv.k).update(kv.v).digest()\n      t = Buffer.concat([t, kv.v])\n    }\n\n    k = bits2int(t, q)\n    kv.k = createHmac(algo, kv.k).update(kv.v).update(Buffer.from([0])).digest()\n    kv.v = createHmac(algo, kv.k).update(kv.v).digest()\n  } while (k.cmp(q) !== -1)\n\n  return k\n}\n\nfunction makeR (g, k, p, q) {\n  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)\n}\n\nmodule.exports = sign\nmodule.exports.getKey = getKey\nmodule.exports.makeKey = makeKey\n","// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar Buffer = require('safe-buffer').Buffer\nvar BN = require('bn.js')\nvar EC = require('elliptic').ec\nvar parseKeys = require('parse-asn1')\nvar curves = require('./curves.json')\n\nfunction verify (sig, hash, key, signType, tag) {\n  var pub = parseKeys(key)\n  if (pub.type === 'ec') {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')\n    return ecVerify(sig, hash, pub)\n  } else if (pub.type === 'dsa') {\n    if (signType !== 'dsa') throw new Error('wrong public key type')\n    return dsaVerify(sig, hash, pub)\n  } else {\n    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')\n  }\n  hash = Buffer.concat([tag, hash])\n  var len = pub.modulus.byteLength()\n  var pad = [1]\n  var padNum = 0\n  while (hash.length + pad.length + 2 < len) {\n    pad.push(0xff)\n    padNum++\n  }\n  pad.push(0x00)\n  var i = -1\n  while (++i < hash.length) {\n    pad.push(hash[i])\n  }\n  pad = Buffer.from(pad)\n  var red = BN.mont(pub.modulus)\n  sig = new BN(sig).toRed(red)\n\n  sig = sig.redPow(new BN(pub.publicExponent))\n  sig = Buffer.from(sig.fromRed().toArray())\n  var out = padNum < 8 ? 1 : 0\n  len = Math.min(sig.length, pad.length)\n  if (sig.length !== pad.length) out = 1\n\n  i = -1\n  while (++i < len) out |= sig[i] ^ pad[i]\n  return out === 0\n}\n\nfunction ecVerify (sig, hash, pub) {\n  var curveId = curves[pub.data.algorithm.curve.join('.')]\n  if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'))\n\n  var curve = new EC(curveId)\n  var pubkey = pub.data.subjectPrivateKey.data\n\n  return curve.verify(hash, sig, pubkey)\n}\n\nfunction dsaVerify (sig, hash, pub) {\n  var p = pub.data.p\n  var q = pub.data.q\n  var g = pub.data.g\n  var y = pub.data.pub_key\n  var unpacked = parseKeys.signature.decode(sig, 'der')\n  var s = unpacked.s\n  var r = unpacked.r\n  checkValue(s, q)\n  checkValue(r, q)\n  var montp = BN.mont(p)\n  var w = s.invm(q)\n  var v = g.toRed(montp)\n    .redPow(new BN(hash).mul(w).mod(q))\n    .fromRed()\n    .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())\n    .mod(p)\n    .mod(q)\n  return v.cmp(r) === 0\n}\n\nfunction checkValue (b, q) {\n  if (b.cmpn(0) <= 0) throw new Error('invalid sig')\n  if (b.cmp(q) >= q) throw new Error('invalid sig')\n}\n\nmodule.exports = verify\n","var Buffer = require('safe-buffer').Buffer\nvar createHash = require('create-hash')\nvar stream = require('readable-stream')\nvar inherits = require('inherits')\nvar sign = require('./sign')\nvar verify = require('./verify')\n\nvar algorithms = require('./algorithms.json')\nObject.keys(algorithms).forEach(function (key) {\n  algorithms[key].id = Buffer.from(algorithms[key].id, 'hex')\n  algorithms[key.toLowerCase()] = algorithms[key]\n})\n\nfunction Sign (algorithm) {\n  stream.Writable.call(this)\n\n  var data = algorithms[algorithm]\n  if (!data) throw new Error('Unknown message digest')\n\n  this._hashType = data.hash\n  this._hash = createHash(data.hash)\n  this._tag = data.id\n  this._signType = data.sign\n}\ninherits(Sign, stream.Writable)\n\nSign.prototype._write = function _write (data, _, done) {\n  this._hash.update(data)\n  done()\n}\n\nSign.prototype.update = function update (data, enc) {\n  if (typeof data === 'string') data = Buffer.from(data, enc)\n\n  this._hash.update(data)\n  return this\n}\n\nSign.prototype.sign = function signMethod (key, enc) {\n  this.end()\n  var hash = this._hash.digest()\n  var sig = sign(hash, key, this._hashType, this._signType, this._tag)\n\n  return enc ? sig.toString(enc) : sig\n}\n\nfunction Verify (algorithm) {\n  stream.Writable.call(this)\n\n  var data = algorithms[algorithm]\n  if (!data) throw new Error('Unknown message digest')\n\n  this._hash = createHash(data.hash)\n  this._tag = data.id\n  this._signType = data.sign\n}\ninherits(Verify, stream.Writable)\n\nVerify.prototype._write = function _write (data, _, done) {\n  this._hash.update(data)\n  done()\n}\n\nVerify.prototype.update = function update (data, enc) {\n  if (typeof data === 'string') data = Buffer.from(data, enc)\n\n  this._hash.update(data)\n  return this\n}\n\nVerify.prototype.verify = function verifyMethod (key, sig, enc) {\n  if (typeof sig === 'string') sig = Buffer.from(sig, enc)\n\n  this.end()\n  var hash = this._hash.digest()\n  return verify(sig, hash, key, this._signType, this._tag)\n}\n\nfunction createSign (algorithm) {\n  return new Sign(algorithm)\n}\n\nfunction createVerify (algorithm) {\n  return new Verify(algorithm)\n}\n\nmodule.exports = {\n  Sign: createSign,\n  Verify: createVerify,\n  createSign: createSign,\n  createVerify: createVerify\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var elliptic = require('elliptic')\nvar BN = require('bn.js')\n\nmodule.exports = function createECDH (curve) {\n  return new ECDH(curve)\n}\n\nvar aliases = {\n  secp256k1: {\n    name: 'secp256k1',\n    byteLength: 32\n  },\n  secp224r1: {\n    name: 'p224',\n    byteLength: 28\n  },\n  prime256v1: {\n    name: 'p256',\n    byteLength: 32\n  },\n  prime192v1: {\n    name: 'p192',\n    byteLength: 24\n  },\n  ed25519: {\n    name: 'ed25519',\n    byteLength: 32\n  },\n  secp384r1: {\n    name: 'p384',\n    byteLength: 48\n  },\n  secp521r1: {\n    name: 'p521',\n    byteLength: 66\n  }\n}\n\naliases.p224 = aliases.secp224r1\naliases.p256 = aliases.secp256r1 = aliases.prime256v1\naliases.p192 = aliases.secp192r1 = aliases.prime192v1\naliases.p384 = aliases.secp384r1\naliases.p521 = aliases.secp521r1\n\nfunction ECDH (curve) {\n  this.curveType = aliases[curve]\n  if (!this.curveType) {\n    this.curveType = {\n      name: curve\n    }\n  }\n  this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap\n  this.keys = void 0\n}\n\nECDH.prototype.generateKeys = function (enc, format) {\n  this.keys = this.curve.genKeyPair()\n  return this.getPublicKey(enc, format)\n}\n\nECDH.prototype.computeSecret = function (other, inenc, enc) {\n  inenc = inenc || 'utf8'\n  if (!Buffer.isBuffer(other)) {\n    other = new Buffer(other, inenc)\n  }\n  var otherPub = this.curve.keyFromPublic(other).getPublic()\n  var out = otherPub.mul(this.keys.getPrivate()).getX()\n  return formatReturnValue(out, enc, this.curveType.byteLength)\n}\n\nECDH.prototype.getPublicKey = function (enc, format) {\n  var key = this.keys.getPublic(format === 'compressed', true)\n  if (format === 'hybrid') {\n    if (key[key.length - 1] % 2) {\n      key[0] = 7\n    } else {\n      key[0] = 6\n    }\n  }\n  return formatReturnValue(key, enc)\n}\n\nECDH.prototype.getPrivateKey = function (enc) {\n  return formatReturnValue(this.keys.getPrivate(), enc)\n}\n\nECDH.prototype.setPublicKey = function (pub, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc)\n  }\n  this.keys._importPublic(pub)\n  return this\n}\n\nECDH.prototype.setPrivateKey = function (priv, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc)\n  }\n\n  var _priv = new BN(priv)\n  _priv = _priv.toString(16)\n  this.keys = this.curve.genKeyPair()\n  this.keys._importPrivate(_priv)\n  return this\n}\n\nfunction formatReturnValue (bn, enc, len) {\n  if (!Array.isArray(bn)) {\n    bn = bn.toArray()\n  }\n  var buf = new Buffer(bn)\n  if (len && buf.length < len) {\n    var zeros = new Buffer(len - buf.length)\n    zeros.fill(0)\n    buf = Buffer.concat([zeros, buf])\n  }\n  if (!enc) {\n    return buf\n  } else {\n    return buf.toString(enc)\n  }\n}\n","var createHash = require('create-hash')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (seed, len) {\n  var t = Buffer.alloc(0)\n  var i = 0\n  var c\n  while (t.length < len) {\n    c = i2ops(i++)\n    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()])\n  }\n  return t.slice(0, len)\n}\n\nfunction i2ops (c) {\n  var out = Buffer.allocUnsafe(4)\n  out.writeUInt32BE(c, 0)\n  return out\n}\n","module.exports = function xor (a, b) {\n  var len = a.length\n  var i = -1\n  while (++i < len) {\n    a[i] ^= b[i]\n  }\n  return a\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var BN = require('bn.js')\nvar Buffer = require('safe-buffer').Buffer\n\nfunction withPublic (paddedMsg, key) {\n  return Buffer.from(paddedMsg\n    .toRed(BN.mont(key.modulus))\n    .redPow(new BN(key.publicExponent))\n    .fromRed()\n    .toArray())\n}\n\nmodule.exports = withPublic\n","var parseKeys = require('parse-asn1')\nvar randomBytes = require('randombytes')\nvar createHash = require('create-hash')\nvar mgf = require('./mgf')\nvar xor = require('./xor')\nvar BN = require('bn.js')\nvar withPublic = require('./withPublic')\nvar crt = require('browserify-rsa')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function publicEncrypt (publicKey, msg, reverse) {\n  var padding\n  if (publicKey.padding) {\n    padding = publicKey.padding\n  } else if (reverse) {\n    padding = 1\n  } else {\n    padding = 4\n  }\n  var key = parseKeys(publicKey)\n  var paddedMsg\n  if (padding === 4) {\n    paddedMsg = oaep(key, msg)\n  } else if (padding === 1) {\n    paddedMsg = pkcs1(key, msg, reverse)\n  } else if (padding === 3) {\n    paddedMsg = new BN(msg)\n    if (paddedMsg.cmp(key.modulus) >= 0) {\n      throw new Error('data too long for modulus')\n    }\n  } else {\n    throw new Error('unknown padding')\n  }\n  if (reverse) {\n    return crt(paddedMsg, key)\n  } else {\n    return withPublic(paddedMsg, key)\n  }\n}\n\nfunction oaep (key, msg) {\n  var k = key.modulus.byteLength()\n  var mLen = msg.length\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()\n  var hLen = iHash.length\n  var hLen2 = 2 * hLen\n  if (mLen > k - hLen2 - 2) {\n    throw new Error('message too long')\n  }\n  var ps = Buffer.alloc(k - mLen - hLen2 - 2)\n  var dblen = k - hLen - 1\n  var seed = randomBytes(hLen)\n  var maskedDb = xor(Buffer.concat([iHash, ps, Buffer.alloc(1, 1), msg], dblen), mgf(seed, dblen))\n  var maskedSeed = xor(seed, mgf(maskedDb, hLen))\n  return new BN(Buffer.concat([Buffer.alloc(1), maskedSeed, maskedDb], k))\n}\nfunction pkcs1 (key, msg, reverse) {\n  var mLen = msg.length\n  var k = key.modulus.byteLength()\n  if (mLen > k - 11) {\n    throw new Error('message too long')\n  }\n  var ps\n  if (reverse) {\n    ps = Buffer.alloc(k - mLen - 3, 0xff)\n  } else {\n    ps = nonZero(k - mLen - 3)\n  }\n  return new BN(Buffer.concat([Buffer.from([0, reverse ? 1 : 2]), ps, Buffer.alloc(1), msg], k))\n}\nfunction nonZero (len) {\n  var out = Buffer.allocUnsafe(len)\n  var i = 0\n  var cache = randomBytes(len * 2)\n  var cur = 0\n  var num\n  while (i < len) {\n    if (cur === cache.length) {\n      cache = randomBytes(len * 2)\n      cur = 0\n    }\n    num = cache[cur++]\n    if (num) {\n      out[i++] = num\n    }\n  }\n  return out\n}\n","var parseKeys = require('parse-asn1')\nvar mgf = require('./mgf')\nvar xor = require('./xor')\nvar BN = require('bn.js')\nvar crt = require('browserify-rsa')\nvar createHash = require('create-hash')\nvar withPublic = require('./withPublic')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function privateDecrypt (privateKey, enc, reverse) {\n  var padding\n  if (privateKey.padding) {\n    padding = privateKey.padding\n  } else if (reverse) {\n    padding = 1\n  } else {\n    padding = 4\n  }\n\n  var key = parseKeys(privateKey)\n  var k = key.modulus.byteLength()\n  if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {\n    throw new Error('decryption error')\n  }\n  var msg\n  if (reverse) {\n    msg = withPublic(new BN(enc), key)\n  } else {\n    msg = crt(enc, key)\n  }\n  var zBuffer = Buffer.alloc(k - msg.length)\n  msg = Buffer.concat([zBuffer, msg], k)\n  if (padding === 4) {\n    return oaep(key, msg)\n  } else if (padding === 1) {\n    return pkcs1(key, msg, reverse)\n  } else if (padding === 3) {\n    return msg\n  } else {\n    throw new Error('unknown padding')\n  }\n}\n\nfunction oaep (key, msg) {\n  var k = key.modulus.byteLength()\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()\n  var hLen = iHash.length\n  if (msg[0] !== 0) {\n    throw new Error('decryption error')\n  }\n  var maskedSeed = msg.slice(1, hLen + 1)\n  var maskedDb = msg.slice(hLen + 1)\n  var seed = xor(maskedSeed, mgf(maskedDb, hLen))\n  var db = xor(maskedDb, mgf(seed, k - hLen - 1))\n  if (compare(iHash, db.slice(0, hLen))) {\n    throw new Error('decryption error')\n  }\n  var i = hLen\n  while (db[i] === 0) {\n    i++\n  }\n  if (db[i++] !== 1) {\n    throw new Error('decryption error')\n  }\n  return db.slice(i)\n}\n\nfunction pkcs1 (key, msg, reverse) {\n  var p1 = msg.slice(0, 2)\n  var i = 2\n  var status = 0\n  while (msg[i++] !== 0) {\n    if (i >= msg.length) {\n      status++\n      break\n    }\n  }\n  var ps = msg.slice(2, i - 1)\n\n  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)) {\n    status++\n  }\n  if (ps.length < 8) {\n    status++\n  }\n  if (status) {\n    throw new Error('decryption error')\n  }\n  return msg.slice(i)\n}\nfunction compare (a, b) {\n  a = Buffer.from(a)\n  b = Buffer.from(b)\n  var dif = 0\n  var len = a.length\n  if (a.length !== b.length) {\n    dif++\n    len = Math.min(a.length, b.length)\n  }\n  var i = -1\n  while (++i < len) {\n    dif += (a[i] ^ b[i])\n  }\n  return dif\n}\n","exports.publicEncrypt = require('./publicEncrypt')\nexports.privateDecrypt = require('./privateDecrypt')\n\nexports.privateEncrypt = function privateEncrypt (key, buf) {\n  return exports.publicEncrypt(key, buf, true)\n}\n\nexports.publicDecrypt = function publicDecrypt (key, buf) {\n  return exports.privateDecrypt(key, buf, true)\n}\n","'use strict'\n\nfunction oldBrowser () {\n  throw new Error('secure random number generation not supported by this browser\\nuse chrome, FireFox or Internet Explorer 11')\n}\nvar safeBuffer = require('safe-buffer')\nvar randombytes = require('randombytes')\nvar Buffer = safeBuffer.Buffer\nvar kBufferMaxLength = safeBuffer.kMaxLength\nvar crypto = global.crypto || global.msCrypto\nvar kMaxUint32 = Math.pow(2, 32) - 1\nfunction assertOffset (offset, length) {\n  if (typeof offset !== 'number' || offset !== offset) { // eslint-disable-line no-self-compare\n    throw new TypeError('offset must be a number')\n  }\n\n  if (offset > kMaxUint32 || offset < 0) {\n    throw new TypeError('offset must be a uint32')\n  }\n\n  if (offset > kBufferMaxLength || offset > length) {\n    throw new RangeError('offset out of range')\n  }\n}\n\nfunction assertSize (size, offset, length) {\n  if (typeof size !== 'number' || size !== size) { // eslint-disable-line no-self-compare\n    throw new TypeError('size must be a number')\n  }\n\n  if (size > kMaxUint32 || size < 0) {\n    throw new TypeError('size must be a uint32')\n  }\n\n  if (size + offset > length || size > kBufferMaxLength) {\n    throw new RangeError('buffer too small')\n  }\n}\nif ((crypto && crypto.getRandomValues) || !process.browser) {\n  exports.randomFill = randomFill\n  exports.randomFillSync = randomFillSync\n} else {\n  exports.randomFill = oldBrowser\n  exports.randomFillSync = oldBrowser\n}\nfunction randomFill (buf, offset, size, cb) {\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  if (typeof offset === 'function') {\n    cb = offset\n    offset = 0\n    size = buf.length\n  } else if (typeof size === 'function') {\n    cb = size\n    size = buf.length - offset\n  } else if (typeof cb !== 'function') {\n    throw new TypeError('\"cb\" argument must be a function')\n  }\n  assertOffset(offset, buf.length)\n  assertSize(size, offset, buf.length)\n  return actualFill(buf, offset, size, cb)\n}\n\nfunction actualFill (buf, offset, size, cb) {\n  if (process.browser) {\n    var ourBuf = buf.buffer\n    var uint = new Uint8Array(ourBuf, offset, size)\n    crypto.getRandomValues(uint)\n    if (cb) {\n      process.nextTick(function () {\n        cb(null, buf)\n      })\n      return\n    }\n    return buf\n  }\n  if (cb) {\n    randombytes(size, function (err, bytes) {\n      if (err) {\n        return cb(err)\n      }\n      bytes.copy(buf, offset)\n      cb(null, buf)\n    })\n    return\n  }\n  var bytes = randombytes(size)\n  bytes.copy(buf, offset)\n  return buf\n}\nfunction randomFillSync (buf, offset, size) {\n  if (typeof offset === 'undefined') {\n    offset = 0\n  }\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  assertOffset(offset, buf.length)\n\n  if (size === undefined) size = buf.length - offset\n\n  assertSize(size, offset, buf.length)\n\n  return actualFill(buf, offset, size)\n}\n","'use strict'\n\nexports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes')\nexports.createHash = exports.Hash = require('create-hash')\nexports.createHmac = exports.Hmac = require('create-hmac')\n\nvar algos = require('browserify-sign/algos')\nvar algoKeys = Object.keys(algos)\nvar hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)\nexports.getHashes = function () {\n  return hashes\n}\n\nvar p = require('pbkdf2')\nexports.pbkdf2 = p.pbkdf2\nexports.pbkdf2Sync = p.pbkdf2Sync\n\nvar aes = require('browserify-cipher')\n\nexports.Cipher = aes.Cipher\nexports.createCipher = aes.createCipher\nexports.Cipheriv = aes.Cipheriv\nexports.createCipheriv = aes.createCipheriv\nexports.Decipher = aes.Decipher\nexports.createDecipher = aes.createDecipher\nexports.Decipheriv = aes.Decipheriv\nexports.createDecipheriv = aes.createDecipheriv\nexports.getCiphers = aes.getCiphers\nexports.listCiphers = aes.listCiphers\n\nvar dh = require('diffie-hellman')\n\nexports.DiffieHellmanGroup = dh.DiffieHellmanGroup\nexports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup\nexports.getDiffieHellman = dh.getDiffieHellman\nexports.createDiffieHellman = dh.createDiffieHellman\nexports.DiffieHellman = dh.DiffieHellman\n\nvar sign = require('browserify-sign')\n\nexports.createSign = sign.createSign\nexports.Sign = sign.Sign\nexports.createVerify = sign.createVerify\nexports.Verify = sign.Verify\n\nexports.createECDH = require('create-ecdh')\n\nvar publicEncrypt = require('public-encrypt')\n\nexports.publicEncrypt = publicEncrypt.publicEncrypt\nexports.privateEncrypt = publicEncrypt.privateEncrypt\nexports.publicDecrypt = publicEncrypt.publicDecrypt\nexports.privateDecrypt = publicEncrypt.privateDecrypt\n\n// the least I can do is make error messages for the rest of the node.js/crypto api.\n// ;[\n//   'createCredentials'\n// ].forEach(function (name) {\n//   exports[name] = function () {\n//     throw new Error([\n//       'sorry, ' + name + ' is not implemented yet',\n//       'we accept pull requests',\n//       'https://github.com/crypto-browserify/crypto-browserify'\n//     ].join('\\n'))\n//   }\n// })\n\nvar rf = require('randomfill')\n\nexports.randomFill = rf.randomFill\nexports.randomFillSync = rf.randomFillSync\n\nexports.createCredentials = function () {\n  throw new Error([\n    'sorry, createCredentials is not implemented yet',\n    'we accept pull requests',\n    'https://github.com/crypto-browserify/crypto-browserify'\n  ].join('\\n'))\n}\n\nexports.constants = {\n  'DH_CHECK_P_NOT_SAFE_PRIME': 2,\n  'DH_CHECK_P_NOT_PRIME': 1,\n  'DH_UNABLE_TO_CHECK_GENERATOR': 4,\n  'DH_NOT_SUITABLE_GENERATOR': 8,\n  'NPN_ENABLED': 1,\n  'ALPN_ENABLED': 1,\n  'RSA_PKCS1_PADDING': 1,\n  'RSA_SSLV23_PADDING': 2,\n  'RSA_NO_PADDING': 3,\n  'RSA_PKCS1_OAEP_PADDING': 4,\n  'RSA_X931_PADDING': 5,\n  'RSA_PKCS1_PSS_PADDING': 6,\n  'POINT_CONVERSION_COMPRESSED': 2,\n  'POINT_CONVERSION_UNCOMPRESSED': 4,\n  'POINT_CONVERSION_HYBRID': 6\n}\n","// Copyright 2010 The Emscripten Authors.  All rights reserved.\n// Emscripten is available under two separate licenses, the MIT license and the\n// University of Illinois/NCSA Open Source License.  Both these licenses can be\n// found in the LICENSE file.\n\n// The Module object: Our interface to the outside world. We import\n// and export values on it. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(Module) { ..generated code.. }\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to check if Module already exists (e.g. case 3 above).\n// Substitution will be replaced with actual code on later stage of the build,\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nexports.init =  function(Module) {\n\n// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n// {{PRE_JSES}}\n\n// Sometimes an existing Module object exists with properties\n// meant to overwrite the default module functionality. Here\n// we collect those properties and reapply _after_ we configure\n// the current environment's defaults to avoid having to be so\n// defensive during initialization.\nvar moduleOverrides = {};\nvar key;\nfor (key in Module) {\n  if (Module.hasOwnProperty(key)) {\n    moduleOverrides[key] = Module[key];\n  }\n}\n\nModule['arguments'] = [];\nModule['thisProgram'] = './this.program';\nModule['quit'] = function(status, toThrow) {\n  throw toThrow;\n};\nModule['preRun'] = [];\nModule['postRun'] = [];\n\n// Determine the runtime environment we are in. You can customize this by\n// setting the ENVIRONMENT setting at compile time (see settings.js).\n\nvar ENVIRONMENT_IS_WEB = false;\nvar ENVIRONMENT_IS_WORKER = false;\nvar ENVIRONMENT_IS_NODE = false;\nvar ENVIRONMENT_IS_SHELL = false;\nENVIRONMENT_IS_WEB = typeof window === 'object';\nENVIRONMENT_IS_WORKER = typeof importScripts === 'function';\nENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;\nENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\nif (Module['ENVIRONMENT']) {\n  throw new Error('Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -s ENVIRONMENT=web or -s ENVIRONMENT=node)');\n}\n\n\n// Three configurations we can be running in:\n// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)\n// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)\n// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)\n\n\n\n\n// `/` should be present at the end if `scriptDirectory` is not empty\nvar scriptDirectory = '';\nfunction locateFile(path) {\n  if (Module['locateFile']) {\n    return Module['locateFile'](path, scriptDirectory);\n  } else {\n    return scriptDirectory + path;\n  }\n}\n\nif (ENVIRONMENT_IS_NODE) {\n  scriptDirectory = __dirname + '/';\n\n  // Expose functionality in the same simple way that the shells work\n  // Note that we pollute the global namespace here, otherwise we break in node\n  var nodeFS;\n  var nodePath;\n\n  Module['read'] = function shell_read(filename, binary) {\n    var ret;\n      if (!nodeFS) nodeFS = require('fs');\n      if (!nodePath) nodePath = require('path');\n      filename = nodePath['normalize'](filename);\n      ret = nodeFS['readFileSync'](filename);\n    return binary ? ret : ret.toString();\n  };\n\n  Module['readBinary'] = function readBinary(filename) {\n    var ret = Module['read'](filename, true);\n    if (!ret.buffer) {\n      ret = new Uint8Array(ret);\n    }\n    assert(ret.buffer);\n    return ret;\n  };\n\n  if (process['argv'].length > 1) {\n    Module['thisProgram'] = process['argv'][1].replace(/\\\\/g, '/');\n  }\n\n  Module['arguments'] = process['argv'].slice(2);\n\n  if (typeof module !== 'undefined') {\n    module['exports'] = Module;\n  }\n\n  process['on']('uncaughtException', function(ex) {\n    // suppress ExitStatus exceptions from showing an error\n    if (!(ex instanceof ExitStatus)) {\n      throw ex;\n    }\n  });\n  // Currently node will swallow unhandled rejections, but this behavior is\n  // deprecated, and in the future it will exit with error status.\n  process['on']('unhandledRejection', abort);\n\n  Module['quit'] = function(status) {\n    process['exit'](status);\n  };\n\n  Module['inspect'] = function () { return '[Emscripten Module object]'; };\n} else\nif (ENVIRONMENT_IS_SHELL) {\n\n\n  if (typeof read != 'undefined') {\n    Module['read'] = function shell_read(f) {\n      return read(f);\n    };\n  }\n\n  Module['readBinary'] = function readBinary(f) {\n    var data;\n    if (typeof readbuffer === 'function') {\n      return new Uint8Array(readbuffer(f));\n    }\n    data = read(f, 'binary');\n    assert(typeof data === 'object');\n    return data;\n  };\n\n  if (typeof scriptArgs != 'undefined') {\n    Module['arguments'] = scriptArgs;\n  } else if (typeof arguments != 'undefined') {\n    Module['arguments'] = arguments;\n  }\n\n  if (typeof quit === 'function') {\n    Module['quit'] = function(status) {\n      quit(status);\n    }\n  }\n} else\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\n    scriptDirectory = self.location.href;\n  } else if (document.currentScript) { // web\n    scriptDirectory = document.currentScript.src;\n  }\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\n  // otherwise, slice off the final part of the url to find the script directory.\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\n  // and scriptDirectory will correctly be replaced with an empty string.\n  if (scriptDirectory.indexOf('blob:') !== 0) {\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf('/')+1);\n  } else {\n    scriptDirectory = '';\n  }\n\n\n  Module['read'] = function shell_read(url) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, false);\n      xhr.send(null);\n      return xhr.responseText;\n  };\n\n  if (ENVIRONMENT_IS_WORKER) {\n    Module['readBinary'] = function readBinary(url) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', url, false);\n        xhr.responseType = 'arraybuffer';\n        xhr.send(null);\n        return new Uint8Array(xhr.response);\n    };\n  }\n\n  Module['readAsync'] = function readAsync(url, onload, onerror) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.onload = function xhr_onload() {\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\n        onload(xhr.response);\n        return;\n      }\n      onerror();\n    };\n    xhr.onerror = onerror;\n    xhr.send(null);\n  };\n\n  Module['setWindowTitle'] = function(title) { document.title = title };\n} else\n{\n  throw new Error('environment detection error');\n}\n\n// Set up the out() and err() hooks, which are how we can print to stdout or\n// stderr, respectively.\n// If the user provided Module.print or printErr, use that. Otherwise,\n// console.log is checked first, as 'print' on the web will open a print dialogue\n// printErr is preferable to console.warn (works better in shells)\n// bind(console) is necessary to fix IE/Edge closed dev tools panel behavior.\nvar out = Module['print'] || (typeof console !== 'undefined' ? console.log.bind(console) : (typeof print !== 'undefined' ? print : null));\nvar err = Module['printErr'] || (typeof printErr !== 'undefined' ? printErr : ((typeof console !== 'undefined' && console.warn.bind(console)) || out));\n\n// Merge back in the overrides\nfor (key in moduleOverrides) {\n  if (moduleOverrides.hasOwnProperty(key)) {\n    Module[key] = moduleOverrides[key];\n  }\n}\n// Free the object hierarchy contained in the overrides, this lets the GC\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\nmoduleOverrides = undefined;\n\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\nassert(typeof Module['memoryInitializerPrefixURL'] === 'undefined', 'Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['pthreadMainPrefixURL'] === 'undefined', 'Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['cdInitializerPrefixURL'] === 'undefined', 'Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['filePackagePrefixURL'] === 'undefined', 'Module.filePackagePrefixURL option was removed, use Module.locateFile instead');\n\n\n\n// Copyright 2017 The Emscripten Authors.  All rights reserved.\n// Emscripten is available under two separate licenses, the MIT license and the\n// University of Illinois/NCSA Open Source License.  Both these licenses can be\n// found in the LICENSE file.\n\n// {{PREAMBLE_ADDITIONS}}\n\nvar STACK_ALIGN = 16;\n\n// stack management, and other functionality that is provided by the compiled code,\n// should not be used before it is ready\nstackSave = stackRestore = stackAlloc = function() {\n  abort('cannot use the stack before compiled code is ready to run, and has provided stack access');\n};\n\nfunction staticAlloc(size) {\n  abort('staticAlloc is no longer available at runtime; instead, perform static allocations at compile time (using makeStaticAlloc)');\n}\n\nfunction dynamicAlloc(size) {\n  assert(DYNAMICTOP_PTR);\n  var ret = HEAP32[DYNAMICTOP_PTR>>2];\n  var end = (ret + size + 15) & -16;\n  if (end <= _emscripten_get_heap_size()) {\n    HEAP32[DYNAMICTOP_PTR>>2] = end;\n  } else {\n    var success = _emscripten_resize_heap(end);\n    if (!success) return 0;\n  }\n  return ret;\n}\n\nfunction alignMemory(size, factor) {\n  if (!factor) factor = STACK_ALIGN; // stack alignment (16-byte) by default\n  return Math.ceil(size / factor) * factor;\n}\n\nfunction getNativeTypeSize(type) {\n  switch (type) {\n    case 'i1': case 'i8': return 1;\n    case 'i16': return 2;\n    case 'i32': return 4;\n    case 'i64': return 8;\n    case 'float': return 4;\n    case 'double': return 8;\n    default: {\n      if (type[type.length-1] === '*') {\n        return 4; // A pointer\n      } else if (type[0] === 'i') {\n        var bits = parseInt(type.substr(1));\n        assert(bits % 8 === 0, 'getNativeTypeSize invalid bits ' + bits + ', type ' + type);\n        return bits / 8;\n      } else {\n        return 0;\n      }\n    }\n  }\n}\n\nfunction warnOnce(text) {\n  if (!warnOnce.shown) warnOnce.shown = {};\n  if (!warnOnce.shown[text]) {\n    warnOnce.shown[text] = 1;\n    err(text);\n  }\n}\n\nvar asm2wasmImports = { // special asm2wasm imports\n    \"f64-rem\": function(x, y) {\n        return x % y;\n    },\n    \"debugger\": function() {\n        debugger;\n    }\n};\n\n\n\nvar jsCallStartIndex = 1;\nvar functionPointers = new Array(0);\n\n// Add a wasm function to the table.\n// Attempting to call this with JS function will cause of table.set() to fail\nfunction addWasmFunction(func) {\n  var table = wasmTable;\n  var ret = table.length;\n  table.grow(1);\n  table.set(ret, func);\n  return ret;\n}\n\n// 'sig' parameter is currently only used for LLVM backend under certain\n// circumstance: RESERVED_FUNCTION_POINTERS=1, EMULATED_FUNCTION_POINTERS=0.\nfunction addFunction(func, sig) {\n\n  var base = 0;\n  for (var i = base; i < base + 0; i++) {\n    if (!functionPointers[i]) {\n      functionPointers[i] = func;\n      return jsCallStartIndex + i;\n    }\n  }\n  throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';\n\n}\n\nfunction removeFunction(index) {\n  functionPointers[index-jsCallStartIndex] = null;\n}\n\nvar funcWrappers = {};\n\nfunction getFuncWrapper(func, sig) {\n  if (!func) return; // on null pointer, return undefined\n  assert(sig);\n  if (!funcWrappers[sig]) {\n    funcWrappers[sig] = {};\n  }\n  var sigCache = funcWrappers[sig];\n  if (!sigCache[func]) {\n    // optimize away arguments usage in common cases\n    if (sig.length === 1) {\n      sigCache[func] = function dynCall_wrapper() {\n        return dynCall(sig, func);\n      };\n    } else if (sig.length === 2) {\n      sigCache[func] = function dynCall_wrapper(arg) {\n        return dynCall(sig, func, [arg]);\n      };\n    } else {\n      // general case\n      sigCache[func] = function dynCall_wrapper() {\n        return dynCall(sig, func, Array.prototype.slice.call(arguments));\n      };\n    }\n  }\n  return sigCache[func];\n}\n\n\nfunction makeBigInt(low, high, unsigned) {\n  return unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0));\n}\n\nfunction dynCall(sig, ptr, args) {\n  if (args && args.length) {\n    assert(args.length == sig.length-1);\n    assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \\'' + sig + '\\'');\n    return Module['dynCall_' + sig].apply(null, [ptr].concat(args));\n  } else {\n    assert(sig.length == 1);\n    assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \\'' + sig + '\\'');\n    return Module['dynCall_' + sig].call(null, ptr);\n  }\n}\n\nvar tempRet0 = 0;\n\nvar setTempRet0 = function(value) {\n  tempRet0 = value;\n}\n\nvar getTempRet0 = function() {\n  return tempRet0;\n}\n\nfunction getCompilerSetting(name) {\n  throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for getCompilerSetting or emscripten_get_compiler_setting to work';\n}\n\nvar Runtime = {\n  // helpful errors\n  getTempRet0: function() { abort('getTempRet0() is now a top-level function, after removing the Runtime object. Remove \"Runtime.\"') },\n  staticAlloc: function() { abort('staticAlloc() is now a top-level function, after removing the Runtime object. Remove \"Runtime.\"') },\n  stackAlloc: function() { abort('stackAlloc() is now a top-level function, after removing the Runtime object. Remove \"Runtime.\"') },\n};\n\n// The address globals begin at. Very low in memory, for code size and optimization opportunities.\n// Above 0 is static memory, starting with globals.\n// Then the stack.\n// Then 'dynamic' memory for sbrk.\nvar GLOBAL_BASE = 1024;\n\n\n\n\n// === Preamble library stuff ===\n\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\n\nif (typeof WebAssembly !== 'object') {\n  abort('No WebAssembly support found. Build with -s WASM=0 to target JavaScript instead.');\n}\n\n\n/** @type {function(number, string, boolean=)} */\nfunction getValue(ptr, type, noSafe) {\n  type = type || 'i8';\n  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit\n    switch(type) {\n      case 'i1': return HEAP8[((ptr)>>0)];\n      case 'i8': return HEAP8[((ptr)>>0)];\n      case 'i16': return HEAP16[((ptr)>>1)];\n      case 'i32': return HEAP32[((ptr)>>2)];\n      case 'i64': return HEAP32[((ptr)>>2)];\n      case 'float': return HEAPF32[((ptr)>>2)];\n      case 'double': return HEAPF64[((ptr)>>3)];\n      default: abort('invalid type for getValue: ' + type);\n    }\n  return null;\n}\n\n\n\n\n// Wasm globals\n\nvar wasmMemory;\n\n// Potentially used for direct table calls.\nvar wasmTable;\n\n\n//========================================\n// Runtime essentials\n//========================================\n\n// whether we are quitting the application. no code should run after this.\n// set in exit() and abort()\nvar ABORT = false;\n\n// set by exit() and abort().  Passed to 'onExit' handler.\n// NOTE: This is also used as the process return code code in shell environments\n// but only when noExitRuntime is false.\nvar EXITSTATUS = 0;\n\n/** @type {function(*, string=)} */\nfunction assert(condition, text) {\n  if (!condition) {\n    abort('Assertion failed: ' + text);\n  }\n}\n\n// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)\nfunction getCFunc(ident) {\n  var func = Module['_' + ident]; // closure exported function\n  assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');\n  return func;\n}\n\n// C calling interface.\nfunction ccall(ident, returnType, argTypes, args, opts) {\n  // For fast lookup of conversion functions\n  var toC = {\n    'string': function(str) {\n      var ret = 0;\n      if (str !== null && str !== undefined && str !== 0) { // null string\n        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\\0'\n        var len = (str.length << 2) + 1;\n        ret = stackAlloc(len);\n        stringToUTF8(str, ret, len);\n      }\n      return ret;\n    },\n    'array': function(arr) {\n      var ret = stackAlloc(arr.length);\n      writeArrayToMemory(arr, ret);\n      return ret;\n    }\n  };\n\n  function convertReturnValue(ret) {\n    if (returnType === 'string') return UTF8ToString(ret);\n    if (returnType === 'boolean') return Boolean(ret);\n    return ret;\n  }\n\n  var func = getCFunc(ident);\n  var cArgs = [];\n  var stack = 0;\n  assert(returnType !== 'array', 'Return type should not be \"array\".');\n  if (args) {\n    for (var i = 0; i < args.length; i++) {\n      var converter = toC[argTypes[i]];\n      if (converter) {\n        if (stack === 0) stack = stackSave();\n        cArgs[i] = converter(args[i]);\n      } else {\n        cArgs[i] = args[i];\n      }\n    }\n  }\n  var ret = func.apply(null, cArgs);\n  ret = convertReturnValue(ret);\n  if (stack !== 0) stackRestore(stack);\n  return ret;\n}\n\nfunction cwrap(ident, returnType, argTypes, opts) {\n  return function() {\n    return ccall(ident, returnType, argTypes, arguments, opts);\n  }\n}\n\n/** @type {function(number, number, string, boolean=)} */\nfunction setValue(ptr, value, type, noSafe) {\n  type = type || 'i8';\n  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit\n    switch(type) {\n      case 'i1': HEAP8[((ptr)>>0)]=value; break;\n      case 'i8': HEAP8[((ptr)>>0)]=value; break;\n      case 'i16': HEAP16[((ptr)>>1)]=value; break;\n      case 'i32': HEAP32[((ptr)>>2)]=value; break;\n      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;\n      case 'float': HEAPF32[((ptr)>>2)]=value; break;\n      case 'double': HEAPF64[((ptr)>>3)]=value; break;\n      default: abort('invalid type for setValue: ' + type);\n    }\n}\n\nvar ALLOC_NORMAL = 0; // Tries to use _malloc()\nvar ALLOC_STACK = 1; // Lives for the duration of the current function call\nvar ALLOC_DYNAMIC = 2; // Cannot be freed except through sbrk\nvar ALLOC_NONE = 3; // Do not allocate\n\n// allocate(): This is for internal use. You can use it yourself as well, but the interface\n//             is a little tricky (see docs right below). The reason is that it is optimized\n//             for multiple syntaxes to save space in generated code. So you should\n//             normally not use allocate(), and instead allocate memory using _malloc(),\n//             initialize it with setValue(), and so forth.\n// @slab: An array of data, or a number. If a number, then the size of the block to allocate,\n//        in *bytes* (note that this is sometimes confusing: the next parameter does not\n//        affect this!)\n// @types: Either an array of types, one for each byte (or 0 if no type at that position),\n//         or a single type which is used for the entire block. This only matters if there\n//         is initial data - if @slab is a number, then this does not matter at all and is\n//         ignored.\n// @allocator: How to allocate memory, see ALLOC_*\n/** @type {function((TypedArray|Array<number>|number), string, number, number=)} */\nfunction allocate(slab, types, allocator, ptr) {\n  var zeroinit, size;\n  if (typeof slab === 'number') {\n    zeroinit = true;\n    size = slab;\n  } else {\n    zeroinit = false;\n    size = slab.length;\n  }\n\n  var singleType = typeof types === 'string' ? types : null;\n\n  var ret;\n  if (allocator == ALLOC_NONE) {\n    ret = ptr;\n  } else {\n    ret = [_malloc,\n    stackAlloc,\n    dynamicAlloc][allocator](Math.max(size, singleType ? 1 : types.length));\n  }\n\n  if (zeroinit) {\n    var stop;\n    ptr = ret;\n    assert((ret & 3) == 0);\n    stop = ret + (size & ~3);\n    for (; ptr < stop; ptr += 4) {\n      HEAP32[((ptr)>>2)]=0;\n    }\n    stop = ret + size;\n    while (ptr < stop) {\n      HEAP8[((ptr++)>>0)]=0;\n    }\n    return ret;\n  }\n\n  if (singleType === 'i8') {\n    if (slab.subarray || slab.slice) {\n      HEAPU8.set(/** @type {!Uint8Array} */ (slab), ret);\n    } else {\n      HEAPU8.set(new Uint8Array(slab), ret);\n    }\n    return ret;\n  }\n\n  var i = 0, type, typeSize, previousType;\n  while (i < size) {\n    var curr = slab[i];\n\n    type = singleType || types[i];\n    if (type === 0) {\n      i++;\n      continue;\n    }\n    assert(type, 'Must know what type to store in allocate!');\n\n    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later\n\n    setValue(ret+i, curr, type);\n\n    // no need to look up size unless type changes, so cache it\n    if (previousType !== type) {\n      typeSize = getNativeTypeSize(type);\n      previousType = type;\n    }\n    i += typeSize;\n  }\n\n  return ret;\n}\n\n// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready\nfunction getMemory(size) {\n  if (!runtimeInitialized) return dynamicAlloc(size);\n  return _malloc(size);\n}\n\n\n\n\n/** @type {function(number, number=)} */\nfunction Pointer_stringify(ptr, length) {\n  abort(\"this function has been removed - you should use UTF8ToString(ptr, maxBytesToRead) instead!\");\n}\n\n// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns\n// a copy of that string as a Javascript String object.\n\nfunction AsciiToString(ptr) {\n  var str = '';\n  while (1) {\n    var ch = HEAP8[((ptr++)>>0)];\n    if (!ch) return str;\n    str += String.fromCharCode(ch);\n  }\n}\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.\n\nfunction stringToAscii(str, outPtr) {\n  return writeAsciiToMemory(str, outPtr, false);\n}\n\n\n// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns\n// a copy of that string as a Javascript String object.\n\nvar UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;\n\n/**\n * @param {number} idx\n * @param {number=} maxBytesToRead\n * @return {string}\n */\nfunction UTF8ArrayToString(u8Array, idx, maxBytesToRead) {\n  var endIdx = idx + maxBytesToRead;\n  var endPtr = idx;\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.\n  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.\n  // (As a tiny code save trick, compare endPtr against endIdx using a negation, so that undefined means Infinity)\n  while (u8Array[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n\n  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {\n    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));\n  } else {\n    var str = '';\n    // If building with TextDecoder, we have already computed the string length above, so test loop end condition against that\n    while (idx < endPtr) {\n      // For UTF8 byte structure, see:\n      // http://en.wikipedia.org/wiki/UTF-8#Description\n      // https://www.ietf.org/rfc/rfc2279.txt\n      // https://tools.ietf.org/html/rfc3629\n      var u0 = u8Array[idx++];\n      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\n      var u1 = u8Array[idx++] & 63;\n      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\n      var u2 = u8Array[idx++] & 63;\n      if ((u0 & 0xF0) == 0xE0) {\n        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n      } else {\n        if ((u0 & 0xF8) != 0xF0) warnOnce('Invalid UTF-8 leading byte 0x' + u0.toString(16) + ' encountered when deserializing a UTF-8 string on the asm.js/wasm heap to a JS string!');\n        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (u8Array[idx++] & 63);\n      }\n\n      if (u0 < 0x10000) {\n        str += String.fromCharCode(u0);\n      } else {\n        var ch = u0 - 0x10000;\n        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n      }\n    }\n  }\n  return str;\n}\n\n// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns a\n// copy of that string as a Javascript String object.\n// maxBytesToRead: an optional length that specifies the maximum number of bytes to read. You can omit\n//                 this parameter to scan the string until the first \\0 byte. If maxBytesToRead is\n//                 passed, and the string at [ptr, ptr+maxBytesToReadr[ contains a null byte in the\n//                 middle, then the string will cut short at that byte index (i.e. maxBytesToRead will\n//                 not produce a string of exact length [ptr, ptr+maxBytesToRead[)\n//                 N.B. mixing frequent uses of UTF8ToString() with and without maxBytesToRead may\n//                 throw JS JIT optimizations off, so it is worth to consider consistently using one\n//                 style or the other.\n/**\n * @param {number} ptr\n * @param {number=} maxBytesToRead\n * @return {string}\n */\nfunction UTF8ToString(ptr, maxBytesToRead) {\n  return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n}\n\n// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',\n// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.\n// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.\n//   outIdx: The starting offset in the array to begin the copying.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array.\n//                    This count should include the null terminator,\n//                    i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {\n  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.\n    return 0;\n\n  var startIdx = outIdx;\n  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629\n    var u = str.charCodeAt(i); // possibly a lead surrogate\n    if (u >= 0xD800 && u <= 0xDFFF) {\n      var u1 = str.charCodeAt(++i);\n      u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\n    }\n    if (u <= 0x7F) {\n      if (outIdx >= endIdx) break;\n      outU8Array[outIdx++] = u;\n    } else if (u <= 0x7FF) {\n      if (outIdx + 1 >= endIdx) break;\n      outU8Array[outIdx++] = 0xC0 | (u >> 6);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    } else if (u <= 0xFFFF) {\n      if (outIdx + 2 >= endIdx) break;\n      outU8Array[outIdx++] = 0xE0 | (u >> 12);\n      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    } else {\n      if (outIdx + 3 >= endIdx) break;\n      if (u >= 0x200000) warnOnce('Invalid Unicode code point 0x' + u.toString(16) + ' encountered when serializing a JS string to an UTF-8 string on the asm.js/wasm heap! (Valid unicode code points should be in range 0-0x1FFFFF).');\n      outU8Array[outIdx++] = 0xF0 | (u >> 18);\n      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);\n      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    }\n  }\n  // Null-terminate the pointer to the buffer.\n  outU8Array[outIdx] = 0;\n  return outIdx - startIdx;\n}\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.\n// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\n  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);\n}\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.\nfunction lengthBytesUTF8(str) {\n  var len = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var u = str.charCodeAt(i); // possibly a lead surrogate\n    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);\n    if (u <= 0x7F) ++len;\n    else if (u <= 0x7FF) len += 2;\n    else if (u <= 0xFFFF) len += 3;\n    else len += 4;\n  }\n  return len;\n}\n\n\n// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns\n// a copy of that string as a Javascript String object.\n\nvar UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;\nfunction UTF16ToString(ptr) {\n  assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');\n  var endPtr = ptr;\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.\n  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.\n  var idx = endPtr >> 1;\n  while (HEAP16[idx]) ++idx;\n  endPtr = idx << 1;\n\n  if (endPtr - ptr > 32 && UTF16Decoder) {\n    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n  } else {\n    var i = 0;\n\n    var str = '';\n    while (1) {\n      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];\n      if (codeUnit == 0) return str;\n      ++i;\n      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.\n      str += String.fromCharCode(codeUnit);\n    }\n  }\n}\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.\n// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   outPtr: Byte address in Emscripten HEAP where to write the string to.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\n//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF16(str, outPtr, maxBytesToWrite) {\n  assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');\n  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n  if (maxBytesToWrite === undefined) {\n    maxBytesToWrite = 0x7FFFFFFF;\n  }\n  if (maxBytesToWrite < 2) return 0;\n  maxBytesToWrite -= 2; // Null terminator.\n  var startPtr = outPtr;\n  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;\n  for (var i = 0; i < numCharsToWrite; ++i) {\n    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.\n    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n    HEAP16[((outPtr)>>1)]=codeUnit;\n    outPtr += 2;\n  }\n  // Null-terminate the pointer to the HEAP.\n  HEAP16[((outPtr)>>1)]=0;\n  return outPtr - startPtr;\n}\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.\n\nfunction lengthBytesUTF16(str) {\n  return str.length*2;\n}\n\nfunction UTF32ToString(ptr) {\n  assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');\n  var i = 0;\n\n  var str = '';\n  while (1) {\n    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];\n    if (utf32 == 0)\n      return str;\n    ++i;\n    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    if (utf32 >= 0x10000) {\n      var ch = utf32 - 0x10000;\n      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n    } else {\n      str += String.fromCharCode(utf32);\n    }\n  }\n}\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.\n// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   outPtr: Byte address in Emscripten HEAP where to write the string to.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\n//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF32(str, outPtr, maxBytesToWrite) {\n  assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');\n  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n  if (maxBytesToWrite === undefined) {\n    maxBytesToWrite = 0x7FFFFFFF;\n  }\n  if (maxBytesToWrite < 4) return 0;\n  var startPtr = outPtr;\n  var endPtr = startPtr + maxBytesToWrite - 4;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {\n      var trailSurrogate = str.charCodeAt(++i);\n      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);\n    }\n    HEAP32[((outPtr)>>2)]=codeUnit;\n    outPtr += 4;\n    if (outPtr + 4 > endPtr) break;\n  }\n  // Null-terminate the pointer to the HEAP.\n  HEAP32[((outPtr)>>2)]=0;\n  return outPtr - startPtr;\n}\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.\n\nfunction lengthBytesUTF32(str) {\n  var len = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var codeUnit = str.charCodeAt(i);\n    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.\n    len += 4;\n  }\n\n  return len;\n}\n\n// Allocate heap space for a JS string, and write it there.\n// It is the responsibility of the caller to free() that memory.\nfunction allocateUTF8(str) {\n  var size = lengthBytesUTF8(str) + 1;\n  var ret = _malloc(size);\n  if (ret) stringToUTF8Array(str, HEAP8, ret, size);\n  return ret;\n}\n\n// Allocate stack space for a JS string, and write it there.\nfunction allocateUTF8OnStack(str) {\n  var size = lengthBytesUTF8(str) + 1;\n  var ret = stackAlloc(size);\n  stringToUTF8Array(str, HEAP8, ret, size);\n  return ret;\n}\n\n// Deprecated: This function should not be called because it is unsafe and does not provide\n// a maximum length limit of how many bytes it is allowed to write. Prefer calling the\n// function stringToUTF8Array() instead, which takes in a maximum length that can be used\n// to be secure from out of bounds writes.\n/** @deprecated */\nfunction writeStringToMemory(string, buffer, dontAddNull) {\n  warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');\n\n  var /** @type {number} */ lastChar, /** @type {number} */ end;\n  if (dontAddNull) {\n    // stringToUTF8Array always appends null. If we don't want to do that, remember the\n    // character that existed at the location where the null will be placed, and restore\n    // that after the write (below).\n    end = buffer + lengthBytesUTF8(string);\n    lastChar = HEAP8[end];\n  }\n  stringToUTF8(string, buffer, Infinity);\n  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.\n}\n\nfunction writeArrayToMemory(array, buffer) {\n  assert(array.length >= 0, 'writeArrayToMemory array must have a length (should be an array or typed array)')\n  HEAP8.set(array, buffer);\n}\n\nfunction writeAsciiToMemory(str, buffer, dontAddNull) {\n  for (var i = 0; i < str.length; ++i) {\n    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);\n    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);\n  }\n  // Null-terminate the pointer to the HEAP.\n  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;\n}\n\n\n\n\n\nfunction demangle(func) {\n  warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');\n  return func;\n}\n\nfunction demangleAll(text) {\n  var regex =\n    /__Z[\\w\\d_]+/g;\n  return text.replace(regex,\n    function(x) {\n      var y = demangle(x);\n      return x === y ? x : (y + ' [' + x + ']');\n    });\n}\n\nfunction jsStackTrace() {\n  var err = new Error();\n  if (!err.stack) {\n    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,\n    // so try that as a special-case.\n    try {\n      throw new Error(0);\n    } catch(e) {\n      err = e;\n    }\n    if (!err.stack) {\n      return '(no stack trace available)';\n    }\n  }\n  return err.stack.toString();\n}\n\nfunction stackTrace() {\n  var js = jsStackTrace();\n  if (Module['extraStackTrace']) js += '\\n' + Module['extraStackTrace']();\n  return demangleAll(js);\n}\n\n\n\n// Memory management\n\nvar PAGE_SIZE = 16384;\nvar WASM_PAGE_SIZE = 65536;\nvar ASMJS_PAGE_SIZE = 16777216;\n\nfunction alignUp(x, multiple) {\n  if (x % multiple > 0) {\n    x += multiple - (x % multiple);\n  }\n  return x;\n}\n\nvar HEAP,\n/** @type {ArrayBuffer} */\n  buffer,\n/** @type {Int8Array} */\n  HEAP8,\n/** @type {Uint8Array} */\n  HEAPU8,\n/** @type {Int16Array} */\n  HEAP16,\n/** @type {Uint16Array} */\n  HEAPU16,\n/** @type {Int32Array} */\n  HEAP32,\n/** @type {Uint32Array} */\n  HEAPU32,\n/** @type {Float32Array} */\n  HEAPF32,\n/** @type {Float64Array} */\n  HEAPF64;\n\nfunction updateGlobalBuffer(buf) {\n  Module['buffer'] = buffer = buf;\n}\n\nfunction updateGlobalBufferViews() {\n  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);\n  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);\n  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);\n}\n\n\nvar STATIC_BASE = 1024,\n    STACK_BASE = 8439824,\n    STACKTOP = STACK_BASE,\n    STACK_MAX = 13682704,\n    DYNAMIC_BASE = 13682704,\n    DYNAMICTOP_PTR = 8439568;\n\nassert(STACK_BASE % 16 === 0, 'stack must start aligned');\nassert(DYNAMIC_BASE % 16 === 0, 'heap must start aligned');\n\n\n\nvar TOTAL_STACK = 5242880;\nif (Module['TOTAL_STACK']) assert(TOTAL_STACK === Module['TOTAL_STACK'], 'the stack size can no longer be determined at runtime')\n\nvar TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;\nif (TOTAL_MEMORY < TOTAL_STACK) err('TOTAL_MEMORY should be larger than TOTAL_STACK, was ' + TOTAL_MEMORY + '! (TOTAL_STACK=' + TOTAL_STACK + ')');\n\n// Initialize the runtime's memory\n// check for full engine support (use string 'subarray' to avoid closure compiler confusion)\nassert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray !== undefined && Int32Array.prototype.set !== undefined,\n       'JS engine does not provide full typed array support');\n\n\n\n\n\n\n\n// Use a provided buffer, if there is one, or else allocate a new one\nif (Module['buffer']) {\n  buffer = Module['buffer'];\n  assert(buffer.byteLength === TOTAL_MEMORY, 'provided buffer should be ' + TOTAL_MEMORY + ' bytes, but it is ' + buffer.byteLength);\n} else {\n  // Use a WebAssembly memory where available\n  if (typeof WebAssembly === 'object' && typeof WebAssembly.Memory === 'function') {\n    assert(TOTAL_MEMORY % WASM_PAGE_SIZE === 0);\n    wasmMemory = new WebAssembly.Memory({ 'initial': TOTAL_MEMORY / WASM_PAGE_SIZE });\n    buffer = wasmMemory.buffer;\n  } else\n  {\n    buffer = new ArrayBuffer(TOTAL_MEMORY);\n  }\n  assert(buffer.byteLength === TOTAL_MEMORY);\n  Module['buffer'] = buffer;\n}\nupdateGlobalBufferViews();\n\n\nHEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;\n\n\n// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.\nfunction writeStackCookie() {\n  assert((STACK_MAX & 3) == 0);\n  HEAPU32[(STACK_MAX >> 2)-1] = 0x02135467;\n  HEAPU32[(STACK_MAX >> 2)-2] = 0x89BACDFE;\n}\n\nfunction checkStackCookie() {\n  if (HEAPU32[(STACK_MAX >> 2)-1] != 0x02135467 || HEAPU32[(STACK_MAX >> 2)-2] != 0x89BACDFE) {\n    abort('Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x02135467, but received 0x' + HEAPU32[(STACK_MAX >> 2)-2].toString(16) + ' ' + HEAPU32[(STACK_MAX >> 2)-1].toString(16));\n  }\n  // Also test the global address 0 for integrity.\n  if (HEAP32[0] !== 0x63736d65 /* 'emsc' */) throw 'Runtime error: The application has corrupted its heap memory area (address zero)!';\n}\n\nfunction abortStackOverflow(allocSize) {\n  abort('Stack overflow! Attempted to allocate ' + allocSize + ' bytes on the stack, but stack has only ' + (STACK_MAX - stackSave() + allocSize) + ' bytes available!');\n}\n\n\n  HEAP32[0] = 0x63736d65; /* 'emsc' */\n\n\n\n// Endianness check (note: assumes compiler arch was little-endian)\nHEAP16[1] = 0x6373;\nif (HEAPU8[2] !== 0x73 || HEAPU8[3] !== 0x63) throw 'Runtime error: expected the system to be little-endian!';\n\nfunction callRuntimeCallbacks(callbacks) {\n  while(callbacks.length > 0) {\n    var callback = callbacks.shift();\n    if (typeof callback == 'function') {\n      callback();\n      continue;\n    }\n    var func = callback.func;\n    if (typeof func === 'number') {\n      if (callback.arg === undefined) {\n        Module['dynCall_v'](func);\n      } else {\n        Module['dynCall_vi'](func, callback.arg);\n      }\n    } else {\n      func(callback.arg === undefined ? null : callback.arg);\n    }\n  }\n}\n\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\nvar __ATINIT__    = []; // functions called during startup\nvar __ATMAIN__    = []; // functions called when main() is to be run\nvar __ATEXIT__    = []; // functions called during shutdown\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\n\nvar runtimeInitialized = false;\nvar runtimeExited = false;\n\n\nfunction preRun() {\n  // compatibility - merge in anything from Module['preRun'] at this time\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction ensureInitRuntime() {\n  checkStackCookie();\n  if (runtimeInitialized) return;\n  runtimeInitialized = true;\n  if (!Module[\"noFSInit\"] && !FS.init.initialized) FS.init();\nTTY.init();\n  callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction preMain() {\n  checkStackCookie();\n  FS.ignorePermissions = false;\n  callRuntimeCallbacks(__ATMAIN__);\n}\n\nfunction exitRuntime() {\n  checkStackCookie();\n  runtimeExited = true;\n}\n\nfunction postRun() {\n  checkStackCookie();\n  // compatibility - merge in anything from Module['postRun'] at this time\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n  __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n  __ATINIT__.unshift(cb);\n}\n\nfunction addOnPreMain(cb) {\n  __ATMAIN__.unshift(cb);\n}\n\nfunction addOnExit(cb) {\n}\n\nfunction addOnPostRun(cb) {\n  __ATPOSTRUN__.unshift(cb);\n}\n\nfunction unSign(value, bits, ignore) {\n  if (value >= 0) {\n    return value;\n  }\n  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts\n                    : Math.pow(2, bits)         + value;\n}\nfunction reSign(value, bits, ignore) {\n  if (value <= 0) {\n    return value;\n  }\n  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32\n                        : Math.pow(2, bits-1);\n  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that\n                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors\n                                                       // TODO: In i64 mode 1, resign the two parts separately and safely\n    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts\n  }\n  return value;\n}\n\n\nassert(Math.imul, 'This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.fround, 'This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.clz32, 'This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.trunc, 'This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\n\nvar Math_abs = Math.abs;\nvar Math_cos = Math.cos;\nvar Math_sin = Math.sin;\nvar Math_tan = Math.tan;\nvar Math_acos = Math.acos;\nvar Math_asin = Math.asin;\nvar Math_atan = Math.atan;\nvar Math_atan2 = Math.atan2;\nvar Math_exp = Math.exp;\nvar Math_log = Math.log;\nvar Math_sqrt = Math.sqrt;\nvar Math_ceil = Math.ceil;\nvar Math_floor = Math.floor;\nvar Math_pow = Math.pow;\nvar Math_imul = Math.imul;\nvar Math_fround = Math.fround;\nvar Math_round = Math.round;\nvar Math_min = Math.min;\nvar Math_max = Math.max;\nvar Math_clz32 = Math.clz32;\nvar Math_trunc = Math.trunc;\n\n\n\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// Module.preRun (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\nvar runDependencyTracking = {};\n\nfunction getUniqueRunDependency(id) {\n  var orig = id;\n  while (1) {\n    if (!runDependencyTracking[id]) return id;\n    id = orig + Math.random();\n  }\n  return id;\n}\n\nfunction addRunDependency(id) {\n  runDependencies++;\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n  if (id) {\n    assert(!runDependencyTracking[id]);\n    runDependencyTracking[id] = 1;\n    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {\n      // Check for missing dependencies every few seconds\n      runDependencyWatcher = setInterval(function() {\n        if (ABORT) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n          return;\n        }\n        var shown = false;\n        for (var dep in runDependencyTracking) {\n          if (!shown) {\n            shown = true;\n            err('still waiting on run dependencies:');\n          }\n          err('dependency: ' + dep);\n        }\n        if (shown) {\n          err('(end of list)');\n        }\n      }, 10000);\n    }\n  } else {\n    err('warning: run dependency added without ID');\n  }\n}\n\nfunction removeRunDependency(id) {\n  runDependencies--;\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n  if (id) {\n    assert(runDependencyTracking[id]);\n    delete runDependencyTracking[id];\n  } else {\n    err('warning: run dependency removed without ID');\n  }\n  if (runDependencies == 0) {\n    if (runDependencyWatcher !== null) {\n      clearInterval(runDependencyWatcher);\n      runDependencyWatcher = null;\n    }\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback(); // can add another dependenciesFulfilled\n    }\n  }\n}\n\nModule[\"preloadedImages\"] = {}; // maps url to image data\nModule[\"preloadedAudios\"] = {}; // maps url to audio data\n\n\nvar memoryInitializer = null;\n\n\n\n\n\n\n// Copyright 2017 The Emscripten Authors.  All rights reserved.\n// Emscripten is available under two separate licenses, the MIT license and the\n// University of Illinois/NCSA Open Source License.  Both these licenses can be\n// found in the LICENSE file.\n\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\n\n// Indicates whether filename is a base64 data URI.\nfunction isDataURI(filename) {\n  return String.prototype.startsWith ?\n      filename.startsWith(dataURIPrefix) :\n      filename.indexOf(dataURIPrefix) === 0;\n}\n\n\n\n\nvar wasmBinaryFile = 'gnugo.wasm';\nif (!isDataURI(wasmBinaryFile)) {\n  wasmBinaryFile = locateFile(wasmBinaryFile);\n}\n\nfunction getBinary() {\n  try {\n    if (Module['wasmBinary']) {\n      return new Uint8Array(Module['wasmBinary']);\n    }\n    if (Module['readBinary']) {\n      return Module['readBinary'](wasmBinaryFile);\n    } else {\n      throw \"sync fetching of the wasm failed: you can preload it to Module['wasmBinary'] manually, or emcc.py will do that for you when generating HTML (but not JS)\";\n    }\n  }\n  catch (err) {\n    abort(err);\n  }\n}\n\nfunction getBinaryPromise() {\n  // if we don't have the binary yet, and have the Fetch api, use that\n  // in some environments, like Electron's render process, Fetch api may be present, but have a different context than expected, let's only use it on the Web\n  if (!Module['wasmBinary'] && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && typeof fetch === 'function') {\n    return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function(response) {\n      if (!response['ok']) {\n        throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n      }\n      return response['arrayBuffer']();\n    }).catch(function () {\n      return getBinary();\n    });\n  }\n  // Otherwise, getBinary should be able to get it synchronously\n  return new Promise(function(resolve, reject) {\n    resolve(getBinary());\n  });\n}\n\n// Create the wasm instance.\n// Receives the wasm imports, returns the exports.\nfunction createWasm(env) {\n  // prepare imports\n  var info = {\n    'env': env\n    ,\n    'global': {\n      'NaN': NaN,\n      'Infinity': Infinity\n    },\n    'global.Math': Math,\n    'asm2wasm': asm2wasmImports\n  };\n  // Load the wasm module and create an instance of using native support in the JS engine.\n  // handle a generated wasm instance, receiving its exports and\n  // performing other necessary setup\n  function receiveInstance(instance, module) {\n    var exports = instance.exports;\n    Module['asm'] = exports;\n    removeRunDependency('wasm-instantiate');\n  }\n  addRunDependency('wasm-instantiate');\n\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n  // to manually instantiate the Wasm module themselves. This allows pages to run the instantiation parallel\n  // to any other async startup actions they are performing.\n  if (Module['instantiateWasm']) {\n    try {\n      return Module['instantiateWasm'](info, receiveInstance);\n    } catch(e) {\n      err('Module.instantiateWasm callback failed with error: ' + e);\n      return false;\n    }\n  }\n\n  var instance;\n  var module;\n  try {\n    module = new WebAssembly.Module(getBinary());\n    instance = new WebAssembly.Instance(module, info)\n  } catch (e) {\n    err('failed to compile wasm module: ' + e);\n    if (e.toString().indexOf('imported Memory with incompatible size') >= 0) {\n      err('Memory size incompatibility issues may be due to changing TOTAL_MEMORY at runtime to something too large. Use ALLOW_MEMORY_GROWTH to allow any size memory (and also make sure not to set TOTAL_MEMORY at runtime to something smaller than it was at compile time).');\n    }\n    return false;\n  }\n  receiveInstance(instance, module);\n  return Module['asm']; // exports were assigned here\n}\n\n// Provide an \"asm.js function\" for the application, called to \"link\" the asm.js module. We instantiate\n// the wasm module at that time, and it receives imports and provides exports and so forth, the app\n// doesn't need to care that it is wasm or asm.js.\n\nModule['asm'] = function(global, env, providedBuffer) {\n  // memory was already allocated (so js could use the buffer)\n  env['memory'] = wasmMemory\n  ;\n  // import table\n  env['table'] = wasmTable = new WebAssembly.Table({\n    'initial': 20480,\n    'maximum': 20480,\n    'element': 'anyfunc'\n  });\n  env['__memory_base'] = 1024; // tell the memory segments where to place themselves\n  env['__table_base'] = 0; // table starts at 0 by default (even in dynamic linking, for the main module)\n\n  var exports = createWasm(env);\n  assert(exports, 'binaryen setup failed (no wasm support?)');\n  return exports;\n};\n\n// === Body ===\n\nvar ASM_CONSTS = [];\n\n\n\n\n\n// STATICTOP = STATIC_BASE + 8438800;\n/* global initializers */  __ATINIT__.push({ func: function() { ___emscripten_environ_constructor() } });\n\n\n\n\n\n\n\n\n/* no memory initializer */\nvar tempDoublePtr = 8439808\nassert(tempDoublePtr % 8 == 0);\n\nfunction copyTempFloat(ptr) { // functions, because inlining this code increases code size too much\n  HEAP8[tempDoublePtr] = HEAP8[ptr];\n  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];\n  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];\n  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];\n}\n\nfunction copyTempDouble(ptr) {\n  HEAP8[tempDoublePtr] = HEAP8[ptr];\n  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];\n  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];\n  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];\n  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];\n  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];\n  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];\n  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];\n}\n\n// {{PRE_LIBRARY}}\n\n\n  function ___assert_fail(condition, filename, line, func) {\n      abort('Assertion failed: ' + UTF8ToString(condition) + ', at: ' + [filename ? UTF8ToString(filename) : 'unknown filename', line, func ? UTF8ToString(func) : 'unknown function']);\n    }\n\n\n  var ENV={};function ___buildEnvironment(environ) {\n      // WARNING: Arbitrary limit!\n      var MAX_ENV_VALUES = 64;\n      var TOTAL_ENV_SIZE = 1024;\n\n      // Statically allocate memory for the environment.\n      var poolPtr;\n      var envPtr;\n      if (!___buildEnvironment.called) {\n        ___buildEnvironment.called = true;\n        // Set default values. Use string keys for Closure Compiler compatibility.\n        ENV['USER'] = ENV['LOGNAME'] = 'web_user';\n        ENV['PATH'] = '/';\n        ENV['PWD'] = '/';\n        ENV['HOME'] = '/home/web_user';\n        ENV['LANG'] = 'C.UTF-8';\n        ENV['_'] = Module['thisProgram'];\n        // Allocate memory.\n        poolPtr = getMemory(TOTAL_ENV_SIZE);\n        envPtr = getMemory(MAX_ENV_VALUES * 4);\n        HEAP32[((envPtr)>>2)]=poolPtr;\n        HEAP32[((environ)>>2)]=envPtr;\n      } else {\n        envPtr = HEAP32[((environ)>>2)];\n        poolPtr = HEAP32[((envPtr)>>2)];\n      }\n\n      // Collect key=value lines.\n      var strings = [];\n      var totalSize = 0;\n      for (var key in ENV) {\n        if (typeof ENV[key] === 'string') {\n          var line = key + '=' + ENV[key];\n          strings.push(line);\n          totalSize += line.length;\n        }\n      }\n      if (totalSize > TOTAL_ENV_SIZE) {\n        throw new Error('Environment size exceeded TOTAL_ENV_SIZE!');\n      }\n\n      // Make new.\n      var ptrSize = 4;\n      for (var i = 0; i < strings.length; i++) {\n        var line = strings[i];\n        writeAsciiToMemory(line, poolPtr);\n        HEAP32[(((envPtr)+(i * ptrSize))>>2)]=poolPtr;\n        poolPtr += line.length + 1;\n      }\n      HEAP32[(((envPtr)+(strings.length * ptrSize))>>2)]=0;\n    }\n\n  function ___lock() {}\n\n\n\n\n  function ___setErrNo(value) {\n      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;\n      else err('failed to set errno from JS');\n      return value;\n    }\n\n  var PATH={splitPath:function(filename) {\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },normalizeArray:function(parts, allowAboveRoot) {\n        // if the path tries to go above the root, `up` ends up > 0\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === '.') {\n            parts.splice(i, 1);\n          } else if (last === '..') {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n        // if the path is allowed to go above the root, restore leading ..s\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift('..');\n          }\n        }\n        return parts;\n      },normalize:function(path) {\n        var isAbsolute = path.charAt(0) === '/',\n            trailingSlash = path.substr(-1) === '/';\n        // Normalize the path\n        path = PATH.normalizeArray(path.split('/').filter(function(p) {\n          return !!p;\n        }), !isAbsolute).join('/');\n        if (!path && !isAbsolute) {\n          path = '.';\n        }\n        if (path && trailingSlash) {\n          path += '/';\n        }\n        return (isAbsolute ? '/' : '') + path;\n      },dirname:function(path) {\n        var result = PATH.splitPath(path),\n            root = result[0],\n            dir = result[1];\n        if (!root && !dir) {\n          // No dirname whatsoever\n          return '.';\n        }\n        if (dir) {\n          // It has a dirname, strip trailing slash\n          dir = dir.substr(0, dir.length - 1);\n        }\n        return root + dir;\n      },basename:function(path) {\n        // EMSCRIPTEN return '/'' for '/', not an empty string\n        if (path === '/') return '/';\n        var lastSlash = path.lastIndexOf('/');\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash+1);\n      },extname:function(path) {\n        return PATH.splitPath(path)[3];\n      },join:function() {\n        var paths = Array.prototype.slice.call(arguments, 0);\n        return PATH.normalize(paths.join('/'));\n      },join2:function(l, r) {\n        return PATH.normalize(l + '/' + r);\n      },resolve:function() {\n        var resolvedPath = '',\n          resolvedAbsolute = false;\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = (i >= 0) ? arguments[i] : FS.cwd();\n          // Skip empty and invalid entries\n          if (typeof path !== 'string') {\n            throw new TypeError('Arguments to path.resolve must be strings');\n          } else if (!path) {\n            return ''; // an invalid portion invalidates the whole thing\n          }\n          resolvedPath = path + '/' + resolvedPath;\n          resolvedAbsolute = path.charAt(0) === '/';\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {\n          return !!p;\n        }), !resolvedAbsolute).join('/');\n        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n      },relative:function(from, to) {\n        from = PATH.resolve(from).substr(1);\n        to = PATH.resolve(to).substr(1);\n        function trim(arr) {\n          var start = 0;\n          for (; start < arr.length; start++) {\n            if (arr[start] !== '') break;\n          }\n          var end = arr.length - 1;\n          for (; end >= 0; end--) {\n            if (arr[end] !== '') break;\n          }\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n        var fromParts = trim(from.split('/'));\n        var toParts = trim(to.split('/'));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n        var outputParts = [];\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push('..');\n        }\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join('/');\n      }};\n\n  var TTY={ttys:[],init:function () {\n        // https://github.com/emscripten-core/emscripten/pull/1555\n        // if (ENVIRONMENT_IS_NODE) {\n        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY\n        //   // device, it always assumes it's a TTY device. because of this, we're forcing\n        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible\n        //   // with text files until FS.init can be refactored.\n        //   process['stdin']['setEncoding']('utf8');\n        // }\n      },shutdown:function() {\n        // https://github.com/emscripten-core/emscripten/pull/1555\n        // if (ENVIRONMENT_IS_NODE) {\n        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?\n        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation\n        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?\n        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle\n        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call\n        //   process['stdin']['pause']();\n        // }\n      },register:function(dev, ops) {\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },stream_ops:{open:function(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        },close:function(stream) {\n          // flush any pending line data\n          stream.tty.ops.flush(stream.tty);\n        },flush:function(stream) {\n          stream.tty.ops.flush(stream.tty);\n        },read:function(stream, buffer, offset, length, pos /* ignored */) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(ERRNO_CODES.EIO);\n            }\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);\n            }\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset+i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        },write:function(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(ERRNO_CODES.EIO);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        }},default_tty_ops:{get_char:function(tty) {\n          if (!tty.input.length) {\n            var result = null;\n            if (ENVIRONMENT_IS_NODE) {\n              // we will read data by chunks of BUFSIZE\n              var BUFSIZE = 256;\n              var buf = new Buffer(BUFSIZE);\n              var bytesRead = 0;\n\n              var isPosixPlatform = (process.platform != 'win32'); // Node doesn't offer a direct check, so test by exclusion\n\n              var fd = process.stdin.fd;\n              if (isPosixPlatform) {\n                // Linux and Mac cannot use process.stdin.fd (which isn't set up as sync)\n                var usingDevice = false;\n                try {\n                  fd = fs.openSync('/dev/stdin', 'r');\n                  usingDevice = true;\n                } catch (e) {}\n              }\n\n              try {\n                bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);\n              } catch(e) {\n                // Cross-platform differences: on Windows, reading EOF throws an exception, but on other OSes,\n                // reading EOF returns 0. Uniformize behavior by treating the EOF exception to return 0.\n                if (e.toString().indexOf('EOF') != -1) bytesRead = 0;\n                else throw e;\n              }\n\n              if (usingDevice) { fs.closeSync(fd); }\n              if (bytesRead > 0) {\n                result = buf.slice(0, bytesRead).toString('utf-8');\n              } else {\n                result = null;\n              }\n            } else\n            if (typeof window != 'undefined' &&\n              typeof window.prompt == 'function') {\n              // Browser.\n              result = window.prompt('Input: ');  // returns null on cancel\n              if (result !== null) {\n                result += '\\n';\n              }\n            } else if (typeof readline == 'function') {\n              // Command line.\n              result = readline();\n              if (result !== null) {\n                result += '\\n';\n              }\n            }\n            if (!result) {\n              return null;\n            }\n            tty.input = intArrayFromString(result, true);\n          }\n          return tty.input.shift();\n        },put_char:function(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.\n          }\n        },flush:function(tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        }},default_tty1_ops:{put_char:function(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },flush:function(tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        }}};\n\n  var MEMFS={ops_table:null,mount:function(mount) {\n        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);\n      },createNode:function(parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          // no supported\n          throw new FS.ErrnoError(ERRNO_CODES.EPERM);\n        }\n        if (!MEMFS.ops_table) {\n          MEMFS.ops_table = {\n            dir: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                lookup: MEMFS.node_ops.lookup,\n                mknod: MEMFS.node_ops.mknod,\n                rename: MEMFS.node_ops.rename,\n                unlink: MEMFS.node_ops.unlink,\n                rmdir: MEMFS.node_ops.rmdir,\n                readdir: MEMFS.node_ops.readdir,\n                symlink: MEMFS.node_ops.symlink\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek\n              }\n            },\n            file: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek,\n                read: MEMFS.stream_ops.read,\n                write: MEMFS.stream_ops.write,\n                allocate: MEMFS.stream_ops.allocate,\n                mmap: MEMFS.stream_ops.mmap,\n                msync: MEMFS.stream_ops.msync\n              }\n            },\n            link: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                readlink: MEMFS.node_ops.readlink\n              },\n              stream: {}\n            },\n            chrdev: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr\n              },\n              stream: FS.chrdev_stream_ops\n            }\n          };\n        }\n        var node = FS.createNode(parent, name, mode, dev);\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.\n          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred\n          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size\n          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.\n          node.contents = null;\n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n        node.timestamp = Date.now();\n        // add the new node to the parent\n        if (parent) {\n          parent.contents[name] = node;\n        }\n        return node;\n      },getFileDataAsRegularArray:function(node) {\n        if (node.contents && node.contents.subarray) {\n          var arr = [];\n          for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);\n          return arr; // Returns a copy of the original data.\n        }\n        return node.contents; // No-op, the file contents are already in a JS array. Return as-is.\n      },getFileDataAsTypedArray:function(node) {\n        if (!node.contents) return new Uint8Array;\n        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.\n        return new Uint8Array(node.contents);\n      },expandFileStorage:function(node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.\n        // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.\n        // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to\n        // avoid overshooting the allocation cap by a very large margin.\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) | 0);\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity); // Allocate new storage.\n        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.\n        return;\n      },resizeFileStorage:function(node, newSize) {\n        if (node.usedBytes == newSize) return;\n        if (newSize == 0) {\n          node.contents = null; // Fully decommit when requesting a resize to zero.\n          node.usedBytes = 0;\n          return;\n        }\n        if (!node.contents || node.contents.subarray) { // Resize a typed array if that is being used as the backing store.\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(new ArrayBuffer(newSize)); // Allocate new storage.\n          if (oldContents) {\n            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.\n          }\n          node.usedBytes = newSize;\n          return;\n        }\n        // Backing with a JS array.\n        if (!node.contents) node.contents = [];\n        if (node.contents.length > newSize) node.contents.length = newSize;\n        else while (node.contents.length < newSize) node.contents.push(0);\n        node.usedBytes = newSize;\n      },node_ops:{getattr:function(node) {\n          var attr = {};\n          // device numbers reuse inode numbers.\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),\n          //       but this is not required by the standard.\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },setattr:function(node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },lookup:function(parent, name) {\n          throw FS.genericErrors[ERRNO_CODES.ENOENT];\n        },mknod:function(parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },rename:function(old_node, new_dir, new_name) {\n          // if we're overwriting a directory at new_name, make sure it's empty.\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {\n            }\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);\n              }\n            }\n          }\n          // do the internal rewiring\n          delete old_node.parent.contents[old_node.name];\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          old_node.parent = new_dir;\n        },unlink:function(parent, name) {\n          delete parent.contents[name];\n        },rmdir:function(parent, name) {\n          var node = FS.lookupNode(parent, name);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);\n          }\n          delete parent.contents[name];\n        },readdir:function(node) {\n          var entries = ['.', '..']\n          for (var key in node.contents) {\n            if (!node.contents.hasOwnProperty(key)) {\n              continue;\n            }\n            entries.push(key);\n          }\n          return entries;\n        },symlink:function(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },readlink:function(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n          }\n          return node.link;\n        }},stream_ops:{read:function(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          assert(size >= 0);\n          if (size > 8 && contents.subarray) { // non-trivial, and typed array\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\n          }\n          return size;\n        },write:function(stream, buffer, offset, length, position, canOwn) {\n          // If memory can grow, we don't want to hold on to references of\n          // the memory Buffer, as they may get invalidated. That means\n          // we need to do a copy here.\n          // FIXME: this is inefficient as the file packager may have\n          //        copied the data into memory already - we may want to\n          //        integrate more there and let the file packager loading\n          //        code be able to query if memory growth is on or off.\n          if (canOwn) {\n            warnOnce('file packager has copied file data into memory, but in memory growth we are forced to copy it again (see --no-heap-copy)');\n          }\n          canOwn = false;\n\n          if (!length) return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?\n            if (canOwn) {\n              assert(position === 0, 'canOwn must imply no weird position inside the file');\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.\n              node.contents = new Uint8Array(buffer.subarray(offset, offset + length));\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?\n              node.contents.set(buffer.subarray(offset, offset + length), position);\n              return length;\n            }\n          }\n\n          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.\n          MEMFS.expandFileStorage(node, position+length);\n          if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); // Use typed array write if available.\n          else {\n            for (var i = 0; i < length; i++) {\n             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position+length);\n          return length;\n        },llseek:function(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {  // SEEK_CUR.\n            position += stream.position;\n          } else if (whence === 2) {  // SEEK_END.\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n          }\n          return position;\n        },allocate:function(stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n        },mmap:function(stream, buffer, offset, length, position, prot, flags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n          // Only make a new copy when MAP_PRIVATE is specified.\n          if ( !(flags & 2) &&\n                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {\n            // We can't emulate MAP_SHARED when the file is not backed by the buffer\n            // we're mapping to (e.g. the HEAP buffer).\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            // Try to avoid unnecessary slices.\n            if (position > 0 || position + length < stream.node.usedBytes) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(contents, position, position + length);\n              }\n            }\n            allocated = true;\n            ptr = _malloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);\n            }\n            buffer.set(contents, ptr);\n          }\n          return { ptr: ptr, allocated: allocated };\n        },msync:function(stream, buffer, offset, length, mmapFlags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);\n          }\n          if (mmapFlags & 2) {\n            // MAP_PRIVATE calls need not to be synced back to underlying fs\n            return 0;\n          }\n\n          var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n          // should we check if bytesWritten and length are the same?\n          return 0;\n        }}};\n\n  var IDBFS={dbs:{},indexedDB:function() {\n        if (typeof indexedDB !== 'undefined') return indexedDB;\n        var ret = null;\n        if (typeof window === 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n        assert(ret, 'IDBFS used, but indexedDB not supported');\n        return ret;\n      },DB_VERSION:21,DB_STORE_NAME:\"FILE_DATA\",mount:function(mount) {\n        // reuse all of the core MEMFS functionality\n        return MEMFS.mount.apply(null, arguments);\n      },syncfs:function(mount, populate, callback) {\n        IDBFS.getLocalSet(mount, function(err, local) {\n          if (err) return callback(err);\n\n          IDBFS.getRemoteSet(mount, function(err, remote) {\n            if (err) return callback(err);\n\n            var src = populate ? remote : local;\n            var dst = populate ? local : remote;\n\n            IDBFS.reconcile(src, dst, callback);\n          });\n        });\n      },getDB:function(name, callback) {\n        // check the cache first\n        var db = IDBFS.dbs[name];\n        if (db) {\n          return callback(null, db);\n        }\n\n        var req;\n        try {\n          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);\n        } catch (e) {\n          return callback(e);\n        }\n        if (!req) {\n          return callback(\"Unable to connect to IndexedDB\");\n        }\n        req.onupgradeneeded = function(e) {\n          var db = e.target.result;\n          var transaction = e.target.transaction;\n\n          var fileStore;\n\n          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {\n            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);\n          } else {\n            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);\n          }\n\n          if (!fileStore.indexNames.contains('timestamp')) {\n            fileStore.createIndex('timestamp', 'timestamp', { unique: false });\n          }\n        };\n        req.onsuccess = function() {\n          db = req.result;\n\n          // add to the cache\n          IDBFS.dbs[name] = db;\n          callback(null, db);\n        };\n        req.onerror = function(e) {\n          callback(this.error);\n          e.preventDefault();\n        };\n      },getLocalSet:function(mount, callback) {\n        var entries = {};\n\n        function isRealDir(p) {\n          return p !== '.' && p !== '..';\n        };\n        function toAbsolute(root) {\n          return function(p) {\n            return PATH.join2(root, p);\n          }\n        };\n\n        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));\n\n        while (check.length) {\n          var path = check.pop();\n          var stat;\n\n          try {\n            stat = FS.stat(path);\n          } catch (e) {\n            return callback(e);\n          }\n\n          if (FS.isDir(stat.mode)) {\n            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));\n          }\n\n          entries[path] = { timestamp: stat.mtime };\n        }\n\n        return callback(null, { type: 'local', entries: entries });\n      },getRemoteSet:function(mount, callback) {\n        var entries = {};\n\n        IDBFS.getDB(mount.mountpoint, function(err, db) {\n          if (err) return callback(err);\n\n          try {\n            var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');\n            transaction.onerror = function(e) {\n              callback(this.error);\n              e.preventDefault();\n            };\n\n            var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\n            var index = store.index('timestamp');\n\n            index.openKeyCursor().onsuccess = function(event) {\n              var cursor = event.target.result;\n\n              if (!cursor) {\n                return callback(null, { type: 'remote', db: db, entries: entries });\n              }\n\n              entries[cursor.primaryKey] = { timestamp: cursor.key };\n\n              cursor.continue();\n            };\n          } catch (e) {\n            return callback(e);\n          }\n        });\n      },loadLocalEntry:function(path, callback) {\n        var stat, node;\n\n        try {\n          var lookup = FS.lookupPath(path);\n          node = lookup.node;\n          stat = FS.stat(path);\n        } catch (e) {\n          return callback(e);\n        }\n\n        if (FS.isDir(stat.mode)) {\n          return callback(null, { timestamp: stat.mtime, mode: stat.mode });\n        } else if (FS.isFile(stat.mode)) {\n          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.\n          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.\n          node.contents = MEMFS.getFileDataAsTypedArray(node);\n          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });\n        } else {\n          return callback(new Error('node type not supported'));\n        }\n      },storeLocalEntry:function(path, entry, callback) {\n        try {\n          if (FS.isDir(entry.mode)) {\n            FS.mkdir(path, entry.mode);\n          } else if (FS.isFile(entry.mode)) {\n            FS.writeFile(path, entry.contents, { canOwn: true });\n          } else {\n            return callback(new Error('node type not supported'));\n          }\n\n          FS.chmod(path, entry.mode);\n          FS.utime(path, entry.timestamp, entry.timestamp);\n        } catch (e) {\n          return callback(e);\n        }\n\n        callback(null);\n      },removeLocalEntry:function(path, callback) {\n        try {\n          var lookup = FS.lookupPath(path);\n          var stat = FS.stat(path);\n\n          if (FS.isDir(stat.mode)) {\n            FS.rmdir(path);\n          } else if (FS.isFile(stat.mode)) {\n            FS.unlink(path);\n          }\n        } catch (e) {\n          return callback(e);\n        }\n\n        callback(null);\n      },loadRemoteEntry:function(store, path, callback) {\n        var req = store.get(path);\n        req.onsuccess = function(event) { callback(null, event.target.result); };\n        req.onerror = function(e) {\n          callback(this.error);\n          e.preventDefault();\n        };\n      },storeRemoteEntry:function(store, path, entry, callback) {\n        var req = store.put(entry, path);\n        req.onsuccess = function() { callback(null); };\n        req.onerror = function(e) {\n          callback(this.error);\n          e.preventDefault();\n        };\n      },removeRemoteEntry:function(store, path, callback) {\n        var req = store.delete(path);\n        req.onsuccess = function() { callback(null); };\n        req.onerror = function(e) {\n          callback(this.error);\n          e.preventDefault();\n        };\n      },reconcile:function(src, dst, callback) {\n        var total = 0;\n\n        var create = [];\n        Object.keys(src.entries).forEach(function (key) {\n          var e = src.entries[key];\n          var e2 = dst.entries[key];\n          if (!e2 || e.timestamp > e2.timestamp) {\n            create.push(key);\n            total++;\n          }\n        });\n\n        var remove = [];\n        Object.keys(dst.entries).forEach(function (key) {\n          var e = dst.entries[key];\n          var e2 = src.entries[key];\n          if (!e2) {\n            remove.push(key);\n            total++;\n          }\n        });\n\n        if (!total) {\n          return callback(null);\n        }\n\n        var errored = false;\n        var completed = 0;\n        var db = src.type === 'remote' ? src.db : dst.db;\n        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');\n        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\n\n        function done(err) {\n          if (err) {\n            if (!done.errored) {\n              done.errored = true;\n              return callback(err);\n            }\n            return;\n          }\n          if (++completed >= total) {\n            return callback(null);\n          }\n        };\n\n        transaction.onerror = function(e) {\n          done(this.error);\n          e.preventDefault();\n        };\n\n        // sort paths in ascending order so directory entries are created\n        // before the files inside them\n        create.sort().forEach(function (path) {\n          if (dst.type === 'local') {\n            IDBFS.loadRemoteEntry(store, path, function (err, entry) {\n              if (err) return done(err);\n              IDBFS.storeLocalEntry(path, entry, done);\n            });\n          } else {\n            IDBFS.loadLocalEntry(path, function (err, entry) {\n              if (err) return done(err);\n              IDBFS.storeRemoteEntry(store, path, entry, done);\n            });\n          }\n        });\n\n        // sort paths in descending order so files are deleted before their\n        // parent directories\n        remove.sort().reverse().forEach(function(path) {\n          if (dst.type === 'local') {\n            IDBFS.removeLocalEntry(path, done);\n          } else {\n            IDBFS.removeRemoteEntry(store, path, done);\n          }\n        });\n      }};\n\n  var NODEFS={isWindows:false,staticInit:function() {\n        NODEFS.isWindows = !!process.platform.match(/^win/);\n        var flags = process[\"binding\"](\"constants\");\n        // Node.js 4 compatibility: it has no namespaces for constants\n        if (flags[\"fs\"]) {\n          flags = flags[\"fs\"];\n        }\n        NODEFS.flagsForNodeMap = {\n          \"1024\": flags[\"O_APPEND\"],\n          \"64\": flags[\"O_CREAT\"],\n          \"128\": flags[\"O_EXCL\"],\n          \"0\": flags[\"O_RDONLY\"],\n          \"2\": flags[\"O_RDWR\"],\n          \"4096\": flags[\"O_SYNC\"],\n          \"512\": flags[\"O_TRUNC\"],\n          \"1\": flags[\"O_WRONLY\"]\n        };\n      },bufferFrom:function (arrayBuffer) {\n        // Node.js < 4.5 compatibility: Buffer.from does not support ArrayBuffer\n        // Buffer.from before 4.5 was just a method inherited from Uint8Array\n        // Buffer.alloc has been added with Buffer.from together, so check it instead\n        return Buffer.alloc ? Buffer.from(arrayBuffer) : new Buffer(arrayBuffer);\n      },mount:function (mount) {\n        assert(ENVIRONMENT_IS_NODE);\n        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);\n      },createNode:function (parent, name, mode, dev) {\n        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {\n          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n        }\n        var node = FS.createNode(parent, name, mode);\n        node.node_ops = NODEFS.node_ops;\n        node.stream_ops = NODEFS.stream_ops;\n        return node;\n      },getMode:function (path) {\n        var stat;\n        try {\n          stat = fs.lstatSync(path);\n          if (NODEFS.isWindows) {\n            // Node.js on Windows never represents permission bit 'x', so\n            // propagate read bits to execute bits\n            stat.mode = stat.mode | ((stat.mode & 292) >> 2);\n          }\n        } catch (e) {\n          if (!e.code) throw e;\n          throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n        }\n        return stat.mode;\n      },realPath:function (node) {\n        var parts = [];\n        while (node.parent !== node) {\n          parts.push(node.name);\n          node = node.parent;\n        }\n        parts.push(node.mount.opts.root);\n        parts.reverse();\n        return PATH.join.apply(null, parts);\n      },flagsForNode:function(flags) {\n        flags &= ~0x200000 /*O_PATH*/; // Ignore this flag from musl, otherwise node.js fails to open the file.\n        flags &= ~0x800 /*O_NONBLOCK*/; // Ignore this flag from musl, otherwise node.js fails to open the file.\n        flags &= ~0x8000 /*O_LARGEFILE*/; // Ignore this flag from musl, otherwise node.js fails to open the file.\n        flags &= ~0x80000 /*O_CLOEXEC*/; // Some applications may pass it; it makes no sense for a single process.\n        var newFlags = 0;\n        for (var k in NODEFS.flagsForNodeMap) {\n          if (flags & k) {\n            newFlags |= NODEFS.flagsForNodeMap[k];\n            flags ^= k;\n          }\n        }\n\n        if (!flags) {\n          return newFlags;\n        } else {\n          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n        }\n      },node_ops:{getattr:function(node) {\n          var path = NODEFS.realPath(node);\n          var stat;\n          try {\n            stat = fs.lstatSync(path);\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n          }\n          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.\n          // See http://support.microsoft.com/kb/140365\n          if (NODEFS.isWindows && !stat.blksize) {\n            stat.blksize = 4096;\n          }\n          if (NODEFS.isWindows && !stat.blocks) {\n            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;\n          }\n          return {\n            dev: stat.dev,\n            ino: stat.ino,\n            mode: stat.mode,\n            nlink: stat.nlink,\n            uid: stat.uid,\n            gid: stat.gid,\n            rdev: stat.rdev,\n            size: stat.size,\n            atime: stat.atime,\n            mtime: stat.mtime,\n            ctime: stat.ctime,\n            blksize: stat.blksize,\n            blocks: stat.blocks\n          };\n        },setattr:function(node, attr) {\n          var path = NODEFS.realPath(node);\n          try {\n            if (attr.mode !== undefined) {\n              fs.chmodSync(path, attr.mode);\n              // update the common node structure mode as well\n              node.mode = attr.mode;\n            }\n            if (attr.timestamp !== undefined) {\n              var date = new Date(attr.timestamp);\n              fs.utimesSync(path, date, date);\n            }\n            if (attr.size !== undefined) {\n              fs.truncateSync(path, attr.size);\n            }\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n          }\n        },lookup:function (parent, name) {\n          var path = PATH.join2(NODEFS.realPath(parent), name);\n          var mode = NODEFS.getMode(path);\n          return NODEFS.createNode(parent, name, mode);\n        },mknod:function (parent, name, mode, dev) {\n          var node = NODEFS.createNode(parent, name, mode, dev);\n          // create the backing node for this in the fs root as well\n          var path = NODEFS.realPath(node);\n          try {\n            if (FS.isDir(node.mode)) {\n              fs.mkdirSync(path, node.mode);\n            } else {\n              fs.writeFileSync(path, '', { mode: node.mode });\n            }\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n          }\n          return node;\n        },rename:function (oldNode, newDir, newName) {\n          var oldPath = NODEFS.realPath(oldNode);\n          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);\n          try {\n            fs.renameSync(oldPath, newPath);\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n          }\n        },unlink:function(parent, name) {\n          var path = PATH.join2(NODEFS.realPath(parent), name);\n          try {\n            fs.unlinkSync(path);\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n          }\n        },rmdir:function(parent, name) {\n          var path = PATH.join2(NODEFS.realPath(parent), name);\n          try {\n            fs.rmdirSync(path);\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n          }\n        },readdir:function(node) {\n          var path = NODEFS.realPath(node);\n          try {\n            return fs.readdirSync(path);\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n          }\n        },symlink:function(parent, newName, oldPath) {\n          var newPath = PATH.join2(NODEFS.realPath(parent), newName);\n          try {\n            fs.symlinkSync(oldPath, newPath);\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n          }\n        },readlink:function(node) {\n          var path = NODEFS.realPath(node);\n          try {\n            path = fs.readlinkSync(path);\n            path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);\n            return path;\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n          }\n        }},stream_ops:{open:function (stream) {\n          var path = NODEFS.realPath(stream.node);\n          try {\n            if (FS.isFile(stream.node.mode)) {\n              stream.nfd = fs.openSync(path, NODEFS.flagsForNode(stream.flags));\n            }\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n          }\n        },close:function (stream) {\n          try {\n            if (FS.isFile(stream.node.mode) && stream.nfd) {\n              fs.closeSync(stream.nfd);\n            }\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n          }\n        },read:function (stream, buffer, offset, length, position) {\n          // Node.js < 6 compatibility: node errors on 0 length reads\n          if (length === 0) return 0;\n          try {\n            return fs.readSync(stream.nfd, NODEFS.bufferFrom(buffer.buffer), offset, length, position);\n          } catch (e) {\n            throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n          }\n        },write:function (stream, buffer, offset, length, position) {\n          try {\n            return fs.writeSync(stream.nfd, NODEFS.bufferFrom(buffer.buffer), offset, length, position);\n          } catch (e) {\n            throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n          }\n        },llseek:function (stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {  // SEEK_CUR.\n            position += stream.position;\n          } else if (whence === 2) {  // SEEK_END.\n            if (FS.isFile(stream.node.mode)) {\n              try {\n                var stat = fs.fstatSync(stream.nfd);\n                position += stat.size;\n              } catch (e) {\n                throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n              }\n            }\n          }\n\n          if (position < 0) {\n            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n          }\n\n          return position;\n        }}};\n\n  var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:function (mount) {\n        assert(ENVIRONMENT_IS_WORKER);\n        if (!WORKERFS.reader) WORKERFS.reader = new FileReaderSync();\n        var root = WORKERFS.createNode(null, '/', WORKERFS.DIR_MODE, 0);\n        var createdParents = {};\n        function ensureParent(path) {\n          // return the parent node, creating subdirs as necessary\n          var parts = path.split('/');\n          var parent = root;\n          for (var i = 0; i < parts.length-1; i++) {\n            var curr = parts.slice(0, i+1).join('/');\n            // Issue 4254: Using curr as a node name will prevent the node\n            // from being found in FS.nameTable when FS.open is called on\n            // a path which holds a child of this node,\n            // given that all FS functions assume node names\n            // are just their corresponding parts within their given path,\n            // rather than incremental aggregates which include their parent's\n            // directories.\n            if (!createdParents[curr]) {\n              createdParents[curr] = WORKERFS.createNode(parent, parts[i], WORKERFS.DIR_MODE, 0);\n            }\n            parent = createdParents[curr];\n          }\n          return parent;\n        }\n        function base(path) {\n          var parts = path.split('/');\n          return parts[parts.length-1];\n        }\n        // We also accept FileList here, by using Array.prototype\n        Array.prototype.forEach.call(mount.opts[\"files\"] || [], function(file) {\n          WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate);\n        });\n        (mount.opts[\"blobs\"] || []).forEach(function(obj) {\n          WORKERFS.createNode(ensureParent(obj[\"name\"]), base(obj[\"name\"]), WORKERFS.FILE_MODE, 0, obj[\"data\"]);\n        });\n        (mount.opts[\"packages\"] || []).forEach(function(pack) {\n          pack['metadata'].files.forEach(function(file) {\n            var name = file.filename.substr(1); // remove initial slash\n            WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack['blob'].slice(file.start, file.end));\n          });\n        });\n        return root;\n      },createNode:function (parent, name, mode, dev, contents, mtime) {\n        var node = FS.createNode(parent, name, mode);\n        node.mode = mode;\n        node.node_ops = WORKERFS.node_ops;\n        node.stream_ops = WORKERFS.stream_ops;\n        node.timestamp = (mtime || new Date).getTime();\n        assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);\n        if (mode === WORKERFS.FILE_MODE) {\n          node.size = contents.size;\n          node.contents = contents;\n        } else {\n          node.size = 4096;\n          node.contents = {};\n        }\n        if (parent) {\n          parent.contents[name] = node;\n        }\n        return node;\n      },node_ops:{getattr:function(node) {\n          return {\n            dev: 1,\n            ino: undefined,\n            mode: node.mode,\n            nlink: 1,\n            uid: 0,\n            gid: 0,\n            rdev: undefined,\n            size: node.size,\n            atime: new Date(node.timestamp),\n            mtime: new Date(node.timestamp),\n            ctime: new Date(node.timestamp),\n            blksize: 4096,\n            blocks: Math.ceil(node.size / 4096),\n          };\n        },setattr:function(node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n        },lookup:function(parent, name) {\n          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);\n        },mknod:function (parent, name, mode, dev) {\n          throw new FS.ErrnoError(ERRNO_CODES.EPERM);\n        },rename:function (oldNode, newDir, newName) {\n          throw new FS.ErrnoError(ERRNO_CODES.EPERM);\n        },unlink:function(parent, name) {\n          throw new FS.ErrnoError(ERRNO_CODES.EPERM);\n        },rmdir:function(parent, name) {\n          throw new FS.ErrnoError(ERRNO_CODES.EPERM);\n        },readdir:function(node) {\n          var entries = ['.', '..'];\n          for (var key in node.contents) {\n            if (!node.contents.hasOwnProperty(key)) {\n              continue;\n            }\n            entries.push(key);\n          }\n          return entries;\n        },symlink:function(parent, newName, oldPath) {\n          throw new FS.ErrnoError(ERRNO_CODES.EPERM);\n        },readlink:function(node) {\n          throw new FS.ErrnoError(ERRNO_CODES.EPERM);\n        }},stream_ops:{read:function (stream, buffer, offset, length, position) {\n          if (position >= stream.node.size) return 0;\n          var chunk = stream.node.contents.slice(position, position + length);\n          var ab = WORKERFS.reader.readAsArrayBuffer(chunk);\n          buffer.set(new Uint8Array(ab), offset);\n          return chunk.size;\n        },write:function (stream, buffer, offset, length, position) {\n          throw new FS.ErrnoError(ERRNO_CODES.EIO);\n        },llseek:function (stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {  // SEEK_CUR.\n            position += stream.position;\n          } else if (whence === 2) {  // SEEK_END.\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.size;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n          }\n          return position;\n        }}};\n\n  var ERRNO_MESSAGES={0:\"Success\",1:\"Not super-user\",2:\"No such file or directory\",3:\"No such process\",4:\"Interrupted system call\",5:\"I/O error\",6:\"No such device or address\",7:\"Arg list too long\",8:\"Exec format error\",9:\"Bad file number\",10:\"No children\",11:\"No more processes\",12:\"Not enough core\",13:\"Permission denied\",14:\"Bad address\",15:\"Block device required\",16:\"Mount device busy\",17:\"File exists\",18:\"Cross-device link\",19:\"No such device\",20:\"Not a directory\",21:\"Is a directory\",22:\"Invalid argument\",23:\"Too many open files in system\",24:\"Too many open files\",25:\"Not a typewriter\",26:\"Text file busy\",27:\"File too large\",28:\"No space left on device\",29:\"Illegal seek\",30:\"Read only file system\",31:\"Too many links\",32:\"Broken pipe\",33:\"Math arg out of domain of func\",34:\"Math result not representable\",35:\"File locking deadlock error\",36:\"File or path name too long\",37:\"No record locks available\",38:\"Function not implemented\",39:\"Directory not empty\",40:\"Too many symbolic links\",42:\"No message of desired type\",43:\"Identifier removed\",44:\"Channel number out of range\",45:\"Level 2 not synchronized\",46:\"Level 3 halted\",47:\"Level 3 reset\",48:\"Link number out of range\",49:\"Protocol driver not attached\",50:\"No CSI structure available\",51:\"Level 2 halted\",52:\"Invalid exchange\",53:\"Invalid request descriptor\",54:\"Exchange full\",55:\"No anode\",56:\"Invalid request code\",57:\"Invalid slot\",59:\"Bad font file fmt\",60:\"Device not a stream\",61:\"No data (for no delay io)\",62:\"Timer expired\",63:\"Out of streams resources\",64:\"Machine is not on the network\",65:\"Package not installed\",66:\"The object is remote\",67:\"The link has been severed\",68:\"Advertise error\",69:\"Srmount error\",70:\"Communication error on send\",71:\"Protocol error\",72:\"Multihop attempted\",73:\"Cross mount point (not really error)\",74:\"Trying to read unreadable message\",75:\"Value too large for defined data type\",76:\"Given log. name not unique\",77:\"f.d. invalid for this operation\",78:\"Remote address changed\",79:\"Can   access a needed shared lib\",80:\"Accessing a corrupted shared lib\",81:\".lib section in a.out corrupted\",82:\"Attempting to link in too many libs\",83:\"Attempting to exec a shared library\",84:\"Illegal byte sequence\",86:\"Streams pipe error\",87:\"Too many users\",88:\"Socket operation on non-socket\",89:\"Destination address required\",90:\"Message too long\",91:\"Protocol wrong type for socket\",92:\"Protocol not available\",93:\"Unknown protocol\",94:\"Socket type not supported\",95:\"Not supported\",96:\"Protocol family not supported\",97:\"Address family not supported by protocol family\",98:\"Address already in use\",99:\"Address not available\",100:\"Network interface is not configured\",101:\"Network is unreachable\",102:\"Connection reset by network\",103:\"Connection aborted\",104:\"Connection reset by peer\",105:\"No buffer space available\",106:\"Socket is already connected\",107:\"Socket is not connected\",108:\"Can't send after socket shutdown\",109:\"Too many references\",110:\"Connection timed out\",111:\"Connection refused\",112:\"Host is down\",113:\"Host is unreachable\",114:\"Socket already connected\",115:\"Connection already in progress\",116:\"Stale file handle\",122:\"Quota exceeded\",123:\"No medium (in tape drive)\",125:\"Operation canceled\",130:\"Previous owner died\",131:\"State not recoverable\"};\n\n  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};\n\n  var _stdin=8439584;\n\n  var _stdout=8439600;\n\n  var _stderr=8439616;var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:function(e) {\n        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();\n        return ___setErrNo(e.errno);\n      },lookupPath:function(path, opts) {\n        path = PATH.resolve(FS.cwd(), path);\n        opts = opts || {};\n\n        if (!path) return { path: '', node: null };\n\n        var defaults = {\n          follow_mount: true,\n          recurse_count: 0\n        };\n        for (var key in defaults) {\n          if (opts[key] === undefined) {\n            opts[key] = defaults[key];\n          }\n        }\n\n        if (opts.recurse_count > 8) {  // max recursive lookup of 8\n          throw new FS.ErrnoError(40);\n        }\n\n        // split the path\n        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {\n          return !!p;\n        }), false);\n\n        // start at the root\n        var current = FS.root;\n        var current_path = '/';\n\n        for (var i = 0; i < parts.length; i++) {\n          var islast = (i === parts.length-1);\n          if (islast && opts.parent) {\n            // stop resolving\n            break;\n          }\n\n          current = FS.lookupNode(current, parts[i]);\n          current_path = PATH.join2(current_path, parts[i]);\n\n          // jump to the mount's root node if this is a mountpoint\n          if (FS.isMountpoint(current)) {\n            if (!islast || (islast && opts.follow_mount)) {\n              current = current.mounted.root;\n            }\n          }\n\n          // by default, lookupPath will not follow a symlink if it is the final path component.\n          // setting opts.follow = true will override this behavior.\n          if (!islast || opts.follow) {\n            var count = 0;\n            while (FS.isLink(current.mode)) {\n              var link = FS.readlink(current_path);\n              current_path = PATH.resolve(PATH.dirname(current_path), link);\n\n              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });\n              current = lookup.node;\n\n              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).\n                throw new FS.ErrnoError(40);\n              }\n            }\n          }\n        }\n\n        return { path: current_path, node: current };\n      },getPath:function(node) {\n        var path;\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;\n          }\n          path = path ? node.name + '/' + path : node.name;\n          node = node.parent;\n        }\n      },hashName:function(parentid, name) {\n        var hash = 0;\n\n\n        for (var i = 0; i < name.length; i++) {\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\n        }\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\n      },hashAddNode:function(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },hashRemoveNode:function(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n            current = current.name_next;\n          }\n        }\n      },lookupNode:function(parent, name) {\n        var err = FS.mayLookup(parent);\n        if (err) {\n          throw new FS.ErrnoError(err, parent);\n        }\n        var hash = FS.hashName(parent.id, name);\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n        // if we failed to find it in the cache, call into the VFS\n        return FS.lookup(parent, name);\n      },createNode:function(parent, name, mode, rdev) {\n        if (!FS.FSNode) {\n          FS.FSNode = function(parent, name, mode, rdev) {\n            if (!parent) {\n              parent = this;  // root node sets parent to itself\n            }\n            this.parent = parent;\n            this.mount = parent.mount;\n            this.mounted = null;\n            this.id = FS.nextInode++;\n            this.name = name;\n            this.mode = mode;\n            this.node_ops = {};\n            this.stream_ops = {};\n            this.rdev = rdev;\n          };\n\n          FS.FSNode.prototype = {};\n\n          // compatibility\n          var readMode = 292 | 73;\n          var writeMode = 146;\n\n          // NOTE we must use Object.defineProperties instead of individual calls to\n          // Object.defineProperty in order to make closure compiler happy\n          Object.defineProperties(FS.FSNode.prototype, {\n            read: {\n              get: function() { return (this.mode & readMode) === readMode; },\n              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }\n            },\n            write: {\n              get: function() { return (this.mode & writeMode) === writeMode; },\n              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }\n            },\n            isFolder: {\n              get: function() { return FS.isDir(this.mode); }\n            },\n            isDevice: {\n              get: function() { return FS.isChrdev(this.mode); }\n            }\n          });\n        }\n\n        var node = new FS.FSNode(parent, name, mode, rdev);\n\n        FS.hashAddNode(node);\n\n        return node;\n      },destroyNode:function(node) {\n        FS.hashRemoveNode(node);\n      },isRoot:function(node) {\n        return node === node.parent;\n      },isMountpoint:function(node) {\n        return !!node.mounted;\n      },isFile:function(mode) {\n        return (mode & 61440) === 32768;\n      },isDir:function(mode) {\n        return (mode & 61440) === 16384;\n      },isLink:function(mode) {\n        return (mode & 61440) === 40960;\n      },isChrdev:function(mode) {\n        return (mode & 61440) === 8192;\n      },isBlkdev:function(mode) {\n        return (mode & 61440) === 24576;\n      },isFIFO:function(mode) {\n        return (mode & 61440) === 4096;\n      },isSocket:function(mode) {\n        return (mode & 49152) === 49152;\n      },flagModes:{\"r\":0,\"rs\":1052672,\"r+\":2,\"w\":577,\"wx\":705,\"xw\":705,\"w+\":578,\"wx+\":706,\"xw+\":706,\"a\":1089,\"ax\":1217,\"xa\":1217,\"a+\":1090,\"ax+\":1218,\"xa+\":1218},modeStringToFlags:function(str) {\n        var flags = FS.flagModes[str];\n        if (typeof flags === 'undefined') {\n          throw new Error('Unknown file open mode: ' + str);\n        }\n        return flags;\n      },flagsToPermissionString:function(flag) {\n        var perms = ['r', 'w', 'rw'][flag & 3];\n        if ((flag & 512)) {\n          perms += 'w';\n        }\n        return perms;\n      },nodePermissions:function(node, perms) {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n        // return 0 if any user, group or owner bits are set.\n        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {\n          return 13;\n        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {\n          return 13;\n        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {\n          return 13;\n        }\n        return 0;\n      },mayLookup:function(dir) {\n        var err = FS.nodePermissions(dir, 'x');\n        if (err) return err;\n        if (!dir.node_ops.lookup) return 13;\n        return 0;\n      },mayCreate:function(dir, name) {\n        try {\n          var node = FS.lookupNode(dir, name);\n          return 17;\n        } catch (e) {\n        }\n        return FS.nodePermissions(dir, 'wx');\n      },mayDelete:function(dir, name, isdir) {\n        var node;\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n        var err = FS.nodePermissions(dir, 'wx');\n        if (err) {\n          return err;\n        }\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return 20;\n          }\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return 16;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return 21;\n          }\n        }\n        return 0;\n      },mayOpen:function(node, flags) {\n        if (!node) {\n          return 2;\n        }\n        if (FS.isLink(node.mode)) {\n          return 40;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== 'r' || // opening for write\n              (flags & 512)) { // TODO: check for O_SEARCH? (== search for dir only)\n            return 21;\n          }\n        }\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },MAX_OPEN_FDS:4096,nextfd:function(fd_start, fd_end) {\n        fd_start = fd_start || 0;\n        fd_end = fd_end || FS.MAX_OPEN_FDS;\n        for (var fd = fd_start; fd <= fd_end; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n        throw new FS.ErrnoError(24);\n      },getStream:function(fd) {\n        return FS.streams[fd];\n      },createStream:function(stream, fd_start, fd_end) {\n        if (!FS.FSStream) {\n          FS.FSStream = function(){};\n          FS.FSStream.prototype = {};\n          // compatibility\n          Object.defineProperties(FS.FSStream.prototype, {\n            object: {\n              get: function() { return this.node; },\n              set: function(val) { this.node = val; }\n            },\n            isRead: {\n              get: function() { return (this.flags & 2097155) !== 1; }\n            },\n            isWrite: {\n              get: function() { return (this.flags & 2097155) !== 0; }\n            },\n            isAppend: {\n              get: function() { return (this.flags & 1024); }\n            }\n          });\n        }\n        // clone it, so we can return an instance of FSStream\n        var newStream = new FS.FSStream();\n        for (var p in stream) {\n          newStream[p] = stream[p];\n        }\n        stream = newStream;\n        var fd = FS.nextfd(fd_start, fd_end);\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },closeStream:function(fd) {\n        FS.streams[fd] = null;\n      },chrdev_stream_ops:{open:function(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n          // override node's stream ops with the device's\n          stream.stream_ops = device.stream_ops;\n          // forward the open call\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n        },llseek:function() {\n          throw new FS.ErrnoError(29);\n        }},major:function(dev) {\n        return ((dev) >> 8);\n      },minor:function(dev) {\n        return ((dev) & 0xff);\n      },makedev:function(ma, mi) {\n        return ((ma) << 8 | (mi));\n      },registerDevice:function(dev, ops) {\n        FS.devices[dev] = { stream_ops: ops };\n      },getDevice:function(dev) {\n        return FS.devices[dev];\n      },getMounts:function(mount) {\n        var mounts = [];\n        var check = [mount];\n\n        while (check.length) {\n          var m = check.pop();\n\n          mounts.push(m);\n\n          check.push.apply(check, m.mounts);\n        }\n\n        return mounts;\n      },syncfs:function(populate, callback) {\n        if (typeof(populate) === 'function') {\n          callback = populate;\n          populate = false;\n        }\n\n        FS.syncFSRequests++;\n\n        if (FS.syncFSRequests > 1) {\n          console.log('warning: ' + FS.syncFSRequests + ' FS.syncfs operations in flight at once, probably just doing extra work');\n        }\n\n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n\n        function doCallback(err) {\n          assert(FS.syncFSRequests > 0);\n          FS.syncFSRequests--;\n          return callback(err);\n        }\n\n        function done(err) {\n          if (err) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(err);\n            }\n            return;\n          }\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        };\n\n        // sync all mounts\n        mounts.forEach(function (mount) {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n          mount.type.syncfs(mount, populate, done);\n        });\n      },mount:function(type, opts, mountpoint) {\n        var root = mountpoint === '/';\n        var pseudo = !mountpoint;\n        var node;\n\n        if (root && FS.root) {\n          throw new FS.ErrnoError(16);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n\n          mountpoint = lookup.path;  // use the absolute path\n          node = lookup.node;\n\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(16);\n          }\n\n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(20);\n          }\n        }\n\n        var mount = {\n          type: type,\n          opts: opts,\n          mountpoint: mountpoint,\n          mounts: []\n        };\n\n        // create a root node for the fs\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n\n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          // set as a mountpoint\n          node.mounted = mount;\n\n          // add the new mount to the current mount's children\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n\n        return mountRoot;\n      },unmount:function (mountpoint) {\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n\n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(22);\n        }\n\n        // destroy the nodes for this mount, and all its child mounts\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n\n        Object.keys(FS.nameTable).forEach(function (hash) {\n          var current = FS.nameTable[hash];\n\n          while (current) {\n            var next = current.name_next;\n\n            if (mounts.indexOf(current.mount) !== -1) {\n              FS.destroyNode(current);\n            }\n\n            current = next;\n          }\n        });\n\n        // no longer a mountpoint\n        node.mounted = null;\n\n        // remove this mount from the child mounts\n        var idx = node.mount.mounts.indexOf(mount);\n        assert(idx !== -1);\n        node.mount.mounts.splice(idx, 1);\n      },lookup:function(parent, name) {\n        return parent.node_ops.lookup(parent, name);\n      },mknod:function(path, mode, dev) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        if (!name || name === '.' || name === '..') {\n          throw new FS.ErrnoError(22);\n        }\n        var err = FS.mayCreate(parent, name);\n        if (err) {\n          throw new FS.ErrnoError(err);\n        }\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(1);\n        }\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },create:function(path, mode) {\n        mode = mode !== undefined ? mode : 438 /* 0666 */;\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },mkdir:function(path, mode) {\n        mode = mode !== undefined ? mode : 511 /* 0777 */;\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },mkdirTree:function(path, mode) {\n        var dirs = path.split('/');\n        var d = '';\n        for (var i = 0; i < dirs.length; ++i) {\n          if (!dirs[i]) continue;\n          d += '/' + dirs[i];\n          try {\n            FS.mkdir(d, mode);\n          } catch(e) {\n            if (e.errno != 17) throw e;\n          }\n        }\n      },mkdev:function(path, mode, dev) {\n        if (typeof(dev) === 'undefined') {\n          dev = mode;\n          mode = 438 /* 0666 */;\n        }\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },symlink:function(oldpath, newpath) {\n        if (!PATH.resolve(oldpath)) {\n          throw new FS.ErrnoError(2);\n        }\n        var lookup = FS.lookupPath(newpath, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(2);\n        }\n        var newname = PATH.basename(newpath);\n        var err = FS.mayCreate(parent, newname);\n        if (err) {\n          throw new FS.ErrnoError(err);\n        }\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(1);\n        }\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },rename:function(old_path, new_path) {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n        // parents must exist\n        var lookup, old_dir, new_dir;\n        try {\n          lookup = FS.lookupPath(old_path, { parent: true });\n          old_dir = lookup.node;\n          lookup = FS.lookupPath(new_path, { parent: true });\n          new_dir = lookup.node;\n        } catch (e) {\n          throw new FS.ErrnoError(16);\n        }\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(2);\n        // need to be part of the same mount\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(18);\n        }\n        // source must exist\n        var old_node = FS.lookupNode(old_dir, old_name);\n        // old path should not be an ancestor of the new path\n        var relative = PATH.relative(old_path, new_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(22);\n        }\n        // new path should not be an ancestor of the old path\n        relative = PATH.relative(new_path, old_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(39);\n        }\n        // see if the new path already exists\n        var new_node;\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {\n          // not fatal\n        }\n        // early out if nothing needs to change\n        if (old_node === new_node) {\n          return;\n        }\n        // we'll need to delete the old entry\n        var isdir = FS.isDir(old_node.mode);\n        var err = FS.mayDelete(old_dir, old_name, isdir);\n        if (err) {\n          throw new FS.ErrnoError(err);\n        }\n        // need delete permissions if we'll be overwriting.\n        // need create permissions if new doesn't already exist.\n        err = new_node ?\n          FS.mayDelete(new_dir, new_name, isdir) :\n          FS.mayCreate(new_dir, new_name);\n        if (err) {\n          throw new FS.ErrnoError(err);\n        }\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(1);\n        }\n        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {\n          throw new FS.ErrnoError(16);\n        }\n        // if we are going to change the parent, check write permissions\n        if (new_dir !== old_dir) {\n          err = FS.nodePermissions(old_dir, 'w');\n          if (err) {\n            throw new FS.ErrnoError(err);\n          }\n        }\n        try {\n          if (FS.trackingDelegate['willMovePath']) {\n            FS.trackingDelegate['willMovePath'](old_path, new_path);\n          }\n        } catch(e) {\n          console.log(\"FS.trackingDelegate['willMovePath']('\"+old_path+\"', '\"+new_path+\"') threw an exception: \" + e.message);\n        }\n        // remove the node from the lookup hash\n        FS.hashRemoveNode(old_node);\n        // do the underlying fs rename\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n        } catch (e) {\n          throw e;\n        } finally {\n          // add the node back to the hash (in case node_ops.rename\n          // changed its name)\n          FS.hashAddNode(old_node);\n        }\n        try {\n          if (FS.trackingDelegate['onMovePath']) FS.trackingDelegate['onMovePath'](old_path, new_path);\n        } catch(e) {\n          console.log(\"FS.trackingDelegate['onMovePath']('\"+old_path+\"', '\"+new_path+\"') threw an exception: \" + e.message);\n        }\n      },rmdir:function(path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var err = FS.mayDelete(parent, name, true);\n        if (err) {\n          throw new FS.ErrnoError(err);\n        }\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(1);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(16);\n        }\n        try {\n          if (FS.trackingDelegate['willDeletePath']) {\n            FS.trackingDelegate['willDeletePath'](path);\n          }\n        } catch(e) {\n          console.log(\"FS.trackingDelegate['willDeletePath']('\"+path+\"') threw an exception: \" + e.message);\n        }\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n        try {\n          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);\n        } catch(e) {\n          console.log(\"FS.trackingDelegate['onDeletePath']('\"+path+\"') threw an exception: \" + e.message);\n        }\n      },readdir:function(path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node.node_ops.readdir) {\n          throw new FS.ErrnoError(20);\n        }\n        return node.node_ops.readdir(node);\n      },unlink:function(path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var err = FS.mayDelete(parent, name, false);\n        if (err) {\n          // According to POSIX, we should map EISDIR to EPERM, but\n          // we instead do what Linux does (and we must, as we use\n          // the musl linux libc).\n          throw new FS.ErrnoError(err);\n        }\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(1);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(16);\n        }\n        try {\n          if (FS.trackingDelegate['willDeletePath']) {\n            FS.trackingDelegate['willDeletePath'](path);\n          }\n        } catch(e) {\n          console.log(\"FS.trackingDelegate['willDeletePath']('\"+path+\"') threw an exception: \" + e.message);\n        }\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n        try {\n          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);\n        } catch(e) {\n          console.log(\"FS.trackingDelegate['onDeletePath']('\"+path+\"') threw an exception: \" + e.message);\n        }\n      },readlink:function(path) {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n        if (!link) {\n          throw new FS.ErrnoError(2);\n        }\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(22);\n        }\n        return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n      },stat:function(path, dontFollow) {\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\n        var node = lookup.node;\n        if (!node) {\n          throw new FS.ErrnoError(2);\n        }\n        if (!node.node_ops.getattr) {\n          throw new FS.ErrnoError(1);\n        }\n        return node.node_ops.getattr(node);\n      },lstat:function(path) {\n        return FS.stat(path, true);\n      },chmod:function(path, mode, dontFollow) {\n        var node;\n        if (typeof path === 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(1);\n        }\n        node.node_ops.setattr(node, {\n          mode: (mode & 4095) | (node.mode & ~4095),\n          timestamp: Date.now()\n        });\n      },lchmod:function(path, mode) {\n        FS.chmod(path, mode, true);\n      },fchmod:function(fd, mode) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(9);\n        }\n        FS.chmod(stream.node, mode);\n      },chown:function(path, uid, gid, dontFollow) {\n        var node;\n        if (typeof path === 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(1);\n        }\n        node.node_ops.setattr(node, {\n          timestamp: Date.now()\n          // we ignore the uid / gid for now\n        });\n      },lchown:function(path, uid, gid) {\n        FS.chown(path, uid, gid, true);\n      },fchown:function(fd, uid, gid) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(9);\n        }\n        FS.chown(stream.node, uid, gid);\n      },truncate:function(path, len) {\n        if (len < 0) {\n          throw new FS.ErrnoError(22);\n        }\n        var node;\n        if (typeof path === 'string') {\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(1);\n        }\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(21);\n        }\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(22);\n        }\n        var err = FS.nodePermissions(node, 'w');\n        if (err) {\n          throw new FS.ErrnoError(err);\n        }\n        node.node_ops.setattr(node, {\n          size: len,\n          timestamp: Date.now()\n        });\n      },ftruncate:function(fd, len) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(9);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(22);\n        }\n        FS.truncate(stream.node, len);\n      },utime:function(path, atime, mtime) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        node.node_ops.setattr(node, {\n          timestamp: Math.max(atime, mtime)\n        });\n      },open:function(path, flags, mode, fd_start, fd_end) {\n        if (path === \"\") {\n          throw new FS.ErrnoError(2);\n        }\n        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;\n        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;\n        if ((flags & 64)) {\n          mode = (mode & 4095) | 32768;\n        } else {\n          mode = 0;\n        }\n        var node;\n        if (typeof path === 'object') {\n          node = path;\n        } else {\n          path = PATH.normalize(path);\n          try {\n            var lookup = FS.lookupPath(path, {\n              follow: !(flags & 131072)\n            });\n            node = lookup.node;\n          } catch (e) {\n            // ignore\n          }\n        }\n        // perhaps we need to create the node\n        var created = false;\n        if ((flags & 64)) {\n          if (node) {\n            // if O_CREAT and O_EXCL are set, error out if the node already exists\n            if ((flags & 128)) {\n              throw new FS.ErrnoError(17);\n            }\n          } else {\n            // node doesn't exist, try to create it\n            node = FS.mknod(path, mode, 0);\n            created = true;\n          }\n        }\n        if (!node) {\n          throw new FS.ErrnoError(2);\n        }\n        // can't truncate a device\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n        // if asked only for a directory, then this must be one\n        if ((flags & 65536) && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(20);\n        }\n        // check permissions, if this is not a file we just created now (it is ok to\n        // create and write to a file with read-only permissions; it is read-only\n        // for later use)\n        if (!created) {\n          var err = FS.mayOpen(node, flags);\n          if (err) {\n            throw new FS.ErrnoError(err);\n          }\n        }\n        // do truncation if necessary\n        if ((flags & 512)) {\n          FS.truncate(node, 0);\n        }\n        // we've already handled these, don't pass down to the underlying vfs\n        flags &= ~(128 | 512);\n\n        // register the stream with the filesystem\n        var stream = FS.createStream({\n          node: node,\n          path: FS.getPath(node),  // we want the absolute path to the node\n          flags: flags,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n          // used by the file family libc calls (fopen, fwrite, ferror, etc.)\n          ungotten: [],\n          error: false\n        }, fd_start, fd_end);\n        // call the new stream's open function\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n        if (Module['logReadFiles'] && !(flags & 1)) {\n          if (!FS.readFiles) FS.readFiles = {};\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n            console.log(\"FS.trackingDelegate error on read file: \" + path);\n          }\n        }\n        try {\n          if (FS.trackingDelegate['onOpenFile']) {\n            var trackingFlags = 0;\n            if ((flags & 2097155) !== 1) {\n              trackingFlags |= FS.tracking.openFlags.READ;\n            }\n            if ((flags & 2097155) !== 0) {\n              trackingFlags |= FS.tracking.openFlags.WRITE;\n            }\n            FS.trackingDelegate['onOpenFile'](path, trackingFlags);\n          }\n        } catch(e) {\n          console.log(\"FS.trackingDelegate['onOpenFile']('\"+path+\"', flags) threw an exception: \" + e.message);\n        }\n        return stream;\n      },close:function(stream) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(9);\n        }\n        if (stream.getdents) stream.getdents = null; // free readdir state\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n        stream.fd = null;\n      },isClosed:function(stream) {\n        return stream.fd === null;\n      },llseek:function(stream, offset, whence) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(9);\n        }\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(29);\n        }\n        if (whence != 0 /* SEEK_SET */ && whence != 1 /* SEEK_CUR */ && whence != 2 /* SEEK_END */) {\n          throw new FS.ErrnoError(22);\n        }\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },read:function(stream, buffer, offset, length, position) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(22);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(9);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(9);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(21);\n        }\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(22);\n        }\n        var seeking = typeof position !== 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(29);\n        }\n        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },write:function(stream, buffer, offset, length, position, canOwn) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(22);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(9);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(9);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(21);\n        }\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(22);\n        }\n        if (stream.flags & 1024) {\n          // seek to the end before writing in append mode\n          FS.llseek(stream, 0, 2);\n        }\n        var seeking = typeof position !== 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(29);\n        }\n        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\n        if (!seeking) stream.position += bytesWritten;\n        try {\n          if (stream.path && FS.trackingDelegate['onWriteToFile']) FS.trackingDelegate['onWriteToFile'](stream.path);\n        } catch(e) {\n          console.log(\"FS.trackingDelegate['onWriteToFile']('\"+stream.path+\"') threw an exception: \" + e.message);\n        }\n        return bytesWritten;\n      },allocate:function(stream, offset, length) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(9);\n        }\n        if (offset < 0 || length <= 0) {\n          throw new FS.ErrnoError(22);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(9);\n        }\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(19);\n        }\n        if (!stream.stream_ops.allocate) {\n          throw new FS.ErrnoError(95);\n        }\n        stream.stream_ops.allocate(stream, offset, length);\n      },mmap:function(stream, buffer, offset, length, position, prot, flags) {\n        // TODO if PROT is PROT_WRITE, make sure we have write access\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(13);\n        }\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(19);\n        }\n        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);\n      },msync:function(stream, buffer, offset, length, mmapFlags) {\n        if (!stream || !stream.stream_ops.msync) {\n          return 0;\n        }\n        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\n      },munmap:function(stream) {\n        return 0;\n      },ioctl:function(stream, cmd, arg) {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(25);\n        }\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },readFile:function(path, opts) {\n        opts = opts || {};\n        opts.flags = opts.flags || 'r';\n        opts.encoding = opts.encoding || 'binary';\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\n          throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n        }\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n        if (opts.encoding === 'utf8') {\n          ret = UTF8ArrayToString(buf, 0);\n        } else if (opts.encoding === 'binary') {\n          ret = buf;\n        }\n        FS.close(stream);\n        return ret;\n      },writeFile:function(path, data, opts) {\n        opts = opts || {};\n        opts.flags = opts.flags || 'w';\n        var stream = FS.open(path, opts.flags, opts.mode);\n        if (typeof data === 'string') {\n          var buf = new Uint8Array(lengthBytesUTF8(data)+1);\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n        } else if (ArrayBuffer.isView(data)) {\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        } else {\n          throw new Error('Unsupported data type');\n        }\n        FS.close(stream);\n      },cwd:function() {\n        return FS.currentPath;\n      },chdir:function(path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(2);\n        }\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(20);\n        }\n        var err = FS.nodePermissions(lookup.node, 'x');\n        if (err) {\n          throw new FS.ErrnoError(err);\n        }\n        FS.currentPath = lookup.path;\n      },createDefaultDirectories:function() {\n        FS.mkdir('/tmp');\n        FS.mkdir('/home');\n        FS.mkdir('/home/web_user');\n      },createDefaultDevices:function() {\n        // create /dev\n        FS.mkdir('/dev');\n        // setup /dev/null\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: function() { return 0; },\n          write: function(stream, buffer, offset, length, pos) { return length; }\n        });\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\n        // setup /dev/tty and /dev/tty1\n        // stderr needs to print output using Module['printErr']\n        // so we register a second tty just for it.\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\n        // setup /dev/[u]random\n        var random_device;\n        if (typeof crypto === 'object' && typeof crypto['getRandomValues'] === 'function') {\n          // for modern web browsers\n          var randomBuffer = new Uint8Array(1);\n          random_device = function() { crypto.getRandomValues(randomBuffer); return randomBuffer[0]; };\n        } else\n        if (ENVIRONMENT_IS_NODE) {\n          // for nodejs with or without crypto support included\n          try {\n              var crypto_module = require('crypto');\n              // nodejs has crypto support\n              random_device = function() { return crypto_module['randomBytes'](1)[0]; };\n          } catch (e) {\n              // nodejs doesn't have crypto support so fallback to Math.random\n              random_device = function() { return (Math.random()*256)|0; };\n          }\n        } else\n        {\n          // default for ES5 platforms\n          random_device = function() { abort(\"random_device\"); /*Math.random() is not safe for random number generation, so this fallback random_device implementation aborts... see emscripten-core/emscripten/pull/7096 */ };\n        }\n        FS.createDevice('/dev', 'random', random_device);\n        FS.createDevice('/dev', 'urandom', random_device);\n        // we're not going to emulate the actual shm device,\n        // just create the tmp dirs that reside in it commonly\n        FS.mkdir('/dev/shm');\n        FS.mkdir('/dev/shm/tmp');\n      },createSpecialDirectories:function() {\n        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the name of the stream for fd 6 (see test_unistd_ttyname)\n        FS.mkdir('/proc');\n        FS.mkdir('/proc/self');\n        FS.mkdir('/proc/self/fd');\n        FS.mount({\n          mount: function() {\n            var node = FS.createNode('/proc/self', 'fd', 16384 | 511 /* 0777 */, 73);\n            node.node_ops = {\n              lookup: function(parent, name) {\n                var fd = +name;\n                var stream = FS.getStream(fd);\n                if (!stream) throw new FS.ErrnoError(9);\n                var ret = {\n                  parent: null,\n                  mount: { mountpoint: 'fake' },\n                  node_ops: { readlink: function() { return stream.path } }\n                };\n                ret.parent = ret; // make it look like a simple root node\n                return ret;\n              }\n            };\n            return node;\n          }\n        }, {}, '/proc/self/fd');\n      },createStandardStreams:function() {\n        // TODO deprecate the old functionality of a single\n        // input / output callback and that utilizes FS.createDevice\n        // and instead require a unique set of stream ops\n\n        // by default, we symlink the standard streams to the\n        // default tty devices. however, if the standard streams\n        // have been overwritten we create a unique device for\n        // them instead.\n        if (Module['stdin']) {\n          FS.createDevice('/dev', 'stdin', Module['stdin']);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdin');\n        }\n        if (Module['stdout']) {\n          FS.createDevice('/dev', 'stdout', null, Module['stdout']);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdout');\n        }\n        if (Module['stderr']) {\n          FS.createDevice('/dev', 'stderr', null, Module['stderr']);\n        } else {\n          FS.symlink('/dev/tty1', '/dev/stderr');\n        }\n\n        // open default streams for the stdin, stdout and stderr devices\n        var stdin = FS.open('/dev/stdin', 'r');\n        var stdout = FS.open('/dev/stdout', 'w');\n        var stderr = FS.open('/dev/stderr', 'w');\n        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');\n        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');\n        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');\n      },ensureErrnoError:function() {\n        if (FS.ErrnoError) return;\n        FS.ErrnoError = function ErrnoError(errno, node) {\n          this.node = node;\n          this.setErrno = function(errno) {\n            this.errno = errno;\n            for (var key in ERRNO_CODES) {\n              if (ERRNO_CODES[key] === errno) {\n                this.code = key;\n                break;\n              }\n            }\n          };\n          this.setErrno(errno);\n          this.message = ERRNO_MESSAGES[errno];\n          // Node.js compatibility: assigning on this.stack fails on Node 4 (but fixed on Node 8)\n          if (this.stack) Object.defineProperty(this, \"stack\", { value: (new Error).stack, writable: true });\n          if (this.stack) this.stack = demangleAll(this.stack);\n        };\n        FS.ErrnoError.prototype = new Error();\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)\n        [2].forEach(function(code) {\n          FS.genericErrors[code] = new FS.ErrnoError(code);\n          FS.genericErrors[code].stack = '<generic error, no stack>';\n        });\n      },staticInit:function() {\n        FS.ensureErrnoError();\n\n        FS.nameTable = new Array(4096);\n\n        FS.mount(MEMFS, {}, '/');\n\n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n\n        FS.filesystems = {\n          'MEMFS': MEMFS,\n          'IDBFS': IDBFS,\n          'NODEFS': NODEFS,\n          'WORKERFS': WORKERFS,\n        };\n      },init:function(input, output, error) {\n        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');\n        FS.init.initialized = true;\n\n        FS.ensureErrnoError();\n\n        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here\n        Module['stdin'] = input || Module['stdin'];\n        Module['stdout'] = output || Module['stdout'];\n        Module['stderr'] = error || Module['stderr'];\n\n        FS.createStandardStreams();\n      },quit:function() {\n        FS.init.initialized = false;\n        // force-flush all streams, so we get musl std streams printed out\n        var fflush = Module['_fflush'];\n        if (fflush) fflush(0);\n        // close all of our streams\n        for (var i = 0; i < FS.streams.length; i++) {\n          var stream = FS.streams[i];\n          if (!stream) {\n            continue;\n          }\n          FS.close(stream);\n        }\n      },getMode:function(canRead, canWrite) {\n        var mode = 0;\n        if (canRead) mode |= 292 | 73;\n        if (canWrite) mode |= 146;\n        return mode;\n      },joinPath:function(parts, forceRelative) {\n        var path = PATH.join.apply(null, parts);\n        if (forceRelative && path[0] == '/') path = path.substr(1);\n        return path;\n      },absolutePath:function(relative, base) {\n        return PATH.resolve(base, relative);\n      },standardizePath:function(path) {\n        return PATH.normalize(path);\n      },findObject:function(path, dontResolveLastLink) {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n        if (ret.exists) {\n          return ret.object;\n        } else {\n          ___setErrNo(ret.error);\n          return null;\n        }\n      },analyzePath:function(path, dontResolveLastLink) {\n        // operate from within the context of the symlink's target\n        try {\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          path = lookup.path;\n        } catch (e) {\n        }\n        var ret = {\n          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,\n          parentExists: false, parentPath: null, parentObject: null\n        };\n        try {\n          var lookup = FS.lookupPath(path, { parent: true });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === '/';\n        } catch (e) {\n          ret.error = e.errno;\n        };\n        return ret;\n      },createFolder:function(parent, name, canRead, canWrite) {\n        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);\n        var mode = FS.getMode(canRead, canWrite);\n        return FS.mkdir(path, mode);\n      },createPath:function(parent, path, canRead, canWrite) {\n        parent = typeof parent === 'string' ? parent : FS.getPath(parent);\n        var parts = path.split('/').reverse();\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n          try {\n            FS.mkdir(current);\n          } catch (e) {\n            // ignore EEXIST\n          }\n          parent = current;\n        }\n        return current;\n      },createFile:function(parent, name, properties, canRead, canWrite) {\n        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);\n        var mode = FS.getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },createDataFile:function(parent, name, data, canRead, canWrite, canOwn) {\n        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;\n        var mode = FS.getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n        if (data) {\n          if (typeof data === 'string') {\n            var arr = new Array(data.length);\n            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\n            data = arr;\n          }\n          // make sure we can write to the file\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, 'w');\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n        return node;\n      },createDevice:function(parent, name, input, output) {\n        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);\n        var mode = FS.getMode(!!input, !!output);\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n        // Create a fake device that a set of stream ops to emulate\n        // the old behavior.\n        FS.registerDevice(dev, {\n          open: function(stream) {\n            stream.seekable = false;\n          },\n          close: function(stream) {\n            // flush any pending line data\n            if (output && output.buffer && output.buffer.length) {\n              output(10);\n            }\n          },\n          read: function(stream, buffer, offset, length, pos /* ignored */) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(5);\n              }\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(11);\n              }\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset+i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          },\n          write: function(stream, buffer, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset+i]);\n              } catch (e) {\n                throw new FS.ErrnoError(5);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          }\n        });\n        return FS.mkdev(path, mode, dev);\n      },createLink:function(parent, name, target, canRead, canWrite) {\n        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);\n        return FS.symlink(target, path);\n      },forceLoadFile:function(obj) {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\n        var success = true;\n        if (typeof XMLHttpRequest !== 'undefined') {\n          throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n        } else if (Module['read']) {\n          // Command-line.\n          try {\n            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as\n            //          read() will try to parse UTF8.\n            obj.contents = intArrayFromString(Module['read'](obj.url), true);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            success = false;\n          }\n        } else {\n          throw new Error('Cannot load without read() or XMLHttpRequest.');\n        }\n        if (!success) ___setErrNo(5);\n        return success;\n      },createLazyFile:function(parent, name, url, canRead, canWrite) {\n        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.\n        function LazyUint8Array() {\n          this.lengthKnown = false;\n          this.chunks = []; // Loaded chunks. Index is the chunk number\n        }\n        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n          if (idx > this.length-1 || idx < 0) {\n            return undefined;\n          }\n          var chunkOffset = idx % this.chunkSize;\n          var chunkNum = (idx / this.chunkSize)|0;\n          return this.getter(chunkNum)[chunkOffset];\n        }\n        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n          this.getter = getter;\n        }\n        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n          // Find length\n          var xhr = new XMLHttpRequest();\n          xhr.open('HEAD', url, false);\n          xhr.send(null);\n          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n          var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n          var header;\n          var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n          var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n\n          var chunkSize = 1024*1024; // Chunk size in bytes\n\n          if (!hasByteServing) chunkSize = datalength;\n\n          // Function to get a range from the remote URL.\n          var doXHR = (function(from, to) {\n            if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n            if (to > datalength-1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n\n            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', url, false);\n            if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n\n            // Some hints to the browser that we want binary data.\n            if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';\n            if (xhr.overrideMimeType) {\n              xhr.overrideMimeType('text/plain; charset=x-user-defined');\n            }\n\n            xhr.send(null);\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n            if (xhr.response !== undefined) {\n              return new Uint8Array(xhr.response || []);\n            } else {\n              return intArrayFromString(xhr.responseText || '', true);\n            }\n          });\n          var lazyArray = this;\n          lazyArray.setDataGetter(function(chunkNum) {\n            var start = chunkNum * chunkSize;\n            var end = (chunkNum+1) * chunkSize - 1; // including this byte\n            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block\n            if (typeof(lazyArray.chunks[chunkNum]) === \"undefined\") {\n              lazyArray.chunks[chunkNum] = doXHR(start, end);\n            }\n            if (typeof(lazyArray.chunks[chunkNum]) === \"undefined\") throw new Error(\"doXHR failed!\");\n            return lazyArray.chunks[chunkNum];\n          });\n\n          if (usesGzip || !datalength) {\n            // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length\n            chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file\n            datalength = this.getter(0).length;\n            chunkSize = datalength;\n            console.log(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n          }\n\n          this._length = datalength;\n          this._chunkSize = chunkSize;\n          this.lengthKnown = true;\n        }\n        if (typeof XMLHttpRequest !== 'undefined') {\n          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\n          var lazyArray = new LazyUint8Array();\n          Object.defineProperties(lazyArray, {\n            length: {\n              get: function() {\n                if(!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._length;\n              }\n            },\n            chunkSize: {\n              get: function() {\n                if(!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._chunkSize;\n              }\n            }\n          });\n\n          var properties = { isDevice: false, contents: lazyArray };\n        } else {\n          var properties = { isDevice: false, url: url };\n        }\n\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n        // This is a total hack, but I want to get this lazy file code out of the\n        // core of MEMFS. If we want to keep this lazy file concept I feel it should\n        // be its own thin LAZYFS proxying calls to MEMFS.\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n        // Add a function that defers querying the file size until it is asked the first time.\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: function() { return this.contents.length; }\n          }\n        });\n        // override each stream op with one that tries to force load the lazy file first\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach(function(key) {\n          var fn = node.stream_ops[key];\n          stream_ops[key] = function forceLoadLazyFile() {\n            if (!FS.forceLoadFile(node)) {\n              throw new FS.ErrnoError(5);\n            }\n            return fn.apply(null, arguments);\n          };\n        });\n        // use a custom read function\n        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {\n          if (!FS.forceLoadFile(node)) {\n            throw new FS.ErrnoError(5);\n          }\n          var contents = stream.node.contents;\n          if (position >= contents.length)\n            return 0;\n          var size = Math.min(contents.length - position, length);\n          assert(size >= 0);\n          if (contents.slice) { // normal array\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n          return size;\n        };\n        node.stream_ops = stream_ops;\n        return node;\n      },createPreloadedFile:function(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {\n        Browser.init(); // XXX perhaps this method should move onto Browser?\n        // TODO we should allow people to just pass in a complete filename instead\n        // of parent and name being that we just join them anyways\n        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;\n        var dep = getUniqueRunDependency('cp ' + fullname); // might have several active requests for the same fullname\n        function processData(byteArray) {\n          function finish(byteArray) {\n            if (preFinish) preFinish();\n            if (!dontCreateFile) {\n              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\n            }\n            if (onload) onload();\n            removeRunDependency(dep);\n          }\n          var handled = false;\n          Module['preloadPlugins'].forEach(function(plugin) {\n            if (handled) return;\n            if (plugin['canHandle'](fullname)) {\n              plugin['handle'](byteArray, fullname, finish, function() {\n                if (onerror) onerror();\n                removeRunDependency(dep);\n              });\n              handled = true;\n            }\n          });\n          if (!handled) finish(byteArray);\n        }\n        addRunDependency(dep);\n        if (typeof url == 'string') {\n          Browser.asyncLoad(url, function(byteArray) {\n            processData(byteArray);\n          }, onerror);\n        } else {\n          processData(url);\n        }\n      },indexedDB:function() {\n        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n      },DB_NAME:function() {\n        return 'EM_FS_' + window.location.pathname;\n      },DB_VERSION:20,DB_STORE_NAME:\"FILE_DATA\",saveFilesToDB:function(paths, onload, onerror) {\n        onload = onload || function(){};\n        onerror = onerror || function(){};\n        var indexedDB = FS.indexedDB();\n        try {\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        } catch (e) {\n          return onerror(e);\n        }\n        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {\n          console.log('creating db');\n          var db = openRequest.result;\n          db.createObjectStore(FS.DB_STORE_NAME);\n        };\n        openRequest.onsuccess = function openRequest_onsuccess() {\n          var db = openRequest.result;\n          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\n          var ok = 0, fail = 0, total = paths.length;\n          function finish() {\n            if (fail == 0) onload(); else onerror();\n          }\n          paths.forEach(function(path) {\n            var putRequest = files.put(FS.analyzePath(path).object.contents, path);\n            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };\n            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };\n          });\n          transaction.onerror = onerror;\n        };\n        openRequest.onerror = onerror;\n      },loadFilesFromDB:function(paths, onload, onerror) {\n        onload = onload || function(){};\n        onerror = onerror || function(){};\n        var indexedDB = FS.indexedDB();\n        try {\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        } catch (e) {\n          return onerror(e);\n        }\n        openRequest.onupgradeneeded = onerror; // no database to load from\n        openRequest.onsuccess = function openRequest_onsuccess() {\n          var db = openRequest.result;\n          try {\n            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');\n          } catch(e) {\n            onerror(e);\n            return;\n          }\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\n          var ok = 0, fail = 0, total = paths.length;\n          function finish() {\n            if (fail == 0) onload(); else onerror();\n          }\n          paths.forEach(function(path) {\n            var getRequest = files.get(path);\n            getRequest.onsuccess = function getRequest_onsuccess() {\n              if (FS.analyzePath(path).exists) {\n                FS.unlink(path);\n              }\n              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\n              ok++;\n              if (ok + fail == total) finish();\n            };\n            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };\n          });\n          transaction.onerror = onerror;\n        };\n        openRequest.onerror = onerror;\n      }};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function(dirfd, path) {\n        if (path[0] !== '/') {\n          // relative path\n          var dir;\n          if (dirfd === -100) {\n            dir = FS.cwd();\n          } else {\n            var dirstream = FS.getStream(dirfd);\n            if (!dirstream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);\n            dir = dirstream.path;\n          }\n          path = PATH.join2(dir, path);\n        }\n        return path;\n      },doStat:function(func, path, buf) {\n        try {\n          var stat = func(path);\n        } catch (e) {\n          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n            // an error occurred while trying to look up the path; we should just report ENOTDIR\n            return -ERRNO_CODES.ENOTDIR;\n          }\n          throw e;\n        }\n        HEAP32[((buf)>>2)]=stat.dev;\n        HEAP32[(((buf)+(4))>>2)]=0;\n        HEAP32[(((buf)+(8))>>2)]=stat.ino;\n        HEAP32[(((buf)+(12))>>2)]=stat.mode;\n        HEAP32[(((buf)+(16))>>2)]=stat.nlink;\n        HEAP32[(((buf)+(20))>>2)]=stat.uid;\n        HEAP32[(((buf)+(24))>>2)]=stat.gid;\n        HEAP32[(((buf)+(28))>>2)]=stat.rdev;\n        HEAP32[(((buf)+(32))>>2)]=0;\n        HEAP32[(((buf)+(36))>>2)]=stat.size;\n        HEAP32[(((buf)+(40))>>2)]=4096;\n        HEAP32[(((buf)+(44))>>2)]=stat.blocks;\n        HEAP32[(((buf)+(48))>>2)]=(stat.atime.getTime() / 1000)|0;\n        HEAP32[(((buf)+(52))>>2)]=0;\n        HEAP32[(((buf)+(56))>>2)]=(stat.mtime.getTime() / 1000)|0;\n        HEAP32[(((buf)+(60))>>2)]=0;\n        HEAP32[(((buf)+(64))>>2)]=(stat.ctime.getTime() / 1000)|0;\n        HEAP32[(((buf)+(68))>>2)]=0;\n        HEAP32[(((buf)+(72))>>2)]=stat.ino;\n        return 0;\n      },doMsync:function(addr, stream, len, flags) {\n        var buffer = new Uint8Array(HEAPU8.subarray(addr, addr + len));\n        FS.msync(stream, buffer, 0, len, flags);\n      },doMkdir:function(path, mode) {\n        // remove a trailing slash, if one - /a/b/ has basename of '', but\n        // we want to create b in the context of this function\n        path = PATH.normalize(path);\n        if (path[path.length-1] === '/') path = path.substr(0, path.length-1);\n        FS.mkdir(path, mode, 0);\n        return 0;\n      },doMknod:function(path, mode, dev) {\n        // we don't want this in the JS API as it uses mknod to create all nodes.\n        switch (mode & 61440) {\n          case 32768:\n          case 8192:\n          case 24576:\n          case 4096:\n          case 49152:\n            break;\n          default: return -ERRNO_CODES.EINVAL;\n        }\n        FS.mknod(path, mode, dev);\n        return 0;\n      },doReadlink:function(path, buf, bufsize) {\n        if (bufsize <= 0) return -ERRNO_CODES.EINVAL;\n        var ret = FS.readlink(path);\n\n        var len = Math.min(bufsize, lengthBytesUTF8(ret));\n        var endChar = HEAP8[buf+len];\n        stringToUTF8(ret, buf, bufsize+1);\n        // readlink is one of the rare functions that write out a C string, but does never append a null to the output buffer(!)\n        // stringToUTF8() always appends a null byte, so restore the character under the null byte after the write.\n        HEAP8[buf+len] = endChar;\n\n        return len;\n      },doAccess:function(path, amode) {\n        if (amode & ~7) {\n          // need a valid mode\n          return -ERRNO_CODES.EINVAL;\n        }\n        var node;\n        var lookup = FS.lookupPath(path, { follow: true });\n        node = lookup.node;\n        var perms = '';\n        if (amode & 4) perms += 'r';\n        if (amode & 2) perms += 'w';\n        if (amode & 1) perms += 'x';\n        if (perms /* otherwise, they've just passed F_OK */ && FS.nodePermissions(node, perms)) {\n          return -ERRNO_CODES.EACCES;\n        }\n        return 0;\n      },doDup:function(path, flags, suggestFD) {\n        var suggest = FS.getStream(suggestFD);\n        if (suggest) FS.close(suggest);\n        return FS.open(path, flags, 0, suggestFD, suggestFD).fd;\n      },doReadv:function(stream, iov, iovcnt, offset) {\n        var ret = 0;\n        for (var i = 0; i < iovcnt; i++) {\n          var ptr = HEAP32[(((iov)+(i*8))>>2)];\n          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];\n          var curr = FS.read(stream, HEAP8,ptr, len, offset);\n          if (curr < 0) return -1;\n          ret += curr;\n          if (curr < len) break; // nothing more to read\n        }\n        return ret;\n      },doWritev:function(stream, iov, iovcnt, offset) {\n        var ret = 0;\n        for (var i = 0; i < iovcnt; i++) {\n          var ptr = HEAP32[(((iov)+(i*8))>>2)];\n          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];\n          var curr = FS.write(stream, HEAP8,ptr, len, offset);\n          if (curr < 0) return -1;\n          ret += curr;\n        }\n        return ret;\n      },varargs:0,get:function(varargs) {\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];\n        return ret;\n      },getStr:function() {\n        var ret = UTF8ToString(SYSCALLS.get());\n        return ret;\n      },getStreamFromFD:function() {\n        var stream = FS.getStream(SYSCALLS.get());\n        if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);\n        return stream;\n      },getSocketFromFD:function() {\n        var socket = SOCKFS.getSocket(SYSCALLS.get());\n        if (!socket) throw new FS.ErrnoError(ERRNO_CODES.EBADF);\n        return socket;\n      },getSocketAddress:function(allowNull) {\n        var addrp = SYSCALLS.get(), addrlen = SYSCALLS.get();\n        if (allowNull && addrp === 0) return null;\n        var info = __read_sockaddr(addrp, addrlen);\n        if (info.errno) throw new FS.ErrnoError(info.errno);\n        info.addr = DNS.lookup_addr(info.addr) || info.addr;\n        return info;\n      },get64:function() {\n        var low = SYSCALLS.get(), high = SYSCALLS.get();\n        if (low >= 0) assert(high === 0);\n        else assert(high === -1);\n        return low;\n      },getZero:function() {\n        assert(SYSCALLS.get() === 0);\n      }};function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // llseek\n      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();\n      // NOTE: offset_high is unused - Emscripten's off_t is 32-bit\n      var offset = offset_low;\n      FS.llseek(stream, offset, whence);\n      HEAP32[((result)>>2)]=stream.position;\n      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___syscall145(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // readv\n      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();\n      return SYSCALLS.doReadv(stream, iov, iovcnt);\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // writev\n      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();\n      return SYSCALLS.doWritev(stream, iov, iovcnt);\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___syscall221(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // fcntl64\n      var stream = SYSCALLS.getStreamFromFD(), cmd = SYSCALLS.get();\n      switch (cmd) {\n        case 0: {\n          var arg = SYSCALLS.get();\n          if (arg < 0) {\n            return -ERRNO_CODES.EINVAL;\n          }\n          var newStream;\n          newStream = FS.open(stream.path, stream.flags, 0, arg);\n          return newStream.fd;\n        }\n        case 1:\n        case 2:\n          return 0;  // FD_CLOEXEC makes no sense for a single process.\n        case 3:\n          return stream.flags;\n        case 4: {\n          var arg = SYSCALLS.get();\n          stream.flags |= arg;\n          return 0;\n        }\n        case 12:\n        /* case 12: Currently in musl F_GETLK64 has same value as F_GETLK, so omitted to avoid duplicate case blocks. If that changes, uncomment this */ {\n\n          var arg = SYSCALLS.get();\n          var offset = 0;\n          // We're always unlocked.\n          HEAP16[(((arg)+(offset))>>1)]=2;\n          return 0;\n        }\n        case 13:\n        case 14:\n        /* case 13: Currently in musl F_SETLK64 has same value as F_SETLK, so omitted to avoid duplicate case blocks. If that changes, uncomment this */\n        /* case 14: Currently in musl F_SETLKW64 has same value as F_SETLKW, so omitted to avoid duplicate case blocks. If that changes, uncomment this */\n\n\n          return 0; // Pretend that the locking is successful.\n        case 16:\n        case 8:\n          return -ERRNO_CODES.EINVAL; // These are for sockets. We don't have them fully implemented yet.\n        case 9:\n          // musl trusts getown return values, due to a bug where they must be, as they overlap with errors. just return -1 here, so fnctl() returns that, and we set errno ourselves.\n          ___setErrNo(ERRNO_CODES.EINVAL);\n          return -1;\n        default: {\n          return -ERRNO_CODES.EINVAL;\n        }\n      }\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___syscall5(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // open\n      var pathname = SYSCALLS.getStr(), flags = SYSCALLS.get(), mode = SYSCALLS.get() // optional TODO\n      var stream = FS.open(pathname, flags, mode);\n      return stream.fd;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // ioctl\n      var stream = SYSCALLS.getStreamFromFD(), op = SYSCALLS.get();\n      switch (op) {\n        case 21509:\n        case 21505: {\n          if (!stream.tty) return -ERRNO_CODES.ENOTTY;\n          return 0;\n        }\n        case 21510:\n        case 21511:\n        case 21512:\n        case 21506:\n        case 21507:\n        case 21508: {\n          if (!stream.tty) return -ERRNO_CODES.ENOTTY;\n          return 0; // no-op, not actually adjusting terminal settings\n        }\n        case 21519: {\n          if (!stream.tty) return -ERRNO_CODES.ENOTTY;\n          var argp = SYSCALLS.get();\n          HEAP32[((argp)>>2)]=0;\n          return 0;\n        }\n        case 21520: {\n          if (!stream.tty) return -ERRNO_CODES.ENOTTY;\n          return -ERRNO_CODES.EINVAL; // not supported\n        }\n        case 21531: {\n          var argp = SYSCALLS.get();\n          return FS.ioctl(stream, op, argp);\n        }\n        case 21523: {\n          // TODO: in theory we should write to the winsize struct that gets\n          // passed in, but for now musl doesn't read anything on it\n          if (!stream.tty) return -ERRNO_CODES.ENOTTY;\n          return 0;\n        }\n        case 21524: {\n          // TODO: technically, this ioctl call should change the window size.\n          // but, since emscripten doesn't have any concept of a terminal window\n          // yet, we'll just silently throw it away as we do TIOCGWINSZ\n          if (!stream.tty) return -ERRNO_CODES.ENOTTY;\n          return 0;\n        }\n        default: abort('bad ioctl syscall ' + op);\n      }\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // close\n      var stream = SYSCALLS.getStreamFromFD();\n      FS.close(stream);\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___unlock() {}\n\n  function _abort() {\n      Module['abort']();\n    }\n\n  function _emscripten_get_heap_size() {\n      return TOTAL_MEMORY;\n    }\n\n\n  function abortOnCannotGrowMemory(requestedSize) {\n      abort('Cannot enlarge memory arrays to size ' + requestedSize + ' bytes (OOM). Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');\n    }\n\n  function emscripten_realloc_buffer(size) {\n      var PAGE_MULTIPLE = 65536;\n      size = alignUp(size, PAGE_MULTIPLE); // round up to wasm page size\n      var old = Module['buffer'];\n      var oldSize = old.byteLength;\n      // native wasm support\n      try {\n        var result = wasmMemory.grow((size - oldSize) / 65536); // .grow() takes a delta compared to the previous size\n        if (result !== (-1 | 0)) {\n          // success in native wasm memory growth, get the buffer from the memory\n          return Module['buffer'] = wasmMemory.buffer;\n        } else {\n          return null;\n        }\n      } catch(e) {\n        console.error('emscripten_realloc_buffer: Attempted to grow from ' + oldSize  + ' bytes to ' + size + ' bytes, but got error: ' + e);\n        return null;\n      }\n    }function _emscripten_resize_heap(requestedSize) {\n      var oldSize = _emscripten_get_heap_size();\n      // TOTAL_MEMORY is the current size of the actual array, and DYNAMICTOP is the new top.\n      assert(requestedSize > oldSize); // This function should only ever be called after the ceiling of the dynamic heap has already been bumped to exceed the current total size of the asm.js heap.\n\n\n      var PAGE_MULTIPLE = 65536;\n      var LIMIT = 2147483648 - PAGE_MULTIPLE; // We can do one page short of 2GB as theoretical maximum.\n\n      if (requestedSize > LIMIT) {\n        err('Cannot enlarge memory, asked to go up to ' + requestedSize + ' bytes, but the limit is ' + LIMIT + ' bytes!');\n        return false;\n      }\n\n      var MIN_TOTAL_MEMORY = 16777216;\n      var newSize = Math.max(oldSize, MIN_TOTAL_MEMORY); // So the loop below will not be infinite, and minimum asm.js memory size is 16MB.\n\n      while (newSize < requestedSize) { // Keep incrementing the heap size as long as it's less than what is requested.\n        if (newSize <= 536870912) {\n          newSize = alignUp(2 * newSize, PAGE_MULTIPLE); // Simple heuristic: double until 1GB...\n        } else {\n          // ..., but after that, add smaller increments towards 2GB, which we cannot reach\n          newSize = Math.min(alignUp((3 * newSize + 2147483648) / 4, PAGE_MULTIPLE), LIMIT);\n          if (newSize === oldSize) {\n            warnOnce('Cannot ask for more memory since we reached the practical limit in browsers (which is just below 2GB), so the request would have failed. Requesting only ' + TOTAL_MEMORY);\n          }\n        }\n      }\n\n\n      var start = Date.now();\n\n      var replacement = emscripten_realloc_buffer(newSize);\n      if (!replacement || replacement.byteLength != newSize) {\n        err('Failed to grow the heap from ' + oldSize + ' bytes to ' + newSize + ' bytes, not enough memory!');\n        if (replacement) {\n          err('Expected to get back a buffer of size ' + newSize + ' bytes, but instead got back a buffer of size ' + replacement.byteLength);\n        }\n        return false;\n      }\n\n      // everything worked\n      updateGlobalBuffer(replacement);\n      updateGlobalBufferViews();\n\n      TOTAL_MEMORY = newSize;\n      HEAPU32[DYNAMICTOP_PTR>>2] = requestedSize;\n\n\n\n      return true;\n    }\n\n  function _exit(status) {\n      // void _exit(int status);\n      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html\n      exit(status);\n    }\n\n  function _gettimeofday(ptr) {\n      var now = Date.now();\n      HEAP32[((ptr)>>2)]=(now/1000)|0; // seconds\n      HEAP32[(((ptr)+(4))>>2)]=((now % 1000)*1000)|0; // microseconds\n      return 0;\n    }\n\n\n\n\n  var ___tm_current=8439664;\n\n\n  var ___tm_timezone=(stringToUTF8(\"GMT\", 8439712, 4), 8439712);\n\n  function _tzset() {\n      // TODO: Use (malleable) environment variables instead of system settings.\n      if (_tzset.called) return;\n      _tzset.called = true;\n\n      // timezone is specified as seconds west of UTC (\"The external variable\n      // `timezone` shall be set to the difference, in seconds, between\n      // Coordinated Universal Time (UTC) and local standard time.\"), the same\n      // as returned by getTimezoneOffset().\n      // See http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html\n      HEAP32[((__get_timezone())>>2)]=(new Date()).getTimezoneOffset() * 60;\n\n      var winter = new Date(2000, 0, 1);\n      var summer = new Date(2000, 6, 1);\n      HEAP32[((__get_daylight())>>2)]=Number(winter.getTimezoneOffset() != summer.getTimezoneOffset());\n\n      function extractZone(date) {\n        var match = date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);\n        return match ? match[1] : \"GMT\";\n      };\n      var winterName = extractZone(winter);\n      var summerName = extractZone(summer);\n      var winterNamePtr = allocate(intArrayFromString(winterName), 'i8', ALLOC_NORMAL);\n      var summerNamePtr = allocate(intArrayFromString(summerName), 'i8', ALLOC_NORMAL);\n      if (summer.getTimezoneOffset() < winter.getTimezoneOffset()) {\n        // Northern hemisphere\n        HEAP32[((__get_tzname())>>2)]=winterNamePtr;\n        HEAP32[(((__get_tzname())+(4))>>2)]=summerNamePtr;\n      } else {\n        HEAP32[((__get_tzname())>>2)]=summerNamePtr;\n        HEAP32[(((__get_tzname())+(4))>>2)]=winterNamePtr;\n      }\n    }function _localtime_r(time, tmPtr) {\n      _tzset();\n      var date = new Date(HEAP32[((time)>>2)]*1000);\n      HEAP32[((tmPtr)>>2)]=date.getSeconds();\n      HEAP32[(((tmPtr)+(4))>>2)]=date.getMinutes();\n      HEAP32[(((tmPtr)+(8))>>2)]=date.getHours();\n      HEAP32[(((tmPtr)+(12))>>2)]=date.getDate();\n      HEAP32[(((tmPtr)+(16))>>2)]=date.getMonth();\n      HEAP32[(((tmPtr)+(20))>>2)]=date.getFullYear()-1900;\n      HEAP32[(((tmPtr)+(24))>>2)]=date.getDay();\n\n      var start = new Date(date.getFullYear(), 0, 1);\n      var yday = ((date.getTime() - start.getTime()) / (1000 * 60 * 60 * 24))|0;\n      HEAP32[(((tmPtr)+(28))>>2)]=yday;\n      HEAP32[(((tmPtr)+(36))>>2)]=-(date.getTimezoneOffset() * 60);\n\n      // Attention: DST is in December in South, and some regions don't have DST at all.\n      var summerOffset = new Date(2000, 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset))|0;\n      HEAP32[(((tmPtr)+(32))>>2)]=dst;\n\n      var zonePtr = HEAP32[(((__get_tzname())+(dst ? 4 : 0))>>2)];\n      HEAP32[(((tmPtr)+(40))>>2)]=zonePtr;\n\n      return tmPtr;\n    }function _localtime(time) {\n      return _localtime_r(time, ___tm_current);\n    }\n\n\n  function _emscripten_memcpy_big(dest, src, num) {\n      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);\n    }\n\n  var _Int8Array=undefined;\n\n  var _Int32Array=undefined;\n\n\n\n\n\n  function _sysconf(name) {\n      // long sysconf(int name);\n      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html\n      switch(name) {\n        case 30: return PAGE_SIZE;\n        case 85:\n          var maxHeapSize = 2*1024*1024*1024 - 65536;\n          return maxHeapSize / PAGE_SIZE;\n        case 132:\n        case 133:\n        case 12:\n        case 137:\n        case 138:\n        case 15:\n        case 235:\n        case 16:\n        case 17:\n        case 18:\n        case 19:\n        case 20:\n        case 149:\n        case 13:\n        case 10:\n        case 236:\n        case 153:\n        case 9:\n        case 21:\n        case 22:\n        case 159:\n        case 154:\n        case 14:\n        case 77:\n        case 78:\n        case 139:\n        case 80:\n        case 81:\n        case 82:\n        case 68:\n        case 67:\n        case 164:\n        case 11:\n        case 29:\n        case 47:\n        case 48:\n        case 95:\n        case 52:\n        case 51:\n        case 46:\n          return 200809;\n        case 79:\n          return 0;\n        case 27:\n        case 246:\n        case 127:\n        case 128:\n        case 23:\n        case 24:\n        case 160:\n        case 161:\n        case 181:\n        case 182:\n        case 242:\n        case 183:\n        case 184:\n        case 243:\n        case 244:\n        case 245:\n        case 165:\n        case 178:\n        case 179:\n        case 49:\n        case 50:\n        case 168:\n        case 169:\n        case 175:\n        case 170:\n        case 171:\n        case 172:\n        case 97:\n        case 76:\n        case 32:\n        case 173:\n        case 35:\n          return -1;\n        case 176:\n        case 177:\n        case 7:\n        case 155:\n        case 8:\n        case 157:\n        case 125:\n        case 126:\n        case 92:\n        case 93:\n        case 129:\n        case 130:\n        case 131:\n        case 94:\n        case 91:\n          return 1;\n        case 74:\n        case 60:\n        case 69:\n        case 70:\n        case 4:\n          return 1024;\n        case 31:\n        case 42:\n        case 72:\n          return 32;\n        case 87:\n        case 26:\n        case 33:\n          return 2147483647;\n        case 34:\n        case 1:\n          return 47839;\n        case 38:\n        case 36:\n          return 99;\n        case 43:\n        case 37:\n          return 2048;\n        case 0: return 2097152;\n        case 3: return 65536;\n        case 28: return 32768;\n        case 44: return 32767;\n        case 75: return 16384;\n        case 39: return 1000;\n        case 89: return 700;\n        case 71: return 256;\n        case 40: return 255;\n        case 2: return 100;\n        case 180: return 64;\n        case 25: return 20;\n        case 5: return 16;\n        case 6: return 6;\n        case 73: return 4;\n        case 84: {\n          if (typeof navigator === 'object') return navigator['hardwareConcurrency'] || 1;\n          return 1;\n        }\n      }\n      ___setErrNo(22);\n      return -1;\n    }\n\n  function _time(ptr) {\n      var ret = (Date.now()/1000)|0;\n      if (ptr) {\n        HEAP32[((ptr)>>2)]=ret;\n      }\n      return ret;\n    }\n\n  function _times(buffer) {\n      // clock_t times(struct tms *buffer);\n      // http://pubs.opengroup.org/onlinepubs/009695399/functions/times.html\n      // NOTE: This is fake, since we can't calculate real CPU time usage in JS.\n      if (buffer !== 0) {\n        _memset(buffer, 0, 16);\n      }\n      return 0;\n    }\nFS.staticInit();;\nif (ENVIRONMENT_IS_NODE) { var fs = require(\"fs\"); var NODEJS_PATH = require(\"path\"); NODEFS.staticInit(); };\nvar ASSERTIONS = true;\n\n// Copyright 2017 The Emscripten Authors.  All rights reserved.\n// Emscripten is available under two separate licenses, the MIT license and the\n// University of Illinois/NCSA Open Source License.  Both these licenses can be\n// found in the LICENSE file.\n\n/** @type {function(string, boolean=, number=)} */\nfunction intArrayFromString(stringy, dontAddNull, length) {\n  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;\n  var u8array = new Array(len);\n  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n  if (dontAddNull) u8array.length = numBytesWritten;\n  return u8array;\n}\n\nfunction intArrayToString(array) {\n  var ret = [];\n  for (var i = 0; i < array.length; i++) {\n    var chr = array[i];\n    if (chr > 0xFF) {\n      if (ASSERTIONS) {\n        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');\n      }\n      chr &= 0xFF;\n    }\n    ret.push(String.fromCharCode(chr));\n  }\n  return ret.join('');\n}\n\n\n// ASM_LIBRARY EXTERN PRIMITIVES: Int8Array,Int32Array\n\n\nfunction nullFunc_ii(x) { err(\"Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  err(\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_iii(x) { err(\"Invalid function pointer called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  err(\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_iiii(x) { err(\"Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  err(\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_iiiii(x) { err(\"Invalid function pointer called with signature 'iiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  err(\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_vi(x) { err(\"Invalid function pointer called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  err(\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_vii(x) { err(\"Invalid function pointer called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  err(\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_viii(x) { err(\"Invalid function pointer called with signature 'viii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  err(\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_viiiii(x) { err(\"Invalid function pointer called with signature 'viiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  err(\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_viiiiii(x) { err(\"Invalid function pointer called with signature 'viiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  err(\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_viiiiiii(x) { err(\"Invalid function pointer called with signature 'viiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  err(\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nvar asmGlobalArg = {}\n\nvar asmLibraryArg = { \"abort\": abort, \"setTempRet0\": setTempRet0, \"getTempRet0\": getTempRet0, \"abortStackOverflow\": abortStackOverflow, \"nullFunc_ii\": nullFunc_ii, \"nullFunc_iii\": nullFunc_iii, \"nullFunc_iiii\": nullFunc_iiii, \"nullFunc_iiiii\": nullFunc_iiiii, \"nullFunc_vi\": nullFunc_vi, \"nullFunc_vii\": nullFunc_vii, \"nullFunc_viii\": nullFunc_viii, \"nullFunc_viiiii\": nullFunc_viiiii, \"nullFunc_viiiiii\": nullFunc_viiiiii, \"nullFunc_viiiiiii\": nullFunc_viiiiiii, \"___assert_fail\": ___assert_fail, \"___buildEnvironment\": ___buildEnvironment, \"___lock\": ___lock, \"___setErrNo\": ___setErrNo, \"___syscall140\": ___syscall140, \"___syscall145\": ___syscall145, \"___syscall146\": ___syscall146, \"___syscall221\": ___syscall221, \"___syscall5\": ___syscall5, \"___syscall54\": ___syscall54, \"___syscall6\": ___syscall6, \"___unlock\": ___unlock, \"_abort\": _abort, \"_emscripten_get_heap_size\": _emscripten_get_heap_size, \"_emscripten_memcpy_big\": _emscripten_memcpy_big, \"_emscripten_resize_heap\": _emscripten_resize_heap, \"_exit\": _exit, \"_gettimeofday\": _gettimeofday, \"_localtime\": _localtime, \"_localtime_r\": _localtime_r, \"_sysconf\": _sysconf, \"_time\": _time, \"_times\": _times, \"_tzset\": _tzset, \"abortOnCannotGrowMemory\": abortOnCannotGrowMemory, \"emscripten_realloc_buffer\": emscripten_realloc_buffer, \"tempDoublePtr\": tempDoublePtr, \"DYNAMICTOP_PTR\": DYNAMICTOP_PTR }\n// EMSCRIPTEN_START_ASM\nvar asm =Module[\"asm\"]// EMSCRIPTEN_END_ASM\n(asmGlobalArg, asmLibraryArg, buffer);\n\nvar real____emscripten_environ_constructor = asm[\"___emscripten_environ_constructor\"]; asm[\"___emscripten_environ_constructor\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real____emscripten_environ_constructor.apply(null, arguments);\n};\n\nvar real____errno_location = asm[\"___errno_location\"]; asm[\"___errno_location\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real____errno_location.apply(null, arguments);\n};\n\nvar real___get_daylight = asm[\"__get_daylight\"]; asm[\"__get_daylight\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real___get_daylight.apply(null, arguments);\n};\n\nvar real___get_environ = asm[\"__get_environ\"]; asm[\"__get_environ\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real___get_environ.apply(null, arguments);\n};\n\nvar real___get_timezone = asm[\"__get_timezone\"]; asm[\"__get_timezone\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real___get_timezone.apply(null, arguments);\n};\n\nvar real___get_tzname = asm[\"__get_tzname\"]; asm[\"__get_tzname\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real___get_tzname.apply(null, arguments);\n};\n\nvar real__fflush = asm[\"_fflush\"]; asm[\"_fflush\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real__fflush.apply(null, arguments);\n};\n\nvar real__free = asm[\"_free\"]; asm[\"_free\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real__free.apply(null, arguments);\n};\n\nvar real__get_version = asm[\"_get_version\"]; asm[\"_get_version\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real__get_version.apply(null, arguments);\n};\n\nvar real__llvm_bswap_i32 = asm[\"_llvm_bswap_i32\"]; asm[\"_llvm_bswap_i32\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real__llvm_bswap_i32.apply(null, arguments);\n};\n\nvar real__malloc = asm[\"_malloc\"]; asm[\"_malloc\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real__malloc.apply(null, arguments);\n};\n\nvar real__play = asm[\"_play\"]; asm[\"_play\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real__play.apply(null, arguments);\n};\n\nvar real__sbrk = asm[\"_sbrk\"]; asm[\"_sbrk\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real__sbrk.apply(null, arguments);\n};\n\nvar real_establishStackSpace = asm[\"establishStackSpace\"]; asm[\"establishStackSpace\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real_establishStackSpace.apply(null, arguments);\n};\n\nvar real_stackAlloc = asm[\"stackAlloc\"]; asm[\"stackAlloc\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real_stackAlloc.apply(null, arguments);\n};\n\nvar real_stackRestore = asm[\"stackRestore\"]; asm[\"stackRestore\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real_stackRestore.apply(null, arguments);\n};\n\nvar real_stackSave = asm[\"stackSave\"]; asm[\"stackSave\"] = function() {\n  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\n  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\n  return real_stackSave.apply(null, arguments);\n};\nvar ___emscripten_environ_constructor = Module[\"___emscripten_environ_constructor\"] = asm[\"___emscripten_environ_constructor\"];\nvar ___errno_location = Module[\"___errno_location\"] = asm[\"___errno_location\"];\nvar __get_daylight = Module[\"__get_daylight\"] = asm[\"__get_daylight\"];\nvar __get_environ = Module[\"__get_environ\"] = asm[\"__get_environ\"];\nvar __get_timezone = Module[\"__get_timezone\"] = asm[\"__get_timezone\"];\nvar __get_tzname = Module[\"__get_tzname\"] = asm[\"__get_tzname\"];\nvar _emscripten_replace_memory = Module[\"_emscripten_replace_memory\"] = asm[\"_emscripten_replace_memory\"];\nvar _fflush = Module[\"_fflush\"] = asm[\"_fflush\"];\nvar _free = Module[\"_free\"] = asm[\"_free\"];\nvar _get_version = Module[\"_get_version\"] = asm[\"_get_version\"];\nvar _llvm_bswap_i32 = Module[\"_llvm_bswap_i32\"] = asm[\"_llvm_bswap_i32\"];\nvar _malloc = Module[\"_malloc\"] = asm[\"_malloc\"];\nvar _memcpy = Module[\"_memcpy\"] = asm[\"_memcpy\"];\nvar _memset = Module[\"_memset\"] = asm[\"_memset\"];\nvar _play = Module[\"_play\"] = asm[\"_play\"];\nvar _sbrk = Module[\"_sbrk\"] = asm[\"_sbrk\"];\nvar establishStackSpace = Module[\"establishStackSpace\"] = asm[\"establishStackSpace\"];\nvar stackAlloc = Module[\"stackAlloc\"] = asm[\"stackAlloc\"];\nvar stackRestore = Module[\"stackRestore\"] = asm[\"stackRestore\"];\nvar stackSave = Module[\"stackSave\"] = asm[\"stackSave\"];\nvar dynCall_ii = Module[\"dynCall_ii\"] = asm[\"dynCall_ii\"];\nvar dynCall_iii = Module[\"dynCall_iii\"] = asm[\"dynCall_iii\"];\nvar dynCall_iiii = Module[\"dynCall_iiii\"] = asm[\"dynCall_iiii\"];\nvar dynCall_iiiii = Module[\"dynCall_iiiii\"] = asm[\"dynCall_iiiii\"];\nvar dynCall_vi = Module[\"dynCall_vi\"] = asm[\"dynCall_vi\"];\nvar dynCall_vii = Module[\"dynCall_vii\"] = asm[\"dynCall_vii\"];\nvar dynCall_viii = Module[\"dynCall_viii\"] = asm[\"dynCall_viii\"];\nvar dynCall_viiiii = Module[\"dynCall_viiiii\"] = asm[\"dynCall_viiiii\"];\nvar dynCall_viiiiii = Module[\"dynCall_viiiiii\"] = asm[\"dynCall_viiiiii\"];\nvar dynCall_viiiiiii = Module[\"dynCall_viiiiiii\"] = asm[\"dynCall_viiiiiii\"];\n;\n\n\n\n// === Auto-generated postamble setup entry stuff ===\n\nModule['asm'] = asm;\n\nif (!Module[\"intArrayFromString\"]) Module[\"intArrayFromString\"] = function() { abort(\"'intArrayFromString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"intArrayToString\"]) Module[\"intArrayToString\"] = function() { abort(\"'intArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nModule[\"ccall\"] = ccall;\nif (!Module[\"cwrap\"]) Module[\"cwrap\"] = function() { abort(\"'cwrap' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"setValue\"]) Module[\"setValue\"] = function() { abort(\"'setValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"getValue\"]) Module[\"getValue\"] = function() { abort(\"'getValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"allocate\"]) Module[\"allocate\"] = function() { abort(\"'allocate' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"getMemory\"]) Module[\"getMemory\"] = function() { abort(\"'getMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Module[\"AsciiToString\"]) Module[\"AsciiToString\"] = function() { abort(\"'AsciiToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"stringToAscii\"]) Module[\"stringToAscii\"] = function() { abort(\"'stringToAscii' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"UTF8ArrayToString\"]) Module[\"UTF8ArrayToString\"] = function() { abort(\"'UTF8ArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"UTF8ToString\"]) Module[\"UTF8ToString\"] = function() { abort(\"'UTF8ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"stringToUTF8Array\"]) Module[\"stringToUTF8Array\"] = function() { abort(\"'stringToUTF8Array' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"stringToUTF8\"]) Module[\"stringToUTF8\"] = function() { abort(\"'stringToUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"lengthBytesUTF8\"]) Module[\"lengthBytesUTF8\"] = function() { abort(\"'lengthBytesUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"UTF16ToString\"]) Module[\"UTF16ToString\"] = function() { abort(\"'UTF16ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"stringToUTF16\"]) Module[\"stringToUTF16\"] = function() { abort(\"'stringToUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"lengthBytesUTF16\"]) Module[\"lengthBytesUTF16\"] = function() { abort(\"'lengthBytesUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"UTF32ToString\"]) Module[\"UTF32ToString\"] = function() { abort(\"'UTF32ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"stringToUTF32\"]) Module[\"stringToUTF32\"] = function() { abort(\"'stringToUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"lengthBytesUTF32\"]) Module[\"lengthBytesUTF32\"] = function() { abort(\"'lengthBytesUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"allocateUTF8\"]) Module[\"allocateUTF8\"] = function() { abort(\"'allocateUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"stackTrace\"]) Module[\"stackTrace\"] = function() { abort(\"'stackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"addOnPreRun\"]) Module[\"addOnPreRun\"] = function() { abort(\"'addOnPreRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"addOnInit\"]) Module[\"addOnInit\"] = function() { abort(\"'addOnInit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"addOnPreMain\"]) Module[\"addOnPreMain\"] = function() { abort(\"'addOnPreMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"addOnExit\"]) Module[\"addOnExit\"] = function() { abort(\"'addOnExit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"addOnPostRun\"]) Module[\"addOnPostRun\"] = function() { abort(\"'addOnPostRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"writeStringToMemory\"]) Module[\"writeStringToMemory\"] = function() { abort(\"'writeStringToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"writeArrayToMemory\"]) Module[\"writeArrayToMemory\"] = function() { abort(\"'writeArrayToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"writeAsciiToMemory\"]) Module[\"writeAsciiToMemory\"] = function() { abort(\"'writeAsciiToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"addRunDependency\"]) Module[\"addRunDependency\"] = function() { abort(\"'addRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Module[\"removeRunDependency\"]) Module[\"removeRunDependency\"] = function() { abort(\"'removeRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Module[\"ENV\"]) Module[\"ENV\"] = function() { abort(\"'ENV' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"FS\"]) Module[\"FS\"] = function() { abort(\"'FS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"FS_createFolder\"]) Module[\"FS_createFolder\"] = function() { abort(\"'FS_createFolder' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Module[\"FS_createPath\"]) Module[\"FS_createPath\"] = function() { abort(\"'FS_createPath' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Module[\"FS_createDataFile\"]) Module[\"FS_createDataFile\"] = function() { abort(\"'FS_createDataFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Module[\"FS_createPreloadedFile\"]) Module[\"FS_createPreloadedFile\"] = function() { abort(\"'FS_createPreloadedFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Module[\"FS_createLazyFile\"]) Module[\"FS_createLazyFile\"] = function() { abort(\"'FS_createLazyFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Module[\"FS_createLink\"]) Module[\"FS_createLink\"] = function() { abort(\"'FS_createLink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Module[\"FS_createDevice\"]) Module[\"FS_createDevice\"] = function() { abort(\"'FS_createDevice' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Module[\"FS_unlink\"]) Module[\"FS_unlink\"] = function() { abort(\"'FS_unlink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\nif (!Module[\"GL\"]) Module[\"GL\"] = function() { abort(\"'GL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"dynamicAlloc\"]) Module[\"dynamicAlloc\"] = function() { abort(\"'dynamicAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"warnOnce\"]) Module[\"warnOnce\"] = function() { abort(\"'warnOnce' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"loadDynamicLibrary\"]) Module[\"loadDynamicLibrary\"] = function() { abort(\"'loadDynamicLibrary' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"loadWebAssemblyModule\"]) Module[\"loadWebAssemblyModule\"] = function() { abort(\"'loadWebAssemblyModule' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"getLEB\"]) Module[\"getLEB\"] = function() { abort(\"'getLEB' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"getFunctionTables\"]) Module[\"getFunctionTables\"] = function() { abort(\"'getFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"alignFunctionTables\"]) Module[\"alignFunctionTables\"] = function() { abort(\"'alignFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"registerFunctions\"]) Module[\"registerFunctions\"] = function() { abort(\"'registerFunctions' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"addFunction\"]) Module[\"addFunction\"] = function() { abort(\"'addFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"removeFunction\"]) Module[\"removeFunction\"] = function() { abort(\"'removeFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"getFuncWrapper\"]) Module[\"getFuncWrapper\"] = function() { abort(\"'getFuncWrapper' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"prettyPrint\"]) Module[\"prettyPrint\"] = function() { abort(\"'prettyPrint' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"makeBigInt\"]) Module[\"makeBigInt\"] = function() { abort(\"'makeBigInt' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"dynCall\"]) Module[\"dynCall\"] = function() { abort(\"'dynCall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"getCompilerSetting\"]) Module[\"getCompilerSetting\"] = function() { abort(\"'getCompilerSetting' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"stackSave\"]) Module[\"stackSave\"] = function() { abort(\"'stackSave' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"stackRestore\"]) Module[\"stackRestore\"] = function() { abort(\"'stackRestore' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"stackAlloc\"]) Module[\"stackAlloc\"] = function() { abort(\"'stackAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"establishStackSpace\"]) Module[\"establishStackSpace\"] = function() { abort(\"'establishStackSpace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"print\"]) Module[\"print\"] = function() { abort(\"'print' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"printErr\"]) Module[\"printErr\"] = function() { abort(\"'printErr' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"getTempRet0\"]) Module[\"getTempRet0\"] = function() { abort(\"'getTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"setTempRet0\"]) Module[\"setTempRet0\"] = function() { abort(\"'setTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\nif (!Module[\"Pointer_stringify\"]) Module[\"Pointer_stringify\"] = function() { abort(\"'Pointer_stringify' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") };if (!Module[\"ALLOC_NORMAL\"]) Object.defineProperty(Module, \"ALLOC_NORMAL\", { get: function() { abort(\"'ALLOC_NORMAL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") } });\nif (!Module[\"ALLOC_STACK\"]) Object.defineProperty(Module, \"ALLOC_STACK\", { get: function() { abort(\"'ALLOC_STACK' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") } });\nif (!Module[\"ALLOC_DYNAMIC\"]) Object.defineProperty(Module, \"ALLOC_DYNAMIC\", { get: function() { abort(\"'ALLOC_DYNAMIC' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") } });\nif (!Module[\"ALLOC_NONE\"]) Object.defineProperty(Module, \"ALLOC_NONE\", { get: function() { abort(\"'ALLOC_NONE' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)\") } });\n\n\n\n\n/**\n * @constructor\n * @extends {Error}\n * @this {ExitStatus}\n */\nfunction ExitStatus(status) {\n  this.name = \"ExitStatus\";\n  this.message = \"Program terminated with exit(\" + status + \")\";\n  this.status = status;\n};\nExitStatus.prototype = new Error();\nExitStatus.prototype.constructor = ExitStatus;\n\nvar calledMain = false;\n\ndependenciesFulfilled = function runCaller() {\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\n  if (!Module['calledRun']) run();\n  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\n}\n\n\n\n\n\n/** @type {function(Array=)} */\nfunction run(args) {\n  args = args || Module['arguments'];\n\n  if (runDependencies > 0) {\n    return;\n  }\n\n  writeStackCookie();\n\n  preRun();\n\n  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later\n  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame\n\n  function doRun() {\n    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening\n    Module['calledRun'] = true;\n\n    if (ABORT) return;\n\n    ensureInitRuntime();\n\n    preMain();\n\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n    assert(!Module['_main'], 'compiled without a main, but one is present. if you added it from JS, use Module[\"onRuntimeInitialized\"]');\n\n    postRun();\n  }\n\n  if (Module['setStatus']) {\n    Module['setStatus']('Running...');\n    setTimeout(function() {\n      setTimeout(function() {\n        Module['setStatus']('');\n      }, 1);\n      doRun();\n    }, 1);\n  } else {\n    doRun();\n  }\n  checkStackCookie();\n}\nModule['run'] = run;\n\nfunction checkUnflushedContent() {\n  // Compiler settings do not allow exiting the runtime, so flushing\n  // the streams is not possible. but in ASSERTIONS mode we check\n  // if there was something to flush, and if so tell the user they\n  // should request that the runtime be exitable.\n  // Normally we would not even include flush() at all, but in ASSERTIONS\n  // builds we do so just for this check, and here we see if there is any\n  // content to flush, that is, we check if there would have been\n  // something a non-ASSERTIONS build would have not seen.\n  // How we flush the streams depends on whether we are in FILESYSTEM=0\n  // mode (which has its own special function for this; otherwise, all\n  // the code is inside libc)\n  var print = out;\n  var printErr = err;\n  var has = false;\n  out = err = function(x) {\n    has = true;\n  }\n  try { // it doesn't matter if it fails\n    var flush = Module['_fflush'];\n    if (flush) flush(0);\n    // also flush in the JS FS layer\n    var hasFS = true;\n    if (hasFS) {\n      ['stdout', 'stderr'].forEach(function(name) {\n        var info = FS.analyzePath('/dev/' + name);\n        if (!info) return;\n        var stream = info.object;\n        var rdev = stream.rdev;\n        var tty = TTY.ttys[rdev];\n        if (tty && tty.output && tty.output.length) {\n          has = true;\n        }\n      });\n    }\n  } catch(e) {}\n  out = print;\n  err = printErr;\n  if (has) {\n    warnOnce('stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.');\n  }\n}\n\nfunction exit(status, implicit) {\n  checkUnflushedContent();\n\n  // if this is just main exit-ing implicitly, and the status is 0, then we\n  // don't need to do anything here and can just leave. if the status is\n  // non-zero, though, then we need to report it.\n  // (we may have warned about this earlier, if a situation justifies doing so)\n  if (implicit && Module['noExitRuntime'] && status === 0) {\n    return;\n  }\n\n  if (Module['noExitRuntime']) {\n    // if exit() was called, we may warn the user if the runtime isn't actually being shut down\n    if (!implicit) {\n      err('exit(' + status + ') called, but EXIT_RUNTIME is not set, so halting execution but not exiting the runtime or preventing further async execution (build with EXIT_RUNTIME=1, if you want a true shutdown)');\n    }\n  } else {\n\n    ABORT = true;\n    EXITSTATUS = status;\n\n    exitRuntime();\n\n    if (Module['onExit']) Module['onExit'](status);\n  }\n\n  Module['quit'](status, new ExitStatus(status));\n}\n\nvar abortDecorators = [];\n\nfunction abort(what) {\n  if (Module['onAbort']) {\n    Module['onAbort'](what);\n  }\n\n  if (what !== undefined) {\n    out(what);\n    err(what);\n    what = JSON.stringify(what)\n  } else {\n    what = '';\n  }\n\n  ABORT = true;\n  EXITSTATUS = 1;\n\n  var extra = '';\n  var output = 'abort(' + what + ') at ' + stackTrace() + extra;\n  if (abortDecorators) {\n    abortDecorators.forEach(function(decorator) {\n      output = decorator(output, what);\n    });\n  }\n  throw output;\n}\nModule['abort'] = abort;\n\nif (Module['preInit']) {\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n  while (Module['preInit'].length > 0) {\n    Module['preInit'].pop()();\n  }\n}\n\n\n  Module[\"noExitRuntime\"] = true;\n\nrun();\n\n\n\n\n\n// {{MODULE_ADDITIONS}}\n\n\n};\n","let main = require(\"../gnugo.js\");\n\nexports.load = function(wasmURL, callback) {\nvar Module = {};\nvar ASSERTIONS = 1;\n/**\n * @license\n * Copyright 2017 The Emscripten Authors\n * SPDX-License-Identifier: MIT\n */\n\nfunction hasPrefix(str, prefix) {\n  return String.prototype.startsWith\n    ? str.startsWith(prefix)\n    : str.indexOf(prefix) === 0;\n}\n\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\nvar dataURIPrefix = \"data:application/octet-stream;base64,\";\n\n// Indicates whether filename is a base64 data URI.\nfunction isDataURI(filename) {\n  return hasPrefix(filename, dataURIPrefix);\n}\n\nvar fileURIPrefix = \"file://\";\n\n// Indicates whether filename is delivered via file protocol (as opposed to http/https)\nfunction isFileURI(filename) {\n  return hasPrefix(filename, fileURIPrefix);\n}\n\n// Copied from https://github.com/strophe/strophejs/blob/e06d027/src/polyfills.js#L149\n\n// This code was written by Tyler Akins and has been placed in the\n// public domain.  It would be nice if you left this header intact.\n// Base64 code from Tyler Akins -- http://rumkin.com\n\n/**\n * Decodes a base64 string.\n * @param {string} input The string to decode.\n */\nvar decodeBase64 =\n  typeof atob === \"function\"\n    ? atob\n    : function (input) {\n        var keyStr =\n          \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n        var output = \"\";\n        var chr1, chr2, chr3;\n        var enc1, enc2, enc3, enc4;\n        var i = 0;\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n        do {\n          enc1 = keyStr.indexOf(input.charAt(i++));\n          enc2 = keyStr.indexOf(input.charAt(i++));\n          enc3 = keyStr.indexOf(input.charAt(i++));\n          enc4 = keyStr.indexOf(input.charAt(i++));\n\n          chr1 = (enc1 << 2) | (enc2 >> 4);\n          chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n          chr3 = ((enc3 & 3) << 6) | enc4;\n\n          output = output + String.fromCharCode(chr1);\n\n          if (enc3 !== 64) {\n            output = output + String.fromCharCode(chr2);\n          }\n          if (enc4 !== 64) {\n            output = output + String.fromCharCode(chr3);\n          }\n        } while (i < input.length);\n        return output;\n      };\n\n// Converts a string of base64 into a byte array.\n// Throws error on invalid input.\nfunction intArrayFromBase64(s) {\n  if (typeof ENVIRONMENT_IS_NODE === \"boolean\" && ENVIRONMENT_IS_NODE) {\n    var buf;\n    try {\n      // TODO: Update Node.js externs, Closure does not recognize the following Buffer.from()\n      /**@suppress{checkTypes}*/\n      buf = Buffer.from(s, \"base64\");\n    } catch (_) {\n      buf = new Buffer(s, \"base64\");\n    }\n    return new Uint8Array(buf[\"buffer\"], buf[\"byteOffset\"], buf[\"byteLength\"]);\n  }\n\n  try {\n    var decoded = decodeBase64(s);\n    var bytes = new Uint8Array(decoded.length);\n    for (var i = 0; i < decoded.length; ++i) {\n      bytes[i] = decoded.charCodeAt(i);\n    }\n    return bytes;\n  } catch (_) {\n    throw new Error(\"Converting base64 string to bytes failed.\");\n  }\n}\n\n// If filename is a base64 data URI, parses and returns data (Buffer on node,\n// Uint8Array otherwise). If filename is not a base64 data URI, returns undefined.\nfunction tryParseAsDataURI(filename) {\n  if (!isDataURI(filename)) {\n    return;\n  }\n\n  return intArrayFromBase64(filename.slice(dataURIPrefix.length));\n}\n\n/**\n * @license\n * Copyright 2017 The Emscripten Authors\n * SPDX-License-Identifier: MIT\n */\n\n/** @type {function(string, boolean=, number=)} */\nfunction intArrayFromString(stringy, dontAddNull, length) {\n  var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n  var u8array = new Array(len);\n  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n  if (dontAddNull) u8array.length = numBytesWritten;\n  return u8array;\n}\n\nfunction intArrayToString(array) {\n  var ret = [];\n  for (var i = 0; i < array.length; i++) {\n    var chr = array[i];\n    if (chr > 0xff) {\n      if (ASSERTIONS) {\n        assert(\n          false,\n          \"Character code \" +\n            chr +\n            \" (\" +\n            String.fromCharCode(chr) +\n            \")  at offset \" +\n            i +\n            \" not in 0x00-0xFF.\"\n        );\n      }\n      chr &= 0xff;\n    }\n    ret.push(String.fromCharCode(chr));\n  }\n  return ret.join(\"\");\n}\n\nvar wasmURL = \"gnugo.wasm\";\nvar wasmXHR = new XMLHttpRequest();\nwasmXHR.open(\"GET\", wasmURL, true);\nwasmXHR.responseType = \"arraybuffer\";\nwasmXHR.onload = function () {\n  if (wasmXHR.status === 200 || wasmXHR.status === 0) {\n    Module.wasmBinary = wasmXHR.response;\n  } else {\n    var wasmURLBytes = tryParseAsDataURI(wasmURL);\n    if (wasmURLBytes) {\n      Module.wasmBinary = wasmURLBytes.buffer;\n    }\n  }\n\n  main.init(Module);\n  callback(Module)()\n};\nwasmXHR.send(null);\n}\n","let loader = require(\"./loader.js\");\nloader.load(\"./gnugo.wasm\", (Module) => () => {\n  document.querySelector(\"#gnugoOutput\").innerHTML = \"Ready to play!\";\n  document.querySelector(\"#playButton\").addEventListener(\"click\", function () {\n    let input = document.querySelector(\"#textInput\").value;\n    let output = Module.ccall(\n      \"play\",\n      \"string\",\n      [\"number\", \"string\"],\n      [0, input]\n    );\n    document.querySelector(\"#gnugoOutput\").innerHTML = output;\n  });\n});\n"]}